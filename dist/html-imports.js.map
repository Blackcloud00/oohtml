{
  "version": 3,
  "sources": ["../../observer/src/main.js", "../../observer/node_modules/@webqit/util/js/isObject.js", "../../observer/node_modules/@webqit/util/js/getType.js", "../../observer/node_modules/@webqit/util/js/isArray.js", "../../observer/node_modules/@webqit/util/arr/intersect.js", "../../observer/node_modules/@webqit/util/js/internals.js", "../../observer/node_modules/@webqit/util/js/isTypeFunction.js", "../../observer/node_modules/@webqit/util/js/isClass.js", "../../observer/node_modules/@webqit/util/js/isNull.js", "../../observer/node_modules/@webqit/util/js/isUndefined.js", "../../observer/node_modules/@webqit/util/js/isTypeObject.js", "../../observer/node_modules/@webqit/util/js/isEmpty.js", "../../observer/node_modules/@webqit/util/js/isFunction.js", "../../observer/node_modules/@webqit/util/js/isString.js", "../../observer/node_modules/@webqit/util/js/isTypeArray.js", "../../observer/node_modules/@webqit/util/arr/from.js", "../../observer/src/core/Registration.js", "../../observer/src/util.js", "../../observer/src/core/ListenerRegistration.js", "../../observer/src/core/Registry.js", "../../observer/src/core/ListenerRegistry.js", "../../observer/src/core/TrapsRegistration.js", "../../observer/src/core/TrapsRegistry.js", "../../observer/src/core/Descriptor.js", "../../observer/src/actors.js", "../../observer/src/index.js", "../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/arr/intersect.js", "../node_modules/@webqit/util/js/internals.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/js/isNumber.js", "../node_modules/@webqit/util/js/isNumeric.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/arr/pushUnique.js", "../node_modules/@webqit/util/obj/getPrototypeChain.js", "../node_modules/@webqit/util/obj/getAllPropertyNames.js", "../node_modules/@webqit/util/obj/mergeCallback.js", "../node_modules/@webqit/util/obj/merge.js", "../node_modules/@webqit/util/arr/from.js", "../node_modules/@webqit/util/obj/get.js", "../node_modules/@webqit/util/obj/set.js", "../node_modules/@webqit/realdom/src/Scheduler.js", "../node_modules/@webqit/realdom/src/realtime/Realtime.js", "../node_modules/@webqit/realdom/src/realtime/AttrRealtime.js", "../node_modules/@webqit/realdom/src/realtime/DOMRealtime.js", "../node_modules/@webqit/realdom/src/polyfills.js", "../node_modules/@webqit/realdom/src/index.js", "../src/util.js", "../src/context-api/_ContextRequestEvent.js", "../src/context-api/HTMLContext.js", "../src/context-api/HTMLContextProvider.js", "../src/html-imports/_HTMLExportsManager.js", "../src/html-imports/_HTMLImportsProvider.js", "../src/html-imports/_HTMLImportElement.js", "../src/html-imports/index.js", "../src/html-imports/targets.browser.js"],
  "sourcesContent": ["\n/**\n * @imports\n */\nimport { _isObject, _isTypeObject, _isFunction, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport ListenerRegistry from './core/ListenerRegistry.js';\nimport TrapsRegistry from './core/TrapsRegistry.js';\nimport Descriptor from './core/Descriptor.js';\nimport { unproxy } from './actors.js';\nimport { _, _await } from './util.js';\n\n/* ---------------SPECIAL APIs--------------- */\n\n/**\n * Reduces a path array against handler.\n * \n * @param Array|Object\t    target\n * @param Array\t            path\n * @param Function\t        receiver\n * @param Function\t        final\n * @param Object\t        params\n * \n * @example deep( object, [ segement1, segement2 ], observe, ( value, flags ) => {}, params );\n *\n * @return Any\n */\nexport function deep( target, path, receiver, final = x => x, params = {} ) {\n    if ( !path.length ) return;\n    return ( function eat( target, path, $params ) {\n        const segment = path[ $params.level ];\n        const isLastSegment = $params.level === path.length - 1;\n        if ( target instanceof Descriptor && target.type !== 'get' ) {\n            // Always probe event-generated trees\n            $params = { ...$params, probe: 'always' };\n        } else if ( $params.probe !== 'always' ) {\n            // Probe until (before) last segment\n            $params = { ...$params, probe: !isLastSegment };\n        }\n        // ---------------\n        return receiver( target, segment, ( result, ...args ) => {\n            // -----------\n            const addTrail = desc => {\n                if ( !( desc instanceof Descriptor ) ) return;\n                desc.path = [ desc.key ];\n                if ( target instanceof Descriptor ) {\n                    desc.path = target.path.concat( desc.key );\n                    Object.defineProperty( desc, 'context', { get: () => target, configurable: true } );\n                }\n            };\n            const advance = result => {\n                const $value = resolveObj( result/* a Descriptor who's value could be proxied */, false );\n                return _await( $value/* could be a promise */, $value => {\n                    if ( result instanceof Descriptor ) {\n                        result.value = $value; // Update to (fulfilled), unproxied, value\n                    } else {\n                        result = $value;\n                    }\n                    const flags = args[ 0 ] || {};\n                    return eat( result, path, { ...$params, ...flags, level: $params.level + 1, } );\n                } );\n            };\n            // -----------\n            if ( isPropsList( segment ) && Array.isArray( result ) ) {\n                result.forEach( addTrail );\n                if ( isLastSegment ) return final( result, ...args );\n                return result.map( advance );\n            }\n            // -----------\n            addTrail( result );\n            if ( isLastSegment ) return final( result, ...args );\n            return advance( result );\n            // -----------\n        }, $params );\n    } )( target, path.slice( 0 ), { ...params, level: 0 } );\n}\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return AbortController\n */\nexport function observe( target, prop, receiver, params = {} ) {\n    // ---------------\n    target = resolveObj( target, !params.level );\n\tif ( _isFunction( arguments[ 1 ] ) ) {\n        [ , receiver, params = {} ] = arguments;\n        prop = Infinity;\n\t}\n\tif ( !_isFunction( receiver ) ) throw new Error( `Handler must be a function; \"${ _getType( receiver ) }\" given!` );\n    // ---------------\n    params = { ...params, descripted: true };\n    delete params.live;\n    if ( !_isTypeObject( target ) ) return params.probe && get( target, prop, receiver, params );\n    // ---------------\n    const emit = bind( target, prop, receiver, params );\n    if ( params.probe ) {\n        return get( target, prop, emit, params );\n    }\n    return emit();\n}\n\n/**\n * Adds an interceptor object to a target's registry.\n *\n * @param Array|Object\t    target\n * @param Object\t        traps\n * @param Object\t\t    params\n *\n * @return AbortRegistry\n */\nexport function intercept( target, traps, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( !_isObject( traps ) ) {\n        [ /*target*/, /*type*/, /*handler*/, params = {} ] = arguments;\n        traps = { [ arguments[ 1 ] ]: arguments[ 2 ] };\n    }\n    // ---------------\n    return TrapsRegistry.getInstance( target, true, params.namespace ).addRegistration( { traps, params } );\n}\n\n/* ---------------QUERY APIs--------------- */\n\n/**\n * Performs a \"getOwnPropertyDescriptor\" operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptor( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptor', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getOwnPropertyDescriptors\" operation.\n * @note this isn't part of the standard Reflect API.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptors( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptors', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getPrototypeOf( target, receiver = x => x, params = {} ) {\n    return exec( target, 'getPrototypeOf', {}, receiver, params );\n}\n\n/**\n * Performs a \"isExtensible\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function isExtensible( target, receiver = x => x, params = {} ) {\n    return exec( target, 'isExtensible', {}, receiver, params );\n}\n\n/**\n * Performs a \"ownKeys\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function ownKeys( target, receiver = x => x, params = {} ) {\n    return exec( target, 'ownKeys', {}, receiver, params );\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function has( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'has', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a get operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function get( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    let isLive;\n    target = resolveObj( target, !params.level );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    else if ( params.live ) { isLive = true; }\n    // ---------------\n    return resolveProps( target, prop, props => {\n        const related = [ ...props ];\n        return ( function next( results, _props, _done ) {\n            if ( !_props.length ) return _done( results );\n            const prop = _props.shift();\n            // ---------\n            function defaultGet( descriptor, value = undefined ) {\n                const _next = value => ( descriptor.value = value, next( [ ...results, params.live || params.descripted ? descriptor : value ]/** not using concat() as value may be an array */, _props, _done ) );\n                if ( arguments.length > 1 ) return _next( value );\n                const accessorizedProps = _( target, 'accessorizedProps', false );\n                const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n                if ( accessorization && accessorization.intact() ) {\n                    return _next( accessorization.getValue() );\n                }\n                return _next( Reflect.get( target, descriptor.key, ...( params.receiver ? [ params.receiver ] : [] ) ) );\n            }\n            // ---------\n            const descriptor = new Descriptor( target, {\n                type: 'get',\n                key: prop,\n                value: undefined,\n                related,\n            } );\n            if ( !_isTypeObject( target ) ) return next( [ ...results, params.live || params.descripted ? descriptor : undefined ], _props, _done );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            if ( listenerRegistry ) {\n                return listenerRegistry.emit( descriptor, defaultGet );\n            }\n            return defaultGet( descriptor );\n        } )( [], props.slice( 0 ), results => {\n            const result_s = isPropsList( prop/*original*/ ) ? results : results[ 0 ];\n            if ( isLive && _isTypeObject( target ) ) {\n                const emit = bind( target, prop, receiver, params );\n                return emit( result_s );\n            }\n            return receiver( result_s );\n        } );\n    }, params );\n}\n\n/* ---------------MUTATION APIs--------------- */\n\n/**\n * Performs a batch operation.\n * \n * @param Object\t        target\n * @param Function\t        callback\n * @param Object\t        params\n *\n * @return Void\n */\nexport function batch( target, callback, params = {} ) {\n    target = resolveObj( target );\n    return ListenerRegistry.getInstance( target, true, params.namespace ).batch( callback );\n}\n\n/**\n * Performs a set operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Any\t            value\n * @param Function\t        receiver\n * @param Object\t        params\n * @param Bool\t            def\n *\n * @return Any\n */\nexport function set( target, prop, value, receiver = x => x, params = {}, def = false ) {\n    // ---------------\n    target = resolveObj( target );\n    let entries = [ [ prop, value ] ];\n    if ( _isObject( prop ) ) {\n        [ /*target*/, /*hash*/, receiver = x => x, params = {}, def = false ] = arguments;\n        entries = Object.entries( prop );\n    }\n    if ( _isObject( receiver ) ) { [ def, params, receiver ] = [ typeof params === 'boolean' ? params : false, receiver, x => x ]; }\n    // ---------------\n    const related = entries.map( ( [ prop ] ) => prop );\n    return ( function next( descriptors, entries, _done ) {\n        if ( !entries.length ) return _done( descriptors );\n        const [ prop, value ] = entries.shift();\n        // ---------\n        function defaultSet( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), entries, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( target, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( descriptor.type === 'defineProperty' ) {\n                if ( accessorization && !accessorization.restore() ) _next( false );\n                Object.defineProperty( target, descriptor.key, descriptor.value );\n                return _next( true );\n            }\n            if ( accessorization && accessorization.intact() ) {\n                return _next( accessorization.setValue( descriptor.value ) );\n            }\n            return _next( Reflect.set( target, descriptor.key, descriptor.value ) );\n        }\n        // ---------\n        function exec( isUpdate, oldValue ) {\n            if ( params.diff && value === oldValue ) return next( descriptors, entries, _done );\n            const descriptor = new Descriptor( target, {\n                type: def ? 'defineProperty' : 'set',\n                key: prop,\n                value,\n                isUpdate,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultSet ) \n                : defaultSet( descriptor );\n        }\n        // ---------\n        return has( target, prop, exists => {\n            if ( !exists ) return exec( exists );\n            return get( target, prop, oldValue => exec( exists, oldValue ), params );\n        }, params );\n        // ---------\n    } )( [], entries.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( target, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ]?.status\n        );\n    } );\n}\n\n/**\n * Performs a defineProperty operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Object\t        descriptor\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperty( target, prop, descriptor, receiver = x => x, params = {} ) {\n    return set( target, prop, descriptor, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a defineProperties operation.\n * @note this isn't part of the standard Reflect API.\n * \n * @param Object\t        target\n * @param Object\t        descriptors\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperties( target, descriptors, receiver = x => x, params = {} ) {\n    return set( target, descriptors, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a delete operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function deleteProperty( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    // ---------------\n    const props = _arrFrom( prop, false ), related = [ ...props ];\n    return ( function next( descriptors, props, _done ) {\n        if ( !props.length ) return _done( descriptors );\n        const prop = props.shift();\n        // ---------\n        function defaultDel( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), props, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( target, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( accessorization && !accessorization.restore() ) _next( false );\n            return _next( Reflect.deleteProperty( target, descriptor.key ) );\n        }\n        // ---------\n        function exec( oldValue ) {\n            const descriptor = new Descriptor( target, {\n                type: 'deleteProperty',\n                key: prop,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultDel ) \n                : defaultDel( descriptor );\n        }\n        // ---------\n        return get( target, prop, exec, params );\n        // ---------\n    } )( [], props.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( target, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ].status\n        );\n    } );\n}\n\n/**\n * @alias deleteProperty()\n */\nexport function deleteProperties( target, props, receiver = x => x, params = {} ) {\n    return deleteProperty( ...arguments );\n}\n\n/* ---------------EFFECT APIs--------------- */\n\n/**\n * Performs a \"construct\" operation.\n *\n * @param Array|Object\t    target\n * @param Array\t\t\t    argumentsList\n * @param Object\t\t    newTarget\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function construct( target, argumentsList, newTarget = null, receiver = x => x, params = {} ) {\n    return exec( target, 'construct', arguments.length > 2 ? { argumentsList, newTarget } : { argumentsList }, receiver, params );\n}\n\n/**\n * Performs an \"apply\" operation.\n *\n * @param Array|Object\t    target\n * @param Any\t            thisArgument\n * @param Array\t            argumentsList\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function apply( target, thisArgument, argumentsList, receiver = x => x, params = {} ) {\n    return exec( target, 'apply', { thisArgument, argumentsList }, receiver, params );\n}\n\n/**\n * Performs a \"setPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Anyr\t            proto\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function setPrototypeOf( target, proto, receiver = x => x, params = {} ) {\n    return exec( target, 'setPrototypeOf', { proto }, receiver, params );\n}\n\n/**\n * Performs a \"preventExtension\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function preventExtensions( target, receiver = x => x, params = {} ) {\n    return exec( target, 'preventExtensions', {}, receiver, params );\n}\n\n/* ---------------HELPER APIs--------------- */\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Function: AbortController\n */\nfunction bind( target, prop, receiver, params = {} ) {\n    let controller;\n    if ( !params.signal ) {\n        controller = new AbortController;\n        params = { ...params, signal: controller.signal };\n    }\n    const listenerRegistry = ListenerRegistry.getInstance( target, true, params.namespace );\n    return function emit( descriptor_s, prevRegistration = null ) {\n        prevRegistration?.remove();\n        const registrationNext = listenerRegistry.addRegistration( prop, emit, params );\n        const flags = { signal: registrationNext.signal, };\n        if ( arguments.length ) {\n            const handlerReturnValue = receiver( descriptor_s, flags );\n            if ( arguments.length > 1 ) return handlerReturnValue;\n        }\n        return controller;\n    };\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String\t\t    type\n * @param Object\t\t    payload\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nfunction exec( target, type, payload = {}, receiver = x => x, params = {} ) {\n    // ---------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }    \n    // ---------\n    function defaultExec( descriptor, result ) {\n        if ( arguments.length > 1 ) return receiver( result );\n        return receiver( Reflect[ type ]( target, ...Object.values( payload ) ) );\n    }\n    // ---------\n    const descriptor = new Descriptor( target, { type, ...payload } );\n    const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n    if ( listenerRegistry ) {\n        return listenerRegistry.emit( descriptor, defaultExec );\n    }\n    return defaultExec( descriptor );\n}\n\n// Asks if prop is a multi-result field\nfunction isPropsList( prop ) {\n    return prop === Infinity || Array.isArray( prop );\n}\n\n// Resolves obj down to it's self\nfunction resolveObj( obj, assert = true ) {\n\tif ( ( !obj || !_isTypeObject( obj ) ) && assert ) throw new Error( `Object must be of type object or array! \"${ _getType( obj ) }\" given.` );\n    if ( obj instanceof Descriptor ) {\n        obj = obj.value;\n    }\n\treturn obj && unproxy( obj );\n}\n\n// Resolves prop down to actual keys\nfunction resolveProps( obj, prop, receiver, params = {} ) {\n    if ( prop === Infinity ) {\n        if ( params.level && !_isTypeObject( obj ) ) return receiver( [] );\n        return ownKeys( obj, receiver, params );\n    }\n    return receiver( _arrFrom( prop, false ) );\n}\n", "\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n", "\r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nexport default function(val) {\r\n\treturn typeof val;\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n", "/**\r\n * @imports\r\n */\r\nimport _intersect from '../arr/intersect.js';\r\n\r\n/**\r\n * Creates and/or returns an \"internals\" object for the given object.\r\n * \r\n * @param Any obj\r\n * @param String namespace\r\n * \r\n * @return Object\r\n */\r\nexport default function internals(obj, ...namespaces) {\r\n    if (!globalThis.webqit) { globalThis.webqit = {}; }\r\n    if (!globalThis.webqit.refs) {\r\n        Object.defineProperty(globalThis.webqit, 'refs', {value: new ObservableMap})\r\n    }\r\n    if (!arguments.length) return globalThis.webqit.refs;\r\n    let itnls = globalThis.webqit.refs.get(obj);\r\n    if (!itnls) {\r\n        itnls = new ObservableMap;\r\n        globalThis.webqit.refs.set(obj, itnls);\r\n    }\r\n    let _ns, _itnls;\r\n    while ((_ns = namespaces.shift())) {\r\n        if ((_itnls = itnls) && !(itnls = itnls.get(_ns))) {\r\n            itnls = new ObservableMap;\r\n            _itnls.set(_ns, itnls);\r\n        }\r\n    }\r\n    return itnls;\r\n}\r\n\r\nclass ObservableMap extends Map {\r\n    constructor( ...args ) {\r\n        super( ...args );\r\n        this.observers = new Set;\r\n    }\r\n    set( key, value ) {\r\n        let returnValue = super.set( key, value );\r\n        this.fire( 'set', key, value, key );\r\n        return returnValue;\r\n    }\r\n    delete( key ) {\r\n        let returnValue = super.delete( key );\r\n        this.fire( 'delete', key );\r\n        return returnValue;\r\n    }\r\n    has( key ) {\r\n        this.fire( 'has', key );\r\n        return super.has( key );\r\n    }\r\n    get( key ) {\r\n        this.fire( 'get', key );\r\n        return super.get( key );\r\n    }\r\n    keyNames() { return Array.from( super.keys() ); }\r\n    observe( type, key, callback ) {\r\n        const entry = { type, key, callback };\r\n        this.observers.add( entry );\r\n        return () => this.observers.delete( entry );\r\n    }\r\n    unobserve( type, key, callback ) {\r\n        if ( Array.isArray( type ) || Array.isArray( key ) ) {\r\n            throw new Error( `The \"type\" and \"key\" arguments can only be strings.` );\r\n        }\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) && entry.callback === callback ) ) continue;\r\n            this.observers.delete( entry );\r\n        }\r\n    }\r\n    fire( type, key, ...args ) {\r\n        // IMPORTANT: Array.from() must be used so that new additions to this.observers\r\n        // during the loop aren't picked up!\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) ) ) continue;\r\n            entry.callback( ...args );\r\n        }\r\n    }\r\n}\r\n\r\nconst _intersection = ( a, b ) => {\r\n    if ( Array.isArray( b ) ) return _intersect( a, b ).length;\r\n    return a.includes( b );\r\n}\r\n", "\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n", "\n/**\n * ---------------------------\n * The Registration class\n * ---------------------------\n */\n\nexport default class Registration {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param Registry\t\t\tregistry\n\t * @param object\t\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( registry, dfn ) {\n\t\tthis.registry = registry;\n\t\tObject.assign( this, { ...dfn, target: registry.target } );\n\t\tif ( this.params.signal ) {\n\t\t\tthis.params.signal.addEventListener( 'abort', () => this.remove() );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a \"disconnected\" flag on the Registration.\n\t *\n\t * @return void\n\t */\n\tremove() {\n\t\tthis.removed = true;\n\t\treturn this.registry.removeRegistration( this );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _internals } from '@webqit/util/js/index.js';\n\nexport const _ = ( ...args ) => _internals( 'observer-api', ...args );\n\nexport const _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\n", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport Registration from './Registration.js';\nimport { _await } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistration class\n * ---------------------------\n */\n\nexport default class ListenerRegistration extends Registration {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tObject.defineProperty( this, 'abortController', { value: new AbortController } );\n\t\tObject.defineProperty( this, 'signal', { value: this.abortController.signal } );\n\t}\n\n\t/**\n\t * De-registers the instance.\n\t * \n\t * @return Void\n\t */\n\tremove() {\n\t\tthis.abortController.abort();\n\t\tsuper.remove();\n\t}\n\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the event's fields.\n\t *\n\t * @param Array\t\t\t \t\tevents\n\t *\n\t * @return Any\n\t */\n\tfire( events ) {\n\t\tif ( this.handler.recursionTarget && ![ 'inject', 'force-async', 'force-sync' ].includes( this.params.recursions ) ) return;\n\t\tlet matches = events, filter = this.filter;\n\t\tif ( filter !== Infinity && ( filter = _arrFrom( filter, false ) ) ) {\n\t\t\tmatches = events.filter( event => filter.includes( event.key ) );\n\t\t}\n\t\tif ( this.params.diff ) {\n\t\t\tmatches = matches.filter( event => event.type !== 'set' || event.value !== event.oldValue );\n\t\t}\n\t\tif ( matches.length ) {\n\t\t\tif ( this.handler.recursionTarget && this.params.recursions !== 'force-sync' ) {\n\t\t\t\tthis.handler.recursionTarget.push( ...matches );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handler.recursionTarget = this.params.recursions === 'inject' ? matches : [];\n\t\t\tconst $ret = this.filter === Infinity || Array.isArray( this.filter )\n\t\t\t\t? this.handler( matches, this )\n\t\t\t\t: this.handler( matches[ 0 ], this );\n\t\t\treturn _await( $ret, ret => {\n\t\t\t\tconst recursions = this.handler.recursionTarget;\n\t\t\t\tdelete this.handler.recursionTarget;\n\t\t\t\tif ( this.params.recursions === 'force-async' ) {\n\t\t\t\t\tif ( recursions.length ) return this.fire( recursions );\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t} );\n\t\t}\n\t}\n}\n", "\n/**\n * @imports\n */\nimport { _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom, _intersect, _equals as _arrEquals } from '@webqit/util/arr/index.js';\nimport { _ } from '../util.js';\n\n/**\n * ---------------------------\n * The Registry class\n * ---------------------------\n */\n\nexport default class Registry {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param object\ttarget\n\t * \n\t * @return void\n\t */\n\tconstructor( target ) {\n\t\tthis.target = target;\n\t\tthis.entries = [];\n\t}\n\t\n\t/**\n\t * Adds an Registration instance\n\t * with optional tags.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return Registration\n\t */\n\taddRegistration( registration ) {\n\t\tthis.entries.push( registration );\n\t\treturn registration;\n\t}\n\t\n\t/**\n\t * Removes registrations by reference.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return void\n\t */\n\tremoveRegistration( registration ) {\n\t\tthis.entries = this.entries.filter( _entry => _entry !== registration );\n\t}\n\t\t\n\t/**\n\t * Returns a observer-specific object embedded on an element.\n\t *\n\t * @param string\t\ttype\n\t * @param array|object\ttarget\n\t * @param bool      \tcreateIfNotExists\n\t * @param string      \tnamespace\n\t *\n\t * @return Registry\n\t */\n\tstatic _getInstance( type, target, createIfNotExists = true, namespace = this.__namespace ) {\n\t\tif ( !_isTypeObject( target ) ) throw new Error( `Subject must be of type object; \"${ _getType( target ) }\" given!` );\n\t\tlet ImplementationClass = this;\n\t\tif ( namespace && _( 'namespaces' ).has( type + '-' + namespace ) ) {\n\t\t\tImplementationClass = _( 'namespaces' ).get( type + '-' + namespace );\n\t\t\ttype += '-' + namespace\n\t\t}\n\t\tif ( !_( target, 'registry' ).has( type ) && createIfNotExists ) {\n\t\t\t_( target, 'registry' ).set( type, new ImplementationClass( target ) );\n\t\t}\n\t\treturn _( target, 'registry' ).get( type );\n\t}\n\n\t/**\n\t * Extend a Fireable Class with a namespace.\n\t *\n\t * @param string\t\tnamespace\n\t * @param class      \tImplementationClass\n\t *\n\t * @return void|class\n\t */\n\tstatic _namespace( type, namespace, ImplementationClass = null ) {\n\t\ttype += '-' + namespace;\n\t\tif ( arguments.length === 2 ) return _( 'namespaces' ).get( type );\n\t\tif ( !( ImplementationClass.prototype instanceof this ) ) {\n\t\t\tthrow new Error( `The implementation of the namespace ${ this.name }.${ namespace } must be a subclass of ${ this.name }.` );\n\t\t}\n\t\t_( 'namespaces' ).set( type, ImplementationClass );\n\t\tImplementationClass.__namespace = namespace;\n\t}\n}", "\n/**\n * @imports\n */\nimport ListenerRegistration from './ListenerRegistration.js';\nimport Registry from './Registry.js';\nimport { _await } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistry class\n * ---------------------------\n */\n\nexport default class ListenerRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'listeners', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'listeners', ...arguments );\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( target ) {\n\t\tsuper( target );\n\t\tthis.batches = [];\n\t}\n\t\n\t/**\n\t * @addRegistration\n\t */\n\taddRegistration( filter, handler, params ) {\n\t\treturn super.addRegistration( new ListenerRegistration( this, { filter, handler, params } ) );\n\t}\n\t\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\temit( events ) {\n\t\tif ( this.batches.length ) {\n\t\t\tthis.batches[ 0 ].events.push( ...events );\n\t\t\treturn\n\t\t}\n\t\tthis.entries.forEach( listener => listener.fire( events ) );\n\t}\n\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\tbatch( callback ) {\n\t\tthis.batches.unshift( { entries: [ ...this.entries ], events: [] } );\n\t\tconst returnValue = callback();\n\t\treturn _await( returnValue, returnValue => {\n\t\t\tconst batch = this.batches.shift();\n\t\t\tif ( batch.events.length ) {\n\t\t\t\tbatch.entries.forEach( listener => listener.fire( batch.events ) );\n\t\t\t}\n\t\t\treturn returnValue;\n\t\t} )\n\t}\n\n}", "\n/**\n * @imports\n */\nimport Registration from './Registration.js';\n\n/**\n * ---------------------------\n * The TrapsRegistration class\n * ---------------------------\n */\n\nexport default class TrapsRegistration extends Registration {\n\t\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the descriptor's fields.\n\t *\n\t * @param Descriptor\t\t\t \tdescriptor\n\t * @param function\t\t\t\t\tnext\n\t * @param mixed\t\t\t\t\t \trecieved\n\t *\n\t * @return void\n\t */\n\texec( descriptor, next, recieved ) {\n\t\tif ( this.running || !this.traps[ descriptor.type ] ) {\n\t\t\treturn next( ...Array.prototype.slice.call( arguments, 2 ) );\n\t\t}\n\t\tthis.running = true;\n\t\treturn this.traps[ descriptor.type ]( descriptor, recieved, ( ...args ) => {\n\t\t\tthis.running = false;\n\t\t\treturn next( ...args );\n\t\t} );\n\t}\n}", "\n/**\n * @imports\n */\nimport TrapsRegistration from './TrapsRegistration.js';\nimport Registry from './Registry.js';\n\n/**\n * ---------------------------\n * The TrapsRegistry class\n * ---------------------------\n */\n\nexport default class TrapsRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'traps', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'traps', ...arguments );\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddRegistration( dfn ) {\n\t\treturn super.addRegistration( new TrapsRegistration( this, dfn ) );\n\t}\n\n\t/**\n\t * Fires all interceptors with the given action.\n\t *\n\t * @param Descriptor\t\tdescriptor\n\t * @param function\t\t\tdefaultHandler\n\t *\n\t * @return mixed\n\t */\n\temit( descriptor, defaultHandler = null ) {\n\t\tconst $this = this;\n\t\treturn ( function next( index, ..._args ) {\n\t\t\tconst registration = $this.entries[ index ];\n\t\t\tif ( registration ) {\n\t\t\t\treturn registration.exec( descriptor, ( ...args ) => {\n\t\t\t\t\treturn next( index + 1, ...args );\n\t\t\t\t}/*next*/, ..._args );\n\t\t\t}\n\t\t\treturn defaultHandler ? defaultHandler( descriptor, ..._args ) : _args[ 0 ];\n\t\t} )( 0 );\n\t}\n}", "\n/**\n * ---------------------------\n * The Descriptor class\n * ---------------------------\n */\n\nexport default class Descriptor {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param array|object\ttarget\n\t * @param object\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( target, dfn ) {\n\t\tthis.target = target;\n\t\tif ( !( dfn.type ) ) throw new Error( 'Descriptor type must be given in definition!' );\n\t\tObject.assign( this, dfn );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _isClass, _isFunction, _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { set, deleteProperty, has, get, ownKeys, defineProperty, getOwnPropertyDescriptor } from \"./main.js\";\nimport { batch, apply, construct, getPrototypeOf, setPrototypeOf, isExtensible, preventExtensions } from \"./main.js\";\nimport { _ } from './util.js';\n\n/* ---------------ACCESSORIZE METHODS--------------- */\n\n/**\n * Accessorizes props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function accessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    // ---------\n    function getDescriptorDeep( prop ) {\n        let descriptor, proto = target;\n        do {\n            descriptor = Object.getOwnPropertyDescriptor( proto, prop );\n        } while ( !descriptor && ( proto = Object.getPrototypeOf( proto ) ) );\n        return descriptor \n            ? { proto, descriptor } \n            : { descriptor: { value: undefined, configurable: true, enumerable: true, writable: true } };\n    }\n    // ---------\n    function accessorizeProp( prop ) {\n        if ( accessorizedProps.has( prop + '' ) ) return true;\n        // ------------------\n        // Current Descriptor Record\n        const currentDescriptorRecord = getDescriptorDeep( prop );\n        currentDescriptorRecord.getValue = function() {\n            return this.descriptor.get ? this.descriptor.get() : this.descriptor.value;\n        };\n        currentDescriptorRecord.setValue = function( value ) {\n            this.dirty = true;\n            return this.descriptor.set ? this.descriptor.set( value ) !== false : ( this.descriptor.value = value, true );\n        };\n        currentDescriptorRecord.intact = function() {\n            const currentDescriptor = Object.getOwnPropertyDescriptor( target, prop );\n            return currentDescriptor?.get === accessorization.get \n                && currentDescriptor?.set === accessorization.set\n                && accessorizedProps.get( prop + '' ) === this;\n        };\n        currentDescriptorRecord.restore = function() {\n            if ( !this.intact() ) return false;\n            if ( ( this.proto && this.proto !== target ) || ( !this.proto && !this.dirty ) ) { delete target[ prop ]; }\n            else { Object.defineProperty( target, prop, this.descriptor ); }\n            accessorizedProps.delete( prop + '' );\n            return true;\n        };\n        accessorizedProps.set( prop + '', currentDescriptorRecord );\n        // ------------------\n        // enumerable, configurable\n        const { enumerable = true } = currentDescriptorRecord.descriptor;\n        const accessorization = { enumerable, configurable: true };\n        // set, get\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.set ) {\n            accessorization.set = function ( value ) { return set( this, prop, value, params ); };\n        }\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.get ) {\n            accessorization.get = function () { return get( this, prop, params ); };\n        }\n        try {\n            Object.defineProperty( target, prop, accessorization );\n            return true;\n        } catch( e ) {\n            accessorizedProps.delete( prop + '' );\n            return false;\n        }\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( accessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/**\n * Unaccessorizes previously accessorized props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function unaccessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    function unaccessorizeProp( prop ) {\n        if ( !accessorizedProps.has( prop + '' ) ) return true;\n        return accessorizedProps.get( prop + '' ).restore();\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( unaccessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/* ---------------PROXY METHODS--------------- */\n\n/**\n * Returns an object as a proxy and binds all instance methods\n * to the proxy instead of the object itself.\n *\n * @param Array|Object\t\ttarget\n * @param Object\t\t    params\n *\n * @return Proxy\n */\nexport function proxy( target, params = {} ) {\n    target = resolveTarget( target );\n    const proxy = new Proxy( target, {\n        apply:  ( target, thisArgument, argumentsList ) => apply( target, thisArgument, argumentsList, params ),\n        construct:  ( target, argumentsList, newTarget = null ) => construct( target, argumentsList, newTarget, params ),\n        defineProperty:  ( target, propertyKey, attributes ) => defineProperty( target, propertyKey, attributes, params ),\n        deleteProperty: ( target, propertyKey ) => deleteProperty( target, propertyKey, params ),\n        get: ( target, propertyKey, receiver = null ) => {\n            const val = get( target, propertyKey, { ...params, receiver } );\n            if ( params.proxyAutoBinding !== false && _isFunction( val ) && !_isClass( val )) {\n                return function( ...args ) {\n                    const _this = this || proxy;\n                    return batch( _this, () => val.call( _this, ...args ) );\n                }\n            }\n            return val;\n        },\n        getOwnPropertyDescriptor: ( target, propertyKey ) => getOwnPropertyDescriptor( target, propertyKey, params ),\n        getPrototypeOf: target => getPrototypeOf( target, params ),\n        has: ( target, propertyKey ) => has( target, propertyKey, params ),\n        isExtensible: target => isExtensible( target, params ),\n        ownKeys: target => ownKeys( target, params ),\n        preventExtensions: target => preventExtensions( target, params ),\n        set: ( target, propertyKey, value, receiver = null ) => set( target, propertyKey, value, { ...params, receiver } ),\n        setPrototypeOf: ( target, prototype ) => setPrototypeOf( target, prototype, params ),\n    });\n    _( proxy ).set( proxy, target );\n\treturn proxy;\n}\n\n/**\n * Returns the original object earlier proxied by proxy().\n *\n * @param Proxy|Any\t\ttarget\n *\n * @return Any\n */\nexport function unproxy( target ) {\n    // Proxy targets are mapped to their own instances internally\n    return _( target ).get( target ) || target;\n}\n\n/* ---------------HELPERS--------------- */\n\n/** \n * Ensures target object is an object or array.\n *\n * @param Array|Object\ttarget\n *\n * @return Array|Object\n */\nfunction resolveTarget( target ) {\n\tif ( !target || !_isTypeObject( target ) ) throw new Error('Target must be of type object!');\n\treturn unproxy( target );\n}\n", "\n/**\n * @imports\n */\nimport * as main from './main.js';\nimport * as actors from './actors.js';\n\nconst Observer = { ...main, ...actors };\n\nexport default Observer;", "\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n", "/**\r\n * @imports\r\n */\r\nimport _intersect from '../arr/intersect.js';\r\n\r\n/**\r\n * Creates and/or returns an \"internals\" object for the given object.\r\n * \r\n * @param Any obj\r\n * @param String namespace\r\n * \r\n * @return Object\r\n */\r\nexport default function internals(obj, ...namespaces) {\r\n    if (!globalThis.webqit) { globalThis.webqit = {}; }\r\n    if (!globalThis.webqit.refs) {\r\n        Object.defineProperty(globalThis.webqit, 'refs', {value: new ObservableMap})\r\n    }\r\n    if (!arguments.length) return globalThis.webqit.refs;\r\n    let itnls = globalThis.webqit.refs.get(obj);\r\n    if (!itnls) {\r\n        itnls = new ObservableMap;\r\n        globalThis.webqit.refs.set(obj, itnls);\r\n    }\r\n    let _ns, _itnls;\r\n    while ((_ns = namespaces.shift())) {\r\n        if ((_itnls = itnls) && !(itnls = itnls.get(_ns))) {\r\n            itnls = new ObservableMap;\r\n            _itnls.set(_ns, itnls);\r\n        }\r\n    }\r\n    return itnls;\r\n}\r\n\r\nclass ObservableMap extends Map {\r\n    constructor( ...args ) {\r\n        super( ...args );\r\n        this.observers = new Set;\r\n    }\r\n    set( key, value ) {\r\n        let returnValue = super.set( key, value );\r\n        this.fire( 'set', key, value, key );\r\n        return returnValue;\r\n    }\r\n    delete( key ) {\r\n        let returnValue = super.delete( key );\r\n        this.fire( 'delete', key );\r\n        return returnValue;\r\n    }\r\n    has( key ) {\r\n        this.fire( 'has', key );\r\n        return super.has( key );\r\n    }\r\n    get( key ) {\r\n        this.fire( 'get', key );\r\n        return super.get( key );\r\n    }\r\n    keyNames() { return Array.from( super.keys() ); }\r\n    observe( type, key, callback ) {\r\n        const entry = { type, key, callback };\r\n        this.observers.add( entry );\r\n        return () => this.observers.delete( entry );\r\n    }\r\n    unobserve( type, key, callback ) {\r\n        if ( Array.isArray( type ) || Array.isArray( key ) ) {\r\n            throw new Error( `The \"type\" and \"key\" arguments can only be strings.` );\r\n        }\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) && entry.callback === callback ) ) continue;\r\n            this.observers.delete( entry );\r\n        }\r\n    }\r\n    fire( type, key, ...args ) {\r\n        // IMPORTANT: Array.from() must be used so that new additions to this.observers\r\n        // during the loop aren't picked up!\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) ) ) continue;\r\n            entry.callback( ...args );\r\n        }\r\n    }\r\n}\r\n\r\nconst _intersection = ( a, b ) => {\r\n    if ( Array.isArray( b ) ) return _intersect( a, b ).length;\r\n    return a.includes( b );\r\n}\r\n", "\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n", "\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.keys(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Sets a value to the given path.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n * @param mixed \t\t\t\tval\r\n * @param object|function \t\tbuildTree\r\n * @param object \t\t\t\ttrap\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, path, val, buildTree = {}, trap = {}) {\r\n\tconst _set = (target, key, val) => {\r\n\t\tif (trap.set) {\r\n\t\t\treturn trap.set(target, key, val);\r\n\t\t} else {\r\n\t\t\tif (_isNumeric(path[i]) && _isArray(target)) {\r\n\t\t\t\ttarget.push(val);\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = val;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\tpath = _arrFrom(path);\r\n\tvar target = obj;\r\n\tfor(var i = 0; i < path.length; i ++) {\r\n\t\tif (i < path.length - 1) {\r\n\t\t\tif (!target || (!_isTypeObject(target) && !_isFunction(target))) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar branch = _get(target, path[i], trap);\r\n\t\t\tif (!_isTypeObject(branch)) {\r\n\t\t\t\tif (trap.buildTree === false) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbranch = _isFunction(trap.buildTree) ? trap.buildTree(i) : (_isNumeric(path[i + 1]) ? [] : {});\r\n\t\t\t\tvar branchSuccess = _set(target, path[i], branch);\r\n\t\t\t\tif (!branchSuccess) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget = branch;\r\n\t\t} else {\r\n\t\t\treturn _set(target, path[i], val);\r\n\t\t}\r\n\t}\r\n};\r\n", "\n/**\n * ---------------------------\n * Binds callbacks to requestAnimationFrame()\n * to create a central \"read/write\" phases for Ctxt access.\n * ---------------------------\n */\n\t\t\t\nexport default class Scheduler {\n\n\t/**\n\t * Starts the loop.\n\t *\n\t * @return this\n\t */\n\tconstructor( window, asyncDOM = true ) {\n\t\tObject.defineProperty( this, 'window', { value: window } );\n\t\tObject.defineProperty( this, 'readCallbacks', { value: new Set } );\n\t\tObject.defineProperty( this, 'writeCallbacks', { value: new Set } );\n\t\tthis.async = asyncDOM;\n\t\tif ( this.window.requestAnimationFrame ) {\n\t\t\tthis._run();\n\t\t} else {\n\t\t\tthis.async = false;\n\t\t}\n\t}\n\n\t_run() {\n\t\tthis.window.requestAnimationFrame( () => {\n\t\t\tfor ( const callback of this.readCallbacks ) {\n\t\t\t\tcallback();\n\t\t\t\tthis.readCallbacks.delete( callback );\n\t\t\t}\n\t\t\tfor ( const callback of this.writeCallbacks ) {\n\t\t\t\tcallback();\n\t\t\t\tthis.writeCallbacks.delete( callback );\n\t\t\t}\n\t\t\tthis._run();\n\t\t} );\n\t}\n\t\n\t/**\n\t * Binds a callback to the \"read\" phase.\n\t *\n\t * @param function \tcallback\n\t * @param bool\t\twithPromise\n\t *\n\t * @return void\n\t */\n\tonread( callback, withPromise = false ) {\n\t\tif ( withPromise ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tif ( this.async === false ) {\n\t\t\t\t\tresolve( callback() );\n\t\t\t\t} else {\n\t\t\t\t\tthis.readCallbacks.add( () => {\n\t\t\t\t\t\tresolve( callback() );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tif ( this.async === false ) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis.readCallbacks.add( callback );\n\t\t}\n\t}\n\t\n\t/**\n\t * Binds a callback to the \"write\" phase.\n\t *\n\t * @param function \tcallback\n\t * @param bool\t\twithPromise\n\t *\n\t * @return void\n\t */\n\tonwrite( callback, withPromise = false ) {\n\t\tif ( withPromise ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tif ( this.async === false ) {\n\t\t\t\t\tresolve( callback() );\n\t\t\t\t} else {\n\t\t\t\t\tthis.writeCallbacks.add( () => {\n\t\t\t\t\t\tresolve( callback() );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tif ( this.async === false ) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis.writeCallbacks.add( callback );\n\t\t}\n\t}\n\t\n\t/**\n\t * A special construct for Ctxt manipulations that span\n\t * one or more read/write cycles.\n\t *\n\t * @param function \tread\n\t * @param function \twrite\n\t * @param mixed\t\tprevTransaction\n\t *\n\t * @return void|mixed\n\t */\n\tcycle( onread, onwrite, prevTransaction ) {\n\t\tthis.onread( () => {\n\t\t\t// Record initial values\n\t\t\tconst readReturn = onread( prevTransaction );\n\t\t\t// Call erite, the transation\n\t\t\tconst callWrite = ( readReturn ) => {\n\t\t\t\tif ( readReturn === undefined ) return;\n\t\t\t\tthis.onwrite( () => {\n\t\t\t\t\tconst writeReturn = onwrite( readReturn, prevTransaction );\n\t\t\t\t\t// Repeat transaction\n\t\t\t\t\tconst repeatTransaction = ( writeReturn ) => {\n\t\t\t\t\t\tif ( writeReturn === undefined ) return;\n\t\t\t\t\t\tthis.cycle( onread, onwrite, writeReturn );\n\t\t\t\t\t};\n\t\t\t\t\t// ---------------------------------------\n\t\t\t\t\t// If \"write\" returns a promise, we wait until it is resolved\n\t\t\t\t\t// ---------------------------------------\n\t\t\t\t\tif ( writeReturn instanceof Promise ) {\n\t\t\t\t\t\twriteReturn.then( repeatTransaction );\n\t\t\t\t\t} else {\n\t\t\t\t\t\trepeatTransaction( writeReturn );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t};\n\t\t\t// ---------------------------------------\n\t\t\t// If \"read\" returns a promise, we wait until it is resolved\n\t\t\t// ---------------------------------------\n\t\t\tif ( readReturn instanceof Promise ) {\n\t\t\t\treadReturn.then( callWrite );\n\t\t\t} else {\n\t\t\t\tcallWrite( readReturn );\n\t\t\t}\n\t\t} );\n\t}\n\n}", "\n/**\n * @imports\n */\nimport { _isFunction, _isObject, _internals } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\n\n/**\n *\n * @class Realtime\n */\nexport default class Realtime {\n\n\t/**\n\t * @constructor\n\t *\n\t * @param document|Element\tcontext\n\t */\n\tconstructor( context, namespace, window ) {\n\t\tthis.context = context;\n\t\tthis.namespace = namespace;\n\t\tthis.window = context.defaultView || context.ownerDocument?.defaultView || window;\n\t\tthis.document = this.window.document;\n\t\tthis.webqit = this.window.webqit;\n\t\tObject.defineProperty( this, '#', { value: {} } );\n\t}\n\n\t/**\n\t * Resolves arguments\n\t * \n\t * @param Array \t\t\targs \n\t * \n\t * @returns Array\n\t */\n\tresolveArgs( args ) {\n\t\tif ( _isFunction( args[ 0 ] ) ) { args = [ [], ...args ]; }\n\t\telse if ( _isObject( args[ 0 ] ) && args.length === 1 ) {\n\t\t\targs = [ [], undefined, args[ 0 ] ];\n\t\t} else if ( _isObject( args[ 1 ] ) && args.length === 2 ) {\n\t\t\targs = [ _arrFrom( args[ 0 ], false/*castObject*/ ), undefined, args[ 1 ] ];\n\t\t} else { args[ 0 ] = _arrFrom( args[ 0 ], false/*castObject*/ ); }\n\t\treturn args;\n\t}\n\n\t/**\n\t * @registry\n\t *\n\t * @param Array\t\t\t\t...args\n\t * \n\t * @returns Map\n\t */\n\tregistry( ...args ) {\n\t\treturn _internals( 'realdom.realtime', this.window, this.namespace, ...args );\n\t}\n\t\t\n\t/**\n\t * @createSignalGenerator\n\t * \n\t * @param Object \t\t\tmo \n\t * \n\t * @returns Object\n\t */\n\tcreateSignalGenerator() {\n\t\treturn {\n\t\t\tgenerate() {\n\t\t\t\t// Abort previous\n\t\t\t\tthis.lastController?.abort();\n\t\t\t\tthis.lastController = new AbortController;\n\t\t\t\tconst flags = { signal: this.lastController.signal };\n\t\t\t\treturn flags;\n\t\t\t},\n\t\t\tdisconnect() { this.lastController?.abort(); }\n\t\t}\n\t}\n\t\t\n\t/**\n\t * Loops through registration objects whose contexts match the event context.\n\t * \n\t * @param String \t\tinterceptionTiming\n\t * @param Object|Array \trecord_s\n\t * @param Function \t\tcallback \n\t * \n\t * @returns void\n\t */\n\tforEachMatchingContext( interceptionTiming, record_s, callback ) {\n\t\tconst { window } = this, records = Array.isArray( record_s ) ? record_s : [ record_s ];\n\t\tlet dispatchBatch = new Set;\n\t\tfor ( const [ depth, registries ] of this.registry( interceptionTiming ) ) {\n\t\t\tfor ( const [ context, registry ] of registries ) {\n\t\t\t\t// Ensure event target is/within context\n\t\t\t\tlet matches = records.filter( record => {\n\t\t\t\t\tif ( !context.contains( record.target ) ) return false;\n\t\t\t\t\treturn depth === 'subtree' || record.target === context;\n\t\t\t\t} );\n\t\t\t\tif ( !matches.length ) continue;\n\t\t\t\t// Records will be dispatched in their original form\n\t\t\t\tif ( !Array.isArray( record_s ) ) { matches = matches[ 0 ]; }\n\t\t\t\tfor ( const registration of registry ) {\n\t\t\t\t\tdispatchBatch.add( [ registration, matches, context ] );\n\t\t\t\t\t//callback.call( this, registration, matches, context );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Saving everything to dispatchBatch ensures that recursive modifications\n\t\t// to both this.registry( interceptionTiming ), registries, and registry aren't pciked up\n\t\tfor ( const [ registration, record_s, context ] of dispatchBatch ) {\n\t\t\tcallback.call( this, registration, record_s, context );\n\t\t}\n\t}\n\n\t/**\n\t * @disconnectables\n\t * \n\t * @param AbortSignal \t\tsignal\n\t * @param Array \t\t\t...objects \n\t * \n\t * @returns Object\n\t */\n\tdisconnectables( signal, ...objects ) {\n\t\tconst disconnectable = { disconnect() {\n\t\t\tobjects.forEach( d => (\n\t\t\t\td && _isFunction( d.disconnect ) && d.disconnect() \n\t\t\t\t|| _isFunction( d ) && d() \n\t\t\t\t|| _isObject( d ) && ( d.disconnected = true )\n\t\t\t) );\n\t\t} };\n\t\tif ( signal ) signal.addEventListener( 'abort', () => disconnectable.disconnect() );\n\t\treturn disconnectable;\n\t}\n}\n", "\n/**\n * @imports\n */\nimport Realtime from './Realtime.js';\n\n/**\n *\n * @class AttrRealtime\n */\nexport default class AttrRealtime extends Realtime {\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( context, ...args ) {\n\t\tsuper( context, 'attr', ...args );\n\t}\n\t\n\t/**\n\t * Runs a query.\n\t *\n\t * @param array|string\t\t\t\tfilter\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t *\n\t * @return Disconnectable|Void\n\t */\n\tget( filter, callback = undefined, params = {} ) {\n\t\tconst originalFilterIsString = typeof filter === 'string';\n\t\t[ filter = [], callback = undefined, params = {} ] = this.resolveArgs( arguments );\n\t\tconst { context } = this;\n\t\t// -------------\n\t\tconst records = attrIntersection( context, filter );\n\t\tconst record_s = originalFilterIsString ? records[ 0 ] : records;\n\t\tif ( !callback ) return record_s;\n\t\tconst signalGenerator = callback && params.lifecycleSignals && this.createSignalGenerator();\n\t\tconst flags = signalGenerator?.generate() || {};\n\t\tcallback( record_s, flags, context );\n\t\t// -------------\n\t\tif ( params.live ) {\n\t\t\tif ( signalGenerator ) { params = { ...params, signalGenerator }; }\n\t\t\tconst disconnectable_live = this.observe( originalFilterIsString ? filter[ 0 ] : filter, callback, { newValue: true, ...params } );\n\t\t\treturn this.disconnectables( params.signal, disconnectable_live );\n\t\t}\n\t}\n\n\t/**\n\t * Mutation Observer\n\t * \n\t * @param array|string\t\t\t\tfilter\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t * \n\t * @returns Disconnectable\n\t */\n\tobserve( filter, callback, params = {} ) {\n\t\tconst originalFilterIsString = typeof filter === 'string';\n\t\t[ filter = [], callback, params = {} ] = this.resolveArgs( arguments );\n\t\t// ------------------------\n\t\tif ( [ 'sync', 'intercept' ].includes( params.timing ) ) return this.observeSync( originalFilterIsString ? filter[ 0 ] : filter, callback, params );\n\t\tif ( params.timing && params.timing !== 'async' ) throw new Error( `Timing option \"${ params.timing }\" invalid.` );\n\t\t// ------------------------\n\t\tconst { context, window, webqit } = this;\n\t\t// ------------------\n\t\tif ( params.eventDetails && !webqit.realdom.attrInterceptionHooks?.intercepting ) {\n\t\t\tattrInterception.call( window, 'intercept', () => {} );\n\t\t}\n\t\t// -------------\n\t\tconst disconnectable = new window.MutationObserver( records => {\n\t\t\trecords = dedup( records ).map( rcd => withAttrEventDetails.call( window, rcd ) );\n\t\t\tdispatch.call( window, registration, records, context );\n\t\t} );\n\t\t// ------------------\n\t\tconst $params = { attributes: true, attributeOldValue: params.oldValue, subtree: params.subtree };\n\t\tif ( filter.length ) { $params.attributeFilter = filter; }\n\t\tdisconnectable.observe( context, $params );\n\t\t// -------------\n\t\tconst signalGenerator = params.signalGenerator || params.lifecycleSignals && this.createSignalGenerator();\n\t\tconst registration = { context, filter, callback, params, atomics: new Map, originalFilterIsString, signalGenerator, disconnectable };\n\t\t// -------------\n\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator );\n\t}\n\t\n\t/**\n\t * Mutation Interceptor\n\t * \n\t * @param array|string\t\t\t\tfilter\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t * \n\t * @returns Disconnectable\n\t */\n\tobserveSync( filter, callback, params = {} ) {\n\t\tconst originalFilterIsString = typeof filter === 'string';\n\t\t[ filter, callback, params = {} ] = this.resolveArgs( arguments );\n\t\tconst { context, window } = this;\n\t\t// -------------\n\t\tif ( params.timing && ![ 'sync', 'intercept' ].includes( params.timing ) ) throw new Error( `Timing option \"${ params.timing }\" invalid.` );\n\t\tconst interceptionTiming = params.timing === 'intercept' ? 'intercept' : 'sync';\n\t\tconst intersectionDepth = params.subtree ? 'subtree' : 'children';\n\t\tif ( !this.registry( interceptionTiming ).size ) {\n\t\t\t// One handler per intercept/sync registry\n\t\t\tattrInterception.call( window, interceptionTiming, records => {\n\t\t\t\tthis.forEachMatchingContext( interceptionTiming, records, dispatch );\n\t\t\t} );\n\t\t}\n\t\t// -------------\n\t\tconst disconnectable = { disconnect() {\n\t\t\tregistry.delete( registration );\n\t\t\tif ( !registry.size ) { registries.delete( context ); }\n\t\t} };\n\t\tconst signalGenerator = params.signalGenerator || params.lifecycleSignals && this.createSignalGenerator();\n\t\tconst registration = { context, filter, callback, params, atomics: new Map, originalFilterIsString, signalGenerator, disconnectable };\n\t\t// -------------\n\t\tconst registries = this.registry( interceptionTiming, intersectionDepth );\n\t\tif ( !registries.has( context ) ) { registries.set( context, new Set ); }\n\t\tconst registry = registries.get( context );\n\t\tregistry.add( registration );\n\t\t// -------------\n\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator );\n\t}\n}\n\n/**\n * Deduplicates records.\n * \n * @param Array \t\t\trecords\n * \n * @returns Array\n */\nfunction dedup( records ) {\n\treturn records.reduce( ( rcds, rcd, i ) => {\n\t\tif ( rcds[ i - 1 ]?.attributeName === rcd.attributeName ) return rcds;\n\t\treturn rcds.concat( rcd );\n\t}, [] );\n}\n\n/**\n * Dispatches a mutation record if it matches the observed.\n * \n * @param Object \t\t\tregistration\n * @param Array \t\t\trecords\n * \n * @returns Void\n */\nfunction dispatch( registration, records ) {\n\tconst { context, filter, callback, params, atomics, originalFilterIsString, signalGenerator } = registration;\n\tif ( params.atomic && !atomics.size ) {\n\t\trecords = attrIntersection( context, filter, records );\n\t}\n\t// Should we care about old / new values being present?\n\tif ( !( params.newValue === null && params.oldValue === null && params.eventDetails ) ) {\n\t\trecords = records.map( rcd => {\n\t\t\tlet exclusion;\n\t\t\tif ( !params.eventDetails ) {\n\t\t\t\t( { event: exclusion, ...rcd } = rcd );\n\t\t\t}\n\t\t\tif ( !params.oldValue && ( 'oldValue' in rcd ) ) {\n\t\t\t\t( { oldValue: exclusion, ...rcd } = rcd );\n\t\t\t}\n\t\t\tif ( !params.newValue && ( 'value' in rcd ) ) {\n\t\t\t\t( { value: exclusion, ...rcd } = rcd );\n\t\t\t} else if ( params.newValue && typeof rcd.value === 'undefined' ) {\n\t\t\t\trcd = {  ...rcd, value: rcd.target.getAttribute( rcd.name ) };\n\t\t\t}\n\t\t\treturn rcd;\n\t\t} );\n\t}\n\tif ( params.atomic ) {\n\t\trecords.forEach( record => atomics.set( record.name, record ) );\n\t\trecords = Array.from( atomics.entries() ).map( ( [ , value ] ) => value );\n\t}\n\tconst record_s = originalFilterIsString ? records[ 0 ] : records;\n\tconst flags = signalGenerator?.generate() || {};\n\tcallback( record_s, flags, context );\n}\n\n/**\n * Helper to determining which records to deliver.\n * \n * @param Object \t\t\tcontext\n * @param Array \t\t\tfilter\n * @param Array \t\t\trecords\n * \n * @returns Array\n */\nfunction attrIntersection( context, filter, records = [] ) {\n\tconst _type = { event: null, type: 'attribute' };\n\tif ( filter.length ) {\n\t\treturn filter.map( attrName => {\n\t\t\treturn records.find( r => r.name === attrName ) || { target: context, name: attrName, value: context.getAttribute( attrName ), ..._type };\n\t\t} );\n\t}\n\tconst attrs = Array.from( context.attributes );\n\treturn attrs.map( attr => {\n\t\treturn records.find( r => r.name === attr.nodeName ) || { target: context, name: attr.nodeName, value: attr.nodeValue, ..._type };\n\t} );\n}\n\n/**\n * Determines the event for an attr mutation record.\n * \n * @param MutationRecord \t{ target, attributeName }\n * \n * @returns Object\n */\nfunction withAttrEventDetails( { target, attributeName, value, oldValue } ) {\n\tconst window = this, registry = window.webqit.realdom.attrInterceptionRecords?.get( target ) || {};\n\tconst event = registry[ attributeName ] || 'mutation';\n\tconst record = { target, name: attributeName, value, oldValue, type: 'observation', event };\n\treturn record;\n}\n\n/**\n * Attributes intersection engine.\n * \n * @param String \t\t\ttiming \n * @param Function \t\t\tcallback \n * \n * @returns \n */\nfunction attrInterception( timing, callback ) {\n\tconst window = this;\n\tconst { webqit, document, Element } = window;\n\tif ( !webqit.realdom.attrInterceptionHooks ) { Object.defineProperty( webqit.realdom, 'attrInterceptionHooks', { value: new Map } ); }\n\tif ( !webqit.realdom.attrInterceptionHooks.has( timing ) ) { webqit.realdom.attrInterceptionHooks.set( timing, new Set ); }\n\twebqit.realdom.attrInterceptionHooks.get( timing ).add( callback );\n\tconst rm = () => webqit.realdom.attrInterceptionHooks.get( timing ).delete( callback );\n\tif ( webqit.realdom.attrInterceptionHooks?.intercepting ) return rm;\n\tconsole.warn( `Attr mutation APIs are now being intercepted.` );\n\twebqit.realdom.attrInterceptionHooks.intercepting = true;\n\tObject.defineProperty( webqit.realdom, 'attrInterceptionRecords', { value: new Map } );\n\n\t// Interception hooks\n\tconst attrIntercept = ( record, defaultAction ) => {\n\t\tif ( !webqit.realdom.attrInterceptionRecords.has( record.target ) ) { webqit.realdom.attrInterceptionRecords.set( record.target, {} ); }\n\t\tconst registry = webqit.realdom.attrInterceptionRecords.get( record.target );\n\t\t// ------------------\n\t\tclearTimeout( registry[ record.name ]?.timeout ); // Clear any previous that's still active\n\t\tregistry[ record.name ] = record.event; // Main: set event details... and next to timeout details\n\t\tconst timeout = setTimeout( () => { delete registry[ record.name ]; }, 0 );\n\t\tObject.defineProperty( record.event, 'timeout', { value: timeout, configurable: true } );\n\t\t// ------------------\n\t\twebqit.realdom.attrInterceptionHooks.get( 'intercept' )?.forEach( callback => callback( [ record ] ) );\n\t\tconst returnValue = defaultAction();\n\t\twebqit.realdom.attrInterceptionHooks.get( 'sync' )?.forEach( callback => callback( [ record ] ) );\n\t\treturn returnValue;\n\t};\n\n\t// Interception observer WILL need to know non-API-based mutations\n\tconst mo = new window.MutationObserver( records => {\n\t\trecords = dedup( records ).map( rcd => withAttrEventDetails.call( window, rcd ) ).filter( ( rcd, i ) => {\n\t\t\treturn !Array.isArray( rcd.event );\n\t\t} );\n\t\tif ( !records.length ) return;\n\t\twebqit.realdom.attrInterceptionHooks.get( 'intercept' )?.forEach( callback => callback( records ) );\n\t\twebqit.realdom.attrInterceptionHooks.get( 'sync' )?.forEach( callback => callback( records ) );\n\t} );\n\tmo.observe( document, { attributes: true, subtree: true, attributeOldValue: true } );\n\n\t// Intercept DOM attr mutation methods\n\tconst originalApis = Object.create( null );\n\t[ 'setAttribute', 'removeAttribute', 'toggleAttribute', ].forEach( apiName => {\n\t\toriginalApis[ apiName ] = Element.prototype[ apiName ];\n\t\tElement.prototype[ apiName ] = function( ...args ) {\n\t\t\tlet value, oldValue = this.getAttribute( args[ 0 ] );\n\t\t\tif ( [ 'setAttribute', 'toggleAttribute' ].includes( apiName ) ) { value = args[ 1 ]; }\n\t\t\tif ( apiName === 'toggleAttribute' && value === undefined ) {\n\t\t\t\tvalue = oldValue === null ? true : false;\n\t\t\t}\n\t\t\tconst record = { target: this, name: args[ 0 ], value, oldValue, type: 'interception', event: [ this, apiName ] };\n\t\t\tconst exec = () => originalApis[ apiName ].call( this, ...args );\n\t\t\treturn attrIntercept( record, exec );\n\t\t}\n\t} );\n\n\treturn rm;\n}\n", "\n/**\n * @imports\n */\nimport { _isObject } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport AttrRealtime from './AttrRealtime.js';\nimport Realtime from './Realtime.js';\n\n/**\n *\n * @class DOMRealtime\n */\nexport default class DOMRealtime extends Realtime {\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( context, ...args ) {\n\t\tsuper( context, 'tree', ...args );\n\t}\n\n\t/**\n\t * Alias for ( new AttrRealtime() ).all( ... )\n\t */\n\tattr( filter, callback = undefined, params = {} ) {\n\t\tconst { context, window } = this;\n\t\treturn ( new AttrRealtime( context, window ) ).get( ...arguments );\n\t}\n\n\t/**\n\t * Runs a query.\n\t *\n\t * @param array|Element|string\t\tselectors\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t *\n\t * @return Disconnectable|Void\n\t */\n\tquery( selectors, callback = undefined, params = {} ) {\n\t\t[ selectors, callback = undefined, params = {} ] = this.resolveArgs( arguments );\n\t\tconst { context } = this;\n\t\t// ------------------\n\t\tconst records = new Map, getRecord = target => {\n\t\t\tif ( !records.has( target ) ) { records.set( target, { target, entrants: [], exits: [], type: 'query', event: null } ); }\n\t\t\treturn records.get( target );\n\t\t};\n\t\t// ------------------\n\t\tif ( !params.generation || params.generation === 'entrants' ) {\n\t\t\tif ( !selectors.length ) {\n\t\t\t\t//if ( params.subtree ) throw new Error( `The subtree option requires a selector to work.` );\n\t\t\t\t[ ...context.children ].forEach( node => getRecord( context ).entrants.push( node ) );\n\t\t\t} else if ( selectors.every( selector => typeof selector === 'string' ) && ( selectors = selectors.join( ',' ) ) ) {\n\t\t\t\tconst matches = params.subtree\n\t\t\t\t\t? context.querySelectorAll( selectors )\n\t\t\t\t\t: [ ...context.children ].filter( node => node.matches( selectors ) );\n\t\t\t\tmatches.forEach( node => getRecord( node.parentNode || context ).entrants.push( node ) );\n\t\t\t}\n\t\t}\n\t\t// ------------------\n\t\tif ( !callback ) return records;\n\t\tconst disconnectable = { disconnected: false };\n\t\tconst signalGenerator = callback && params.lifecycleSignals && this.createSignalGenerator();\n\t\tfor ( const [ , record ] of records ) {\n\t\t\tif ( disconnectable.disconnected ) break;\n\t\t\tconst flags = signalGenerator?.generate() || {};\n\t\t\tcallback( record, flags, context );\n\t\t}\n\t\t// ------------------\n\t\tif ( params.live ) {\n\t\t\tif ( signalGenerator ) { params = { ...params, signalGenerator }; }\n\t\t\tconst disconnectable_live = this.observe( selectors, callback, params );\n\t\t\treturn this.disconnectables( params.signal, disconnectable, disconnectable_live );\n\t\t}\n\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator );\n\t}\n\n\t/**\n\t * Alias for query( ..., { subtree: false } )\n\t */\n\tchildren( selectors, callback = undefined, params = {} ) {\n\t\t[ selectors, callback = undefined, params = {} ] = this.resolveArgs( arguments );\n\t\treturn this.query( selectors, callback, { ...params, subtree: false } );\n\t}\n\n\t/**\n\t * Alias for query( ..., { subtree: true } )\n\t */\n\tsubtree( selectors, callback = undefined, params = {} ) {\n\t\t[ selectors, callback = undefined, params = {} ] = this.resolveArgs( arguments );\n\t\treturn this.query( selectors, callback, { ...params, subtree: true } );\n\t}\n\n\t/**\n\t * Mutation Observer\n\t * \n\t * @param array|Element|string\t\tselectors\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t * \n\t * @returns Disconnectable\n\t */\n\tobserve( selectors, callback, params = {} ) {\n\t\t[ selectors, callback, params = {} ] = this.resolveArgs( arguments );\n\t\t// ------------------------\n\t\tif ( [ 'sync', 'intercept' ].includes( params.timing ) ) return this.observeSync( selectors, callback, params );\n\t\tif ( params.timing && params.timing !== 'async' ) throw new Error( `Timing option \"${ params.timing }\" invalid.` );\n\t\t// ------------------------\n\t\tconst { context, window, webqit, document } = this;\n\t\t// ------------------\n\t\tif ( params.eventDetails ) { webqit.realdom.domInterceptionRecordsAlwaysOn = true; }\n\t\tif ( ( document.readyState === 'loading' || webqit.realdom.domInterceptionRecordsAlwaysOn ) && !webqit.realdom.domInterceptionHooks?.intercepting ) {\n\t\t\tdomInterception.call( window, 'sync', () => {} );\n\t\t}\n\t\t// -------------\n\t\tconst disconnectable = new window.MutationObserver( records => records.forEach( record => {\n\t\t\tdispatch.call( window, registration, withEventDetails.call( window, record ), context );\n\t\t} ) );\n\t\tdisconnectable.observe( context, { childList: true, subtree: params.subtree, } );\n\t\tconst signalGenerator = params.signalGenerator || params.lifecycleSignals && this.createSignalGenerator();\n\t\tconst registration = { context, selectors, callback, params, signalGenerator, disconnectable };\n\t\t// -------------\n\t\tif ( params.staticSensitivity ) {\n\t\t\tconst disconnectable_attr = staticSensitivity.call( window, registration );\n\t\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator, disconnectable_attr );\n\t\t}\n\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator );\n\t}\n\t\n\t/**\n\t * Mutation Interceptor\n\t * \n\t * @param array|Element|string\t\tselectors\n\t * @param function\t\t\t\t\tcallback\n\t * @param object\t\t\t\t\tparams\n\t * \n\t * @returns Disconnectable\n\t */\n\tobserveSync( selectors, callback, params = {} ) {\n\t\t[ selectors, callback, params = {} ] = this.resolveArgs( arguments );\n\t\tconst { context, window } = this;\n\t\t// -------------\n\t\tif ( params.timing && ![ 'sync', 'intercept' ].includes( params.timing ) ) throw new Error( `Timing option \"${ params.timing }\" invalid.` );\n\t\tconst interceptionTiming = params.timing === 'intercept' ? 'intercept' : 'sync';\n\t\tconst intersectionDepth = params.subtree ? 'subtree' : 'children';\n\t\tif ( !this.registry( interceptionTiming ).size ) {\n\t\t\t// One handler per intercept/sync registry\n\t\t\tdomInterception.call( window, interceptionTiming, record => {\n\t\t\t\tthis.forEachMatchingContext( interceptionTiming, record, dispatch );\n\t\t\t} );\n\t\t}\n\t\tconst mo = new window.MutationObserver( records => records.forEach( record => {\n\t\t\tif ( Array.isArray( ( record = withEventDetails.call( window, record ) ).event ) ) return;\n\t\t\tdispatch.call( window, registration, record, context );\n\t\t} ) );\n\t\tmo.observe( context, { childList: true, subtree: params.subtree } );\n\t\t// -------------\n\t\tconst disconnectable = { disconnect() {\n\t\t\tmo.disconnect();\n\t\t\tregistry.delete( registration );\n\t\t\tif ( !registry.size ) { registries.delete( context ); }\n\t\t} };\n\t\tconst signalGenerator = params.signalGenerator || params.lifecycleSignals && this.createSignalGenerator();\n\t\tconst registration = { context, selectors, callback, params, signalGenerator, disconnectable };\n\t\t// -------------\n\t\tconst registries = this.registry( interceptionTiming, intersectionDepth );\n\t\tif ( !registries.has( context ) ) { registries.set( context, new Set ); }\n\t\tconst registry = registries.get( context );\n\t\tregistry.add( registration );\n\t\t// -------------\n\t\tif ( params.staticSensitivity ) {\n\t\t\tconst disconnectable_attr = staticSensitivity.call( window, registration );\n\t\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator, disconnectable_attr );\n\t\t}\n\t\treturn this.disconnectables( params.signal, disconnectable, signalGenerator );\n\t}\n}\n\n/**\n * Sensitivty for attribute changes for attribute selectors.\n * \n * @param object registration\n * \n * @returns Disconnectable\n */\nfunction staticSensitivity( registration ) {\n\tconst window = this;\n\tconst { context, selectors, callback, params, signalGenerator } = registration;\n\tconst parseDot = selector => selector.match( /\\.([\\w-]+)/g )?.length ? [ 'class' ] : [];\n\tconst parseHash = selector => selector.match( /#([\\w-]+)/g )?.length ? [ 'id' ] : [];\n\tconst parse = selector => [ ...selector.matchAll(/\\[([^\\=\\]]+)(\\=[^\\]]+)?\\]/g) ].map( x => x[ 1 ] ).concat( parseDot( selector ) ).concat( parseHash( selector ) );\n\tif ( !( registration.$attrs = Array.from( new Set( selectors.filter( s => typeof s === 'string' && s.includes( '[' ) ).reduce( ( attrs, selector ) => attrs.concat( parse( selector ) ), [] ) ) ) ).length ) return;\n\t// ---------\n\tconst entrants = new Set, exits = new Set;\n\tentrants.push = val => ( exits.delete( val ), entrants.add( val ) );\n\texits.push = val => ( entrants.delete( val ), exits.add( val ) );\n\tregistration.$deliveryCache = { entrants, exits };\n\t// ---------\n\treturn ( new AttrRealtime( context, window ) ).observe( registration.$attrs, _records => {\n\t\tconst records = new Map, getRecord = target => {\n\t\t\tif ( !records.has( target ) ) { records.set( target, { target, entrants: [], exits: [], type: 'static', event: null } ); }\n\t\t\treturn records.get( target );\n\t\t};\n\t\t// ---------\n\t\tconst matchesCache = new WeakMap;\n\t\tconst matches = node => {\n\t\t\tif ( !matchesCache.has( node ) ) { matchesCache.set( node, selectors.some( selector => node.matches( selector ) ) ); }\n\t\t\treturn matchesCache.get( node );\n\t\t};\n\t\t// ---------\n\t\tfor ( const _record of _records ) {\n\t\t\t[ 'entrants', 'exits' ].forEach( generation => {\n\t\t\t\tif ( params.generation && generation !== params.generation ) return;\n\t\t\t\tif ( registration.$deliveryCache[ generation ].has( _record.target ) || ( generation === 'entrants' ? !matches( _record.target ) : matches( _record.target ) ) ) return;\n\t\t\t\tregistration.$deliveryCache[ generation ].push( _record.target );\n\t\t\t\tgetRecord( _record.target )[ generation ].push( _record.target );\n\t\t\t\tgetRecord( _record.target ).event = _record.event;\n\t\t\t} );\n\t\t}\n\t\t// ---------\n\t\tfor ( const [ , record ] of records ) {\n\t\t\tconst flags = signalGenerator?.generate() || {};\n\t\t\tcallback( record, flags, context );\n\t\t}\n\t}, { subtree: params.subtree, timing: params.timing, eventDetails: params.eventDetails } );\n}\n\n/**\n * Dispatches a mutation record if it matches the observed.\n * \n * @param Object \t\t\tregistration \n * @param Object \t\t\trecord \n * \n * @returns Void\n */\nfunction dispatch( registration, _record ) {\n\tconst { context, selectors, callback, params, signalGenerator, $deliveryCache } = registration;\n\t// ---------\n\tconst record = { ..._record, entrants: [], exits: [] };\n\tif ( !params.eventDetails ) { delete record.event; }\n\t[ 'entrants', 'exits' ].forEach( generation => {\n\t\tif ( params.generation && generation !== params.generation ) return;\n\t\tif ( selectors.length ) {\n\t\t\trecord[ generation ] = nodesIntersection( selectors, _record[ generation ], _record.event !== 'parse' );\n\t\t} else {\n\t\t\trecord[ generation ] = [ ..._record[ generation ] ];\n\t\t}\n\t\tif ( !$deliveryCache ) return;\n\t\tfor ( const node of record[ generation ] ) {\n\t\t\t$deliveryCache[ generation ].push( node );\n\t\t}\n\t} );\n\t// ---------\n\tif ( !record.entrants.length && !record.exits.length ) return;\n\tconst flags = signalGenerator?.generate() || {};\n\tcallback( record, flags, context );\n}\n\n/**\n * Aggregates instances of els in sources\n * \n * @param Array \t\t\ttargets \n * @param Array \t\t\tsources \n * @param Bool \t\t\t\tdeepIntersect \n * \n * @returns \n */\nfunction nodesIntersection( targets, sources, deepIntersect ) {\n\tsources = Array.isArray( sources ) ? sources : [ ...sources ];\n\tconst match = ( sources, target ) => {\n\t\t// Filter out text nodes\n\t\tsources = sources.filter( source => source.matches );\n\t\tif ( typeof target === 'string' ) {\n\t\t\t// Is directly mutated...\n\t\t\tlet matches = sources.filter( source => source.matches( target ) );\n\t\t\t// Is contextly mutated...\n\t\t\tif ( deepIntersect ) {\n\t\t\t\tmatches = sources.reduce( ( collection, source ) => {\n\t\t\t\t\treturn [ ...collection, ...source.querySelectorAll( target ) ];\n\t\t\t\t}, matches );\n\t\t\t}\n\t\t\tif ( matches.length ) return matches;\n\t\t} else {\n\t\t\t// Is directly mutated...\n\t\t\tif ( sources.includes( target ) || (\n\t\t\t\tdeepIntersect && sources.some( source => source.contains( target ) )\n\t\t\t) ) { return [ target ]; }\n\t\t}\n\t};\n\t// Search can be expensive...\n\t// Multiple listeners searching the same thing in the same list?\n\tif ( !sources.$$searchCache ) { sources.$$searchCache = new Map; }\n\treturn targets.reduce( ( matches, target ) => {\n\t\tlet _matches;\n\t\tif ( sources.$$searchCache.has( target ) ) {\n\t\t\t_matches = sources.$$searchCache.get( target );\n\t\t} else {\n\t\t\t_matches = match( sources, target ) || [];\n\t\t\tif ( _isObject( target ) ) {\n\t\t\t\tsources.$$searchCache.set( target, _matches );\n\t\t\t}\n\t\t}\n\t\treturn matches.concat( _matches );\n\t}, [] );\n}\n\n/**\n * Determines the event for a mutation record\n * \n * @param MutationRecord \t{ target, entrants, exits }\n * \n * @returns Object\n */\nfunction withEventDetails( { target, addedNodes, removedNodes } ) {\n\tlet window = this, event;\n\tevent = _arrFrom( addedNodes ).reduce( ( prev, node ) => prev || window.webqit.realdom.domInterceptionRecords?.get( node ), null );\n\tevent = _arrFrom( removedNodes ).reduce( ( prev, node ) => prev || window.webqit.realdom.domInterceptionRecords?.get( node ), event );\n\tevent = event || window.document.readyState === 'loading' && 'parse' || 'mutation';\n\treturn { target, entrants: addedNodes, exits: removedNodes, type: 'observation', event };\n}\n\n/**\n * DOM intersection engine.\n * \n * @param String \t\t\ttiming \n * @param Function \t\t\tcallback \n * \n * @returns \n */\nfunction domInterception( timing, callback ) {\n\tconst window = this;\n\tconst { webqit, document, Node, CharacterData, Element, HTMLElement, HTMLTemplateElement, DocumentFragment } = window;\n\tif ( !webqit.realdom.domInterceptionHooks ) { Object.defineProperty( webqit.realdom, 'domInterceptionHooks', { value: new Map } ); }\n\tif ( !webqit.realdom.domInterceptionHooks.has( timing ) ) { webqit.realdom.domInterceptionHooks.set( timing, new Set ); }\n\twebqit.realdom.domInterceptionHooks.get( timing ).add( callback );\n\tconst rm = () => webqit.realdom.domInterceptionHooks.get( timing ).delete( callback );\n\tif ( webqit.realdom.domInterceptionHooks?.intercepting ) return rm;\n\tconsole.warn( `DOM mutation APIs are now being intercepted.` );\n\twebqit.realdom.domInterceptionHooks.intercepting = true;\n\tObject.defineProperty( webqit.realdom, 'domInterceptionRecords', { value: new Map } );\n\n\t// Interception hooks\n\tconst intercept = ( record, defaultAction ) => {\n\t\trecord.entrants.concat( record.exits ).forEach( node => {\n\t\t\tclearTimeout( webqit.realdom.domInterceptionRecords.get( node )?.timeout ); // Clear any previous that's still active\n\t\t\twebqit.realdom.domInterceptionRecords.set( node, record.event ); // Main: set event details... and next to timeout details\n\t\t\tconst timeout = setTimeout( () => { webqit.realdom.domInterceptionRecords.delete( node ); }, 0 );\n\t\t\tObject.defineProperty( record.event, 'timeout', { value: timeout, configurable: true } );\n\t\t} );\n\t\twebqit.realdom.domInterceptionHooks.get( 'intercept' )?.forEach( callback => callback( record ) );\n\t\tconst returnValue = defaultAction();\n\t\twebqit.realdom.domInterceptionHooks.get( 'sync' )?.forEach( callback => callback( record ) );\n\t\treturn returnValue;\n\t};\n\n\t// Intercept DOM mutation methods\n\tconst _originalApis = { characterData: Object.create( null ), other: Object.create( null ) };\n\t[ 'insertBefore'/*Node*/, 'insertAdjacentElement', 'insertAdjacentHTML', 'setHTML',\n\t\t'replaceChildren', 'replaceWith', 'remove', 'replaceChild'/*Node*/, 'removeChild'/*Node*/, \n\t\t'before', 'after', 'append', 'prepend', 'appendChild'/*Node*/, \n\t].forEach( apiName => {\n\t\tfunction method( ...args ) {\n\t\t\tconst originalApis = this instanceof CharacterData ? _originalApis.characterData : _originalApis.other;\n\t\t\t// Instance of Node interface? Abort!\n\t\t\tconst exec = () => originalApis[ apiName ].call( this, ...args );\n\t\t\tif ( !( this instanceof CharacterData || this instanceof Element || this instanceof DocumentFragment ) ) return exec();\n\t\t\t// --------------\n\t\t\t// Obtain exits and entrants\n\t\t\tlet exits = [], entrants = [], target = this;\n\t\t\tif ( [ 'insertBefore' ].includes( apiName ) ) {\n\t\t\t\tentrants = [ args[ 0 ] ];\n\t\t\t} else if ( [ 'insertAdjacentElement', 'insertAdjacentHTML' ].includes( apiName ) ) {\n\t\t\t\tentrants = [ args[ 1 ] ];\n\t\t\t\tif ( [ 'beforebegin', 'afterend' ].includes( args[ 0 ] ) ) {\n\t\t\t\t\ttarget = this.parentNode;\n\t\t\t\t}\n\t\t\t} else if ( [ 'setHTML', 'replaceChildren' ].includes( apiName ) ) {\n\t\t\t\texits = [ ...this.childNodes ];\n\t\t\t\tentrants = apiName === 'replaceChildren' ? [ ...args ] : [ args[ 0 ] ];\n\t\t\t} else if ( [ 'replaceWith', 'remove' ].includes( apiName ) ) {\n\t\t\t\texits = [ this ];\n\t\t\t\tentrants = apiName === 'replaceWith' ? [ ...args ] : [];\n\t\t\t\ttarget = this.parentNode;\n\t\t\t} else if ( [ 'replaceChild' ].includes( apiName ) ) {\n\t\t\t\texits = [ args[ 1 ] ];\n\t\t\t\tentrants = [ args[ 0 ] ];\n\t\t\t} else if ( [ 'removeChild' ].includes( apiName ) ) {\n\t\t\t\texits = [ ...args ];\n\t\t\t} else {\n\t\t\t\t// 'before', 'after', 'append', 'prepend', 'appendChild'\n\t\t\t\tentrants = [ ...args ];\n\t\t\t\tif ( [ 'before', 'after' ].includes( apiName ) ) {\n\t\t\t\t\ttarget = this.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// --------------\n\t\t\t// Parse HTML to entrants\n\t\t\tlet apiNameFinal = apiName;\n\t\t\tif ( [ 'insertAdjacentHTML', 'setHTML' ].includes( apiName ) ) {\n\t\t\t\tlet tempNodeName = this.nodeName;\n\t\t\t\tif ( apiName === 'insertAdjacentHTML' && [ 'beforebegin', 'afterend' ].includes( args[ 0 ] ) ) {\n\t\t\t\t\t// We can't handle this... and this is going to throw afterall\n\t\t\t\t\tif ( !this.parentNode ) return originalApis[ apiName ].call( this, ...args );\n\t\t\t\t\ttempNodeName = this.parentNode.nodeName;\n\t\t\t\t}\n\t\t\t\tconst temp = document.createElement( tempNodeName );\n\t\t\t\toriginalApis.setHTML.call( temp, entrants[ 0 ], apiName === 'setHTML' ? args[ 1 ] : {} );\n\t\t\t\tentrants = [ ...temp.childNodes ];\n\t\t\t\t// --------------  \n\t\t\t\tif ( apiName === 'insertAdjacentHTML' ) {\n\t\t\t\t\tapiNameFinal = 'insertAdjacentElement';\n\t\t\t\t\targs[ 1 ] = new DocumentFragment;\n\t\t\t\t\targs[ 1 ].______isTemp = true;\n\t\t\t\t\targs[ 1 ].append( ...temp.childNodes );\n\t\t\t\t} else {\n\t\t\t\t\tapiNameFinal = 'replaceChildren';\n\t\t\t\t\targs = [ ...temp.childNodes ];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// --------------\n\t\t\tconst record = { target, entrants, exits, type: 'interception', event: [ this, apiName ] };\n\t\t\treturn intercept( record, () => {\n\t\t\t\treturn originalApis[ apiNameFinal ].call( this, ...args );\n\t\t\t} );\n\t\t}\n\t\t// We'll be sure to monkey the correct interface\n\t\tif ( [ 'insertBefore', 'replaceChild', 'removeChild', 'appendChild' ].includes( apiName ) ) {\n\t\t\t_originalApis.other[ apiName ] = Node.prototype[ apiName ];\n\t\t\tNode.prototype[ apiName ] = method;\n\t\t} else {\n\t\t\t// Comment nodes have this methods too\n\t\t\tif ( [ 'after', 'before', 'remove', 'replaceWith' ].includes( apiName ) ) {\n\t\t\t\t_originalApis.characterData[ apiName ] = CharacterData.prototype[ apiName ];\n\t\t\t\tCharacterData.prototype[ apiName ] = method;\n\t\t\t}\n\t\t\t// In case newer methods like setHTML() are not supported\n\t\t\tif ( Element.prototype[ apiName ] ) {\n\t\t\t\t_originalApis.other[ apiName ] = Element.prototype[ apiName ];\n\t\t\t\tElement.prototype[ apiName ] = method;\n\t\t\t}\n\t\t}\n\t} );\n\n\tconst originalApis = Object.create( null );\n\t// Intercept DOM mutation properties\n\t[ 'outerHTML', 'outerText'/*HTMLElement*/, 'innerHTML', \n\t\t'innerText'/*HTMLElement*/,'textContent'/*Node*/, 'nodeValue'/*Node*/\n\t].forEach( apiName => {\n\t\t// We'll be sure to monkey the correct interface\n\t\tconst Interface = [ 'textContent', 'nodeValue' ].includes( apiName ) ? Node : (\n\t\t\t[ 'outerText', 'innerText' ].includes( apiName ) ? HTMLElement : Element\n\t\t);\n\t\toriginalApis[ apiName ] = Object.getOwnPropertyDescriptor( Interface.prototype, apiName );\n\t\tObject.defineProperty( Interface.prototype, apiName, { ...originalApis[ apiName ], set: function( value ) {\n\t\t\tlet exec = () => originalApis[ apiName ].set.call( this, value );\n\t\t\t// Instance of Node interface? Abort!\n\t\t\tif ( !( this instanceof Element ) ) return exec();\n\t\t\t// --------------\n\t\t\t// Obtain exits and entrants\n\t\t\tlet exits = [], entrants = [], target = this;\n\t\t\tif ( [ 'outerHTML', 'outerText' ].includes( apiName ) ) {\n\t\t\t\texits = [ this ];\n\t\t\t\ttarget = this.parentNode;\n\t\t\t} else {\n\t\t\t\t// 'innerHTML', 'innerText', 'textContent', 'nodeValue'\n\t\t\t\texits = /*this instanceof HTMLTemplateElement \n\t\t\t\t\t? [ ...this.content.childNodes ]\n\t\t\t\t\t: */[ ...this.childNodes ];\n\t\t\t}\n\t\t\t// --------------\n\t\t\t// Parse HTML to nodes\n\t\t\tif ( [ 'outerHTML', 'innerHTML' ].includes( apiName ) ) {\n\t\t\t\tlet tempNodeName = this.nodeName;\n\t\t\t\tif ( apiName === 'outerHTML' ) {\n\t\t\t\t\t// We can't handle this... and this is going to throw afterall\n\t\t\t\t\tif ( !this.parentNode ) return exec();\n\t\t\t\t\ttempNodeName = this.parentNode.nodeName;\n\t\t\t\t}\n\t\t\t\tconst temp = document.createElement( tempNodeName === 'TEMPLATE' ? 'div' : tempNodeName );\n\t\t\t\toriginalApis[ apiName ].set.call( temp, value );\n\t\t\t\tentrants = /*[ ...temp.childNodes ];*/this instanceof HTMLTemplateElement ? [] : [ ...temp.childNodes ];\n\t\t\t\t// -------------- \n\t\t\t\tif ( apiName === 'outerHTML' ) {\n\t\t\t\t\tvalue = new DocumentFragment;\n\t\t\t\t\tvalue.______isTemp = true;\n\t\t\t\t\tvalue.append( ...temp.childNodes );\n\t\t\t\t\texec = () => Element.prototype.replaceWith.call( this, value );\n\t\t\t\t} else {\n\t\t\t\t\tif ( this instanceof HTMLTemplateElement ) {\n\t\t\t\t\t\texec = () => this.content.replaceChildren( ...temp.childNodes );\n\t\t\t\t\t} else {\n\t\t\t\t\t\texec = () => Element.prototype.replaceChildren.call( this, ...temp.childNodes );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// -------------- \n\t\t\tconst record = { target, entrants, exits, type: 'interception', event: [ this, apiName ] };\n\t\t\treturn intercept( record, exec );\n\t\t} } );\n\t} );\n\n\t// Intercept document mutation methods\n\t[ 'append', 'prepend', 'replaceChildren' ].forEach( apiName => {\n\t\t[ document, DocumentFragment.prototype ].forEach( target => {\n\t\t\tconst originalApi = target[ apiName ];\n\t\t\ttarget[ apiName ] = function( ...args ) {\n\t\t\t\tif ( this.______isTemp ) return originalApi.call( this, ...args );\n\t\t\t\tconst exits = apiName === 'replaceChildren' ? [ ...this.childNodes ] : [];\n\t\t\t\tconst record = {\n\t\t\t\t\ttarget: this,\n\t\t\t\t\tentrants: args,\n\t\t\t\t\texits,\n\t\t\t\t\ttype: 'interception', \n\t\t\t\t\tevent: [ this, apiName ]\n\t\t\t\t};\n\t\t\t\treturn intercept( record, () => {\n\t\t\t\t\treturn originalApi.call( this, ...args );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t} );\n\n\treturn rm;\n}\n", "\r\n/**\r\n * Applies all supported polyfills\r\n */\r\nexport default function() {\r\n    CSS_escape.call( this );\r\n    Node_isConnected.call( this );\r\n    Element_matches.call( this );\r\n}\r\n\r\n/**\r\n * Polyfills the window.CSS object.\r\n *  \r\n * @return void\r\n */\r\nexport function CSS_escape() {\r\n    const window = this;\r\n    if ( !window.CSS ) { window.CSS = {} }\r\n    if ( !window.CSS.escape ) {\r\n        /**\r\n         * Polyfills the window.CSS.escape() function.\r\n         *  \r\n         * @param string str \r\n         * \r\n         * @return string\r\n         */\r\n        window.CSS.escape = str => str.replace( /([\\:@\\~\\$\\&])/g, '\\\\$1' );\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Node.prototype.isConnected property\r\n * \r\n * @see MDN\r\n  *  \r\n * @return bool\r\n*/\r\nexport function Node_isConnected() {\r\n    const window = this;\r\n    if ( !( 'isConnected' in window.Node.prototype ) ) {\r\n        Object.defineProperty( window.Node.prototype, 'isConnected', { get: function() {\r\n            return !this.ownerDocument || !(\r\n                this.ownerDocument.compareDocumentPosition( this )\r\n                & this.DOCUMENT_POSITION_DISCONNECTED);\r\n        } } );\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Element.prototype.matches() method\r\n * \r\n * @see MDN\r\n  *  \r\n * @return void\r\n*/\r\nexport function Element_matches() {\r\n    const window = this;\r\n    if ( !window.Element.prototype.matches ) {\r\n        window.Element.prototype.matches = \r\n        window.Element.prototype.matchesSelector || \r\n        window.Element.prototype.mozMatchesSelector ||\r\n        window.Element.prototype.msMatchesSelector || \r\n        window.Element.prototype.oMatchesSelector || \r\n        window.Element.prototype.webkitMatchesSelector ||\r\n        function( s ) {\r\n            var matches = ( this.document || this.ownerDocument ).querySelectorAll( s ),\r\n                i = matches.length;\r\n            while ( --i >= 0 && matches.item( i ) !== this ) {}\r\n            return i > -1;            \r\n        }\r\n    }\r\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport { _isNumeric, _isString, _isFunction } from '@webqit/util/js/index.js';\r\nimport { _set } from '@webqit/util/obj/index.js';\r\nimport Scheduler from './Scheduler.js';\r\nimport DOMRealtime from './realtime/DOMRealtime.js';\r\nimport AttrRealtime from './realtime/AttrRealtime.js';\r\nimport polyfill from './polyfills.js';\r\n\r\nexport default function() {\r\n    const window = this;\r\n    if ( !window.webqit ) window.webqit = {};\r\n    if ( window.webqit.realdom ) return window.webqit.realdom;\r\n    window.webqit.realdom = {};\r\n    polyfill.call( window );\r\n    // ------\r\n    window.webqit.realdom.meta = ( ...args ) => meta.call( window, ...args );\r\n    window.webqit.realdom.ready = ( ...args ) => ready.call( window, ...args );\r\n    // ------\r\n    window.webqit.realdom.realtime = ( context, namespace = 'dom' ) => {\r\n        if ( namespace === 'dom' ) return new DOMRealtime( context, window );\r\n        if ( namespace === 'attr' ) return new AttrRealtime( context, window );\r\n    };\r\n    // ------\r\n    const scheduler = new Scheduler( window );\r\n    window.webqit.realdom.schedule = ( type, ...args ) => {\r\n        return scheduler[ `on${ type }` ]( ...args );\r\n    };\r\n    // ------\r\n    return window.webqit.realdom;\r\n}\r\n\r\n\r\n/**\r\n * DOM-ready listeners.\r\n * \r\n * @param Function\t    \t\tcallback\r\n * \r\n * @return void\r\n */\r\nfunction ready( ...args ) {\r\n    let timing = 'interactive', callback;\r\n    if ( _isString( args[ 0 ] ) ) {\r\n        timing = args[ 0 ];\r\n        if ( _isFunction( args[ 1 ] ) ) { callback = args[ 1 ]; }\r\n    } else if ( _isFunction( args[ 0 ] ) ) { callback = args[ 0 ]; }\r\n    // --------------\r\n    const timings = { interactive: [ 'interactive', 'complete' ], complete: [ 'complete' ], };\r\n    if ( !timings[ timing ] ) throw new Error( `Invalid ready-state timing: ${ timing }.` );\r\n\tconst window = this;\r\n    // --------------\r\n    if ( !callback ) {\r\n        if ( !window.webqit.realdom.readyStatePromises ) {\r\n            window.webqit.realdom.readyStatePromises = {\r\n                interactive: new Promise( res => ready.call( this, 'interactive', res ) ),\r\n                complete: new Promise( res => ready.call( this, 'complete', res ) ),\r\n            };\r\n        }\r\n        return window.webqit.realdom.readyStatePromises[ timing ];\r\n    }\r\n    // --------------\r\n\tif ( timings[ timing ].includes( window.document.readyState ) ) return callback( window );\r\n    if ( !window.webqit.realdom.readyStateCallbacks ) {\r\n        window.webqit.realdom.readyStateCallbacks = { interactive: [], complete: [] };\r\n        window.document.addEventListener( 'readystatechange', () => {\r\n            const state = window.document.readyState;\r\n            for ( const callback of window.webqit.realdom.readyStateCallbacks[ state ].splice( 0 ) ) {\r\n                callback( window );\r\n            }\r\n        }, false );\r\n    }\r\n    window.webqit.realdom.readyStateCallbacks[ timing ].push( callback );\r\n}\r\n\r\n/**\r\n * A webqit's meta tag props reader.\r\n *  \r\n * @param String name\r\n * \r\n * @return Object\r\n */\r\nfunction meta( name ) {\r\n    const window = this;\r\n    let _content = {}, _el;\r\n    if ( _el = window.document.querySelector( `meta[name=\"${ name }\"]` ) ) {\r\n        _content = ( _el.content || '' ).split( ';' ).filter( v => v ).reduce( ( _metaVars, directive ) => {\r\n            const directiveSplit = directive.split( '=' ).map( d => d.trim() );\r\n            _set( _metaVars, directiveSplit[ 0 ].split( '.' ), directiveSplit[ 1 ] === 'true' ? true : (directiveSplit[ 1 ] === 'false' ? false : (\r\n                    _isNumeric( directiveSplit[ 1 ] ) ? parseInt( directiveSplit[ 1 ] ) : directiveSplit[ 1 ]\r\n                ) )\r\n            );\r\n            return _metaVars;\r\n        }, {} );\r\n    }\r\n    return { get name() { return name; }, get content() { return _el.content; }, json() {\r\n\t\treturn JSON.parse( JSON.stringify( _content ) );\r\n    } };\r\n}", "\n/**\n * @imports\n */\nimport realdomInit from '@webqit/realdom';\nimport { _internals } from '@webqit/util/js/index.js';\nimport { _merge } from '@webqit/util/obj/index.js';\n\nexport const _ = ( ...args ) => _internals( 'oohtml', ...args );\n\nexport function _init( name, $config, $defaults ) {\n    const _name = name.toUpperCase().replace( '-', '_' );\n    const window = this, realdom = realdomInit.call( window );\n    window.webqit || ( window.webqit = {} );\n    window.webqit.oohtml || ( window.webqit.oohtml = {} );\n    window.webqit.oohtml.configs || ( window.webqit.oohtml.configs = {} );\n    window.webqit.oohtml.configs[ _name ] || ( window.webqit.oohtml.configs[ _name ] = {} );\n    // ---------------------\n    _merge( 2, window.webqit.oohtml.configs[ _name ], $defaults, $config, realdom.meta( name ).json() );\n    // ---------------------\n    return { config: window.webqit.oohtml.configs[ _name ], realdom, window };\n}\n\nexport function _compare( a, b, depth = 1, objectSizing = false ) {\n    if ( depth && typeof a === 'object' && a && typeof b === 'object' && b && ( !objectSizing || Object.keys( a ).length === Object.keys( b ).length ) ) {\n        for ( let key in a ) {\n            if ( !_compare( a[ key ], b[ key ], depth - 1, objectSizing ) ) return false;\n        }\n        return true;\n    }\n    if ( Array.isArray( a ) && Array.isArray( b ) && a.length === b.length ) {\n        return ( b = b.slice( 0 ).sort() ) && a.slice( 0 ).sort().every( ( valueA, i ) => valueA === b[ i ] );\n    }\n    return a === b;\n};", "\nexport default function() {\n    const window = this;\n    return class ContextRequestEvent extends window.Event {\n\n        /**\n         * @constructor\n         */\n        constructor( request, callback, { type = 'contextrequest', ...options } = {} ) {\n            super( type, options );\n            Object.defineProperty( this, 'request', { get: () => request } );\n            Object.defineProperty( this, 'callback', { get: () => callback } );\n        }\n\n        /**\n         * @respondWith\n         */\n        respondWith( response, ...rest ) {\n            if ( this.request.diff ) {\n                if ( 'previousValue' in this && this.previousValue === response ) return;\n                this.previousValue = response;\n            }\n            return this.callback( response, ...rest );\n        }\n    };\n}", "\n/**\n * @imports\n */\nimport _ContextRequestEvent from './_ContextRequestEvent.js';\nimport { _ } from '../util.js';\n\nexport default class HTMLContext {\n\n    /**\n     * @instance\n     */\n    static instance( host ) {\n        return _( host ).get( 'context::instance' ) || new this( host );;\n    }\n\n    /**\n     * @constructor\n     */\n    constructor( host ) {\n        _( host ).get( `context::instance` )?.dispose();\n        _( host ).set( `context::instance`, this );\n        const priv = { host, contexts: new Set };\n        Object.defineProperty( this, '#', { get: () => priv } );\n        const ContextRequestEvent = _ContextRequestEvent.call( host.ownerDocument?.defaultView || host.defaultView );\n        Object.defineProperty( this, 'ContextRequestEvent', { get: () => ContextRequestEvent } );\n        this[ Symbol.iterator ] = function*() {\n            const it = priv.contexts[ Symbol.iterator ]();\n            yield it.next().value;\n        }\n    }\n\n    /**\n     * @length()\n     */\n    get length() {\n        this[ '#' ].contexts.size;\n    }\n\n    /**\n     * @find()\n     */\n    findProvider( callback ) {\n        return [ ...this[ '#' ].contexts ].find( callback );\n    }\n\n    /**\n     * @attachProvider()\n     */\n    attachProvider( context ) {\n        this[ '#' ].contexts.add( context );\n        context.initialize( this[ '#' ].host );\n    }\n\n    /**\n     * @detachProvider()\n     */\n    detachProvider( context ) {\n        context.dispose( this[ '#' ].host );\n        this[ '#' ].contexts.delete( context );\n    }\n\n    /**\n     * @request()\n     */\n    request( request, callback, options = {} ) {\n        return this[ '#' ].host.dispatchEvent(\n            new this.ContextRequestEvent( request, callback, { bubbles: true, ...options } )\n        );\n    }\n\n    /**\n     * @dispose()\n     */\n    dispose() {}\n\n}", "\n/**\n * @imports\n */\nimport { _compare } from '../util.js';\nimport HTMLContext from './HTMLContext.js';\n\nexport default class HTMLContextProvider {\n\n    /**\n     * @config\n     */\n    static get config() {\n        return {};\n    }\n\n    /**\n     * @attachTo\n     */\n    static attachTo( host, Id, multiple = false ) {\n        let provider, contextMgr = HTMLContext.instance( host );\n        if ( !multiple && ( provider = contextMgr.findProvider( cx => this.matchRequest( cx.id, Id, true ) ) ) ) return provider;\n        return contextMgr.attachProvider( new this( Id ) );\n    }\n\n    /**\n     * @detachFrom\n     */\n    static detachFrom( host, Id, multiple = false ) {\n        let provider, contextMgr = HTMLContext.instance( host );\n        for ( provider of contextMgr[ '#' ].contexts ) {\n            if ( !this.matchRequest( provider.id, Id, true ) || ( typeof multiple === 'function' && !multiple( provider ) ) ) continue;\n            contextMgr.detachProvider( provider );\n            if ( typeof multiple !== 'function' && !multiple ) return provider;\n        }\n    }\n \n    /**\n     * @createId\n     */\n    static createId( host, fields = {} ) {\n        const id = { ...fields };\n        if ( id.contextName ) return id;\n        if ( host.getAttribute && !( id.contextName = ( host.getAttribute( this.config.context.attr.contextname ) || '' ).trim() ) ) {\n            delete id.contextName;\n        } else if ( !host.ownerDocument ) {\n            id.contextName = 'root';\n        }\n        return id;\n    }\n \n    /**\n     * @createRequest\n     */\n    static createRequest( fields = {} ) {\n        return { ...fields };\n    }\n\n    /**\n     * @matchesRequest\n     */\n    static matchRequest( id, request, strict = false ) {\n        if ( strict ) return _compare( id, request, 1, true );\n        return request.type === id.type && !request.contextName || request.contextName === id.contextName;\n    }\n\n    /**\n     * @constructor\n     */\n    constructor( id ) {\n        Object.defineProperty( this, 'id', { get: () => id } );\n        Object.defineProperty( this, 'subscriptions', { value: new Set } );\n    }\n\n    /**\n     * @length()\n     */\n    get length() {\n        this.subscriptions.size;\n    }\n\n    /**\n     * @handle()\n     */\n    handle( event ) {}\n\n    /**\n     * @subscribe()\n     */\n    subscribe( event ) {\n        this.subscriptions.add( event );\n        if ( !event.request.signal ) return;\n        event.request.signal.addEventListener( 'abort', () => {\n            this.unsubscribe( event );\n        } );\n    }\n\n    /**\n     * @unsubscribe()\n     */\n    unsubscribe( event ) {\n        this.subscriptions.delete( event );\n        event.request.controller?.abort();\n    }\n\n    /**\n     * @handleEvent()\n     */\n    handleEvent( event ) {\n        if ( this.disposed || ( event.target === this.host && event.request?.superContextOnly )\n        || !event.request || typeof event.callback !== 'function' || !this.constructor.matchRequest( this.id, event.request ) ) return;\n        event.stopPropagation();\n        if ( event.type === 'contextclaim' ) {\n            const claims = new Set;\n            this.subscriptions.forEach( subscriptionEvent => {\n                if ( !event.target.contains( subscriptionEvent.request.superContextOnly ? subscriptionEvent.target.parentNode : subscriptionEvent.target ) \n                || !this.constructor.matchRequest( event.request/*provider ID*/, subscriptionEvent.request/*request ID*/ ) ) return;\n                this.subscriptions.delete( subscriptionEvent );\n                claims.add( subscriptionEvent );\n            } );\n            event.respondWith( claims );\n        } else if ( event.type === 'contextrequest' ) {\n            if ( event.request.live ) { this.subscribe( event ); }\n            this.handle( event );\n        }\n    }\n\n    /**\n     * @initialize()\n     */\n    initialize( host ) {\n        this.host = host;\n        this.disposed = false;\n        host.addEventListener( 'contextrequest', this );\n        host.addEventListener( 'contextclaim', this );\n        HTMLContext.instance( host ).request( { ...this.id, superContextOnly: true }, claims => claims.forEach( subscriptionEvent => {\n            this.subscribe( subscriptionEvent );\n            this.handle( subscriptionEvent );\n        } ), { type: 'contextclaim' } );\n        return this;\n    }\n     \n    /**\n     * @dispose()\n     */\n    dispose( host ) {\n        this.disposed = true;\n        host.removeEventListener( 'contextrequest', this );\n        host.removeEventListener( 'contextclaim', this );\n        this.subscriptions.forEach( subscriptionEvent => {\n            this.unsubscribe( subscriptionEvent );\n            const { target, request, callback, options } = subscriptionEvent;\n            HTMLContext.instance( target ).request( request, callback, options );\n        } );\n        return this;\n    }\n\n}", "\n/**\n * @imports\n */\nimport Observer from '@webqit/observer';\nimport { _isNumeric } from '@webqit/util/js/index.js';\nimport { getModulesObject } from './index.js';\nimport { _ } from '../util.js';\n\nexport default class _HTMLExportsManager {\n\n    /**\n     * @instance\n     */\n    static instance( window, host, config ) {\n        return _( host ).get( 'exportsmanager::instance' ) || new this( window, host, config );\n    }\n\n    /**\n     * @constructor\n     */\n    constructor( window, host, config = {}, parent = null, level = 0 ) {\n        _( host ).get( `exportsmanager::instance` )?.dispose();\n        _( host ).set( `exportsmanager::instance`, this );\n        this.host = host;\n        this.window = window;\n        this.config = config;\n        this.parent = parent;\n        this.level = level;\n        this.modules = getModulesObject( this.host );\n        this.exportId = ( this.host.getAttribute( this.config.template?.attr.moduledef ) || '' ).trim();\n        this.validateExportId( this.exportId );\n        const realdom = this.window.webqit.realdom;\n        // ----------\n        this.realtimeA = realdom.realtime( this.host.content ).children( record => {\n            this.export( record.entrants, true );\n            this.export( record.exits, false );\n        }, { live: true, timing: 'sync' } );\n        // ----------\n        this.realtimeB = realdom.realtime( this.host ).attr( [ 'src', 'loading' ], ( ...args ) => this.evaluateLoading( ...args ), {\n            live: true,\n            atomic: true,\n            timing: 'sync',\n            lifecycleSignals: true\n        } );\n        // ----------\n        this.realtimeC = this.evalInheritance();\n        // ----------\n    }\n\n    /**\n     * Validates export ID.\n     * \n     * @param String     exportId\n     *\n     * @returns Void\n     */\n    validateExportId( exportId ) {\n        if ( [ '@', '/', '*', '#' ].some( token => exportId.includes( token ) ) ) {\n            throw new Error( `The export ID \"${ exportId }\" contains an invalid character.` );\n        }\n    }\n\n    /**\n     * Maps module contents as exports.\n     * \n     * @param Array     entries\n     * @param Bool      isConnected\n     *\n     * @returns Void\n     */\n    export( entries, isConnected ) {\n        let dirty, allFragments = Observer.get( this.modules, '#' ) || [];\n        Observer.batch( this.modules, () => {\n            entries.forEach( entry => {\n                if ( entry.nodeType !== 1 ) return;\n                const isTemplate = entry.matches( this.config.templateSelector );\n                const exportId = ( entry.getAttribute( isTemplate ? this.config.template.attr.moduledef : this.config.template.attr.fragmentdef ) || '' ).trim();\n                if ( isConnected ) {\n                    if ( isTemplate && exportId ) { new _HTMLExportsManager( this.window, entry, this.config, this.host, this.level + 1 ); }\n                    else {\n                        allFragments.push( entry );\n                        dirty = true;\n                    }\n                    if ( exportId ) {\n                        this.validateExportId( exportId );\n                        Observer.set( this.modules, ( !isTemplate && '#' || '' ) + exportId, entry );\n                    }\n                } else {\n                    if ( isTemplate && exportId ) { _HTMLExportsManager.instance( this.window, entry ).dispose(); }\n                    else {\n                        allFragments = allFragments.filter( x => x !== entry );\n                        dirty = true;\n                    }\n                    if ( exportId ) Observer.deleteProperty( this.modules, ( !isTemplate && '#' || '' ) + exportId );\n                }\n            } );\n            if ( dirty ) Observer.set( this.modules, '#', allFragments );\n        } );\n    }\n\n    /**\n     * Evaluates remote content loading.\n     *\n     * @param AbortSignal   signal\n     * \n     * @returns Void\n     */\n    evaluateLoading( [ record1, record2 ], { signal } ) {\n        const src = ( record1.value || '' ).trim();\n        if ( !src ) return;\n        let $loadingPromise, loadingPromise = promise => {\n            if ( !promise ) return $loadingPromise; // Get\n            $loadingPromise = promise.then( () => interception.remove() ); // Set\n        };\n        const loading = ( record2.value || '' ).trim();\n        const interception = Observer.intercept( this.modules, 'get', async ( descriptor, recieved, next ) => {\n            if ( loading === 'lazy' ) { loadingPromise( this.load( src, true ) ); }\n            await loadingPromise();\n            return next();\n        }, { signal } );\n        if ( loading !== 'lazy' ) { loadingPromise( this.load( src ) ); }\n    }\n    \n    /**\n     * Fetches a module's \"src\".\n     *\n     * @param String src\n     *\n     * @return Promise\n     */\n    load( src ) {\n        if ( this.host.content.children.length ) return Promise.resolve();\n        // Ongoing request?\n        if ( this.fetchInFlight?.src === src ) return this.fetchInFlight.request;\n        this.fetchInFlight?.controller.abort();\n        // The promise\n        const controller = new AbortController();\n        const fire = ( type, detail ) => this.host.dispatchEvent( new this.window.CustomEvent( type, { detail } ) );\n        const request = this.window.fetch( src, { signal: controller.signal, element: this.host } ).then( response => {\n            return response.ok ? response.text() : Promise.reject( response.statusText );\n        }).then( content => {\n            this.host.innerHTML = content.trim(); // IMPORTANT: .trim()\n            fire( 'load' );\n            return this.host;\n        } ).catch( e => {\n            console.error( `Error fetching the bundle at \"${ src }\": ${ e.message }` );\n            this.fetchInFlight = null;\n            fire( 'loaderror' );\n            return this.host;\n        } );\n        this.fetchInFlight = { src, request, controller };\n        return request;\n    }\n\n    /**\n     * Evaluates module inheritance.\n     *\n     * @returns Void|AbortController\n     */\n    evalInheritance( ) {\n        if ( !this.parent ) return [];\n        let extendedId = ( this.host.getAttribute( this.config.template.attr.extends ) || '' ).trim();\n        let inheritedIds = ( this.host.getAttribute( this.config.template.attr.inherits ) || '' ).trim();\n        const handleInherited = records => {\n            records.forEach( record => {\n                if ( Observer.get( this.modules, record.key ) !== record.oldValue ) return;\n                if ( [ 'get'/*initial get*/, 'set', 'defineProperty' ].includes( record.type ) ) {\n                    Observer[ record.type.replace( 'get', 'set' ) ]( this.modules, record.key, record.value );\n                } else if ( record.type === 'deleteProperty' ) {\n                    Observer.deleteProperty( this.modules, record.key );\n                }\n            } );\n        };\n        const realtimes = [];\n        const parentExportsObj = getModulesObject( this.parent );\n        if ( extendedId ) {\n            realtimes.push( Observer.deep( parentExportsObj, [ extendedId, this.config.template.api.modules, Infinity ], Observer.get, handleInherited, { live: true } ) );\n        }\n        if ( ( inheritedIds = inheritedIds.split( ' ' ).map( id => id.trim() ).filter( x => x ) ).length ) {\n            realtimes.push( Observer.get( parentExportsObj, inheritedIds, handleInherited, { live: true } ) );\n        }\n        return realtimes;\n    }\n    \n    /**\n     * Disposes the instance and its processes.\n     *\n     * @returns Void\n     */\n    dispose() {\n        this.realtimeA.disconnect();\n        this.realtimeB.disconnect();\n        this.realtimeC.forEach( r => r.abort() );\n        Object.entries( this.modules ).forEach( ( [ key, entry ] ) => {\n            if ( key.startsWith( '#' ) ) return;\n            _HTMLExportsManager.instance( this.window, entry ).dispose();\n        } );\n    }\n}\n", "\n/**\n * @imports\n */\nimport Observer from '@webqit/observer';\nimport { HTMLContext, HTMLContextProvider } from '../context-api/index.js';\nimport { getModulesObject } from './index.js';\nimport { _ } from '../util.js';\n\nexport default class _HTMLImportsProvider extends HTMLContextProvider {\n\n    /**\n     * @createId\n     */\n    static createId( host, fields = {} ) {\n        if ( !( 'type' in fields ) ) fields = { type: 'htmlimports', ...fields };\n        return super.createId( host, fields );\n    }\n\n    /**\n     * @createRequest\n     */\n    static createRequest( fields = {} ) {\n        const request = { type: 'htmlimports', ...fields };\n        if ( !request.contextName && request.detail?.startsWith( '/' ) ) { request.contextName = 'root'; }\n        else if ( request.detail?.startsWith( '@' ) ) {\n            const [ contextName, ...detail ] = request.detail.slice( 1 ).split( /(?<=\\w)(?=\\/|#)/ ).map( s => s.trim() );\n            request.contextName = contextName;\n            request.detail = detail.join( '' );\n        }\n        return request;\n    }\n     \n    /**\n     * @localModules\n     */\n    get localModules() {\n        return getModulesObject( this.host );\n    }\n\n    /**\n     * @handle()\n     */\n    handle( event ) {\n        // Any existing event.request.controller? Abort!\n        event.request.controller?.abort();\n\n        // Parse and translate detail\n        if ( ( event.request.detail || '' ).trim() === '/' ) return event.respondWith( this.localModules );\n        const $config = this.constructor.config;\n        let path = ( event.request.detail || '' ).split( /\\/|(?<=\\w)(?=#)/g ).map( x => x.trim() ).filter( x => x );\n        if ( path.length ) { path = path.join( `/${ $config.template.api.modules }/` )?.split( '/' ) || []; }\n        // No detail?\n        if ( !path.length ) return event.respondWith();\n \n        // We'll now fulfill request\n        const options = { live: event.request.live, descripted: true };\n        // Find a way to resolve request against two sources\n        event.request.controller = Observer.deep( this.localModules, path, Observer.get, ( result, { signal } = {} ) => {\n            const _result = Array.isArray( result ) ? result : result.value;\n            const _isValidResult = Array.isArray( result ) ? result.length : result.value;\n            if ( !_isValidResult && this.host.isConnected === false ) return; // Subtree is being disposed\n            if ( _isValidResult || !this.contextModules ) return event.respondWith( _result );\n            // This superModules binding is automatically aborted by the injected control.signal; see below\n            return Observer.deep( this.contextModules, path, Observer.get, result => {\n                return event.respondWith( Array.isArray( result ) ? result : result.value );\n            }, { signal, ...options } );\n        }, options );\n    }\n\n    /**\n     * @startRealtime()\n     */\n    realtimeSources( host ) {\n        this.host = host;\n        // ----------------\n        const update = () => {\n            for ( const subscriptionEvent of this.subscriptions ) {\n                this.handle( subscriptionEvent );\n            }\n        };\n        // ----------------\n        const $config = this.constructor.config;\n        if ( !this.host.matches || !$config.context.attr.importscontext ) return;\n        // Any existing this.refdSourceController? Abort!\n        this.refdSourceController?.disconnect();\n        const realdom = this.host.ownerDocument.defaultView.webqit.realdom;\n        this.refdSourceController = realdom.realtime( this.host ).attr( $config.context.attr.importscontext, ( record, { signal } ) => {\n            // No importscontext attr set. But we're still watching\n            if ( !record.value ) {\n                this.contextModules = undefined;\n                return update();\n            }\n            // This superModules contextrequest is automatically aborted by the injected signal below\n            const request = this.constructor.createRequest( { detail: record.value.trim(), live: true, signal, superContextOnly: true } );\n            HTMLContext.instance( this.host ).request( request, response => {\n                this.contextModules = !( response && Object.getPrototypeOf( response ) ) ? response : getModulesObject( response );\n                update();\n            } );\n        }, { live: true, timing: 'sync', lifecycleSignals: true } );\n    }\n\n    /**\n     * @initialize()\n     */\n    initialize( host ) {\n        // If host has importscontext attr, compute that\n        this.realtimeSources( host );\n        // Now, listen for contextrequest and contextclaim events\n        // And process own claim\n        return super.initialize( host );\n    }\n    \n    /**\n     * @dispose()\n     */\n    dispose( host ) {\n        // Stop listening for sources\n        this.refdSourceController?.disconnect();\n        // Now, stop listening for contextrequest and contextclaim events\n        // And relinquish own subscribers to owner context\n        return super.dispose( host );\n    }\n}\n", "\n/**\n * @imports\n */\nimport { HTMLContext } from '../context-api/index.js';\nimport _HTMLImportsContext from './_HTMLImportsProvider.js';\nimport { _ } from '../util.js';\n\n/**\n * Creates the HTMLImportElement class.\n * \n * @param Object config \n * \n * @return HTMLImportElement\n */\nexport default function( config ) {\n    const window = this, { realdom } = window.webqit;\n    const BaseElement = config.import.tagName.includes( '-' ) ? window.HTMLElement : class {};\n    return class HTMLImportElement extends BaseElement {\n        \n        /**\n         * @instance\n         * \n         * @param HTMLElement node\n         * \n         * @returns \n         */\n        static instance( node ) {\n            if ( config.import.tagName.includes( '-' ) && ( node instanceof this ) )  return node;\n            return _( node ).get( 'import::instance' ) || new this( node );;\n        }\n\n        /**\n         * @constructor\n         */\n        constructor( ...args ) {\n            super();\n            // --------\n            const el = args[ 0 ] || this;\n            _( el ).set( 'import::instance', this );\n            Object.defineProperty( this, 'el', { get: () => el, configurable: false } );\n\n            const priv = {};\n            Object.defineProperty( this, '#', { get: () => priv, configurable: false } );\n            priv.slottedElements = new Set;\n\n            priv.setAnchorNode = anchorNode => {\n                priv.anchorNode = anchorNode;\n                _( anchorNode ).set( 'anchoredNode@imports', this.el );\n            };\n\n            priv.importRequest = ( callback, signal = null ) => {\n                const request = _HTMLImportsContext.createRequest( { detail: priv.moduleRef && !priv.moduleRef.includes( '#' ) ? priv.moduleRef + '#' : priv.moduleRef, live: signal && true, signal } );\n                HTMLContext.instance( this.el.isConnected ? this.el.parentNode : priv.anchorNode.parentNode ).request( request, response => {\n                    callback( ( response instanceof window.HTMLTemplateElement ? [ ...response.content.children ] : (\n                        Array.isArray( response ) ? response : response && [ response ]\n                    ) ) || [] );\n                } );\n            };\n\n            priv.hydrate = ( anchorNode, slottedElements ) => {\n                // ----------------\n                priv.moduleRef = ( this.el.getAttribute( config.import.attr.moduleref ) || '' ).trim();\n                priv.setAnchorNode( anchorNode );\n                priv.autoRestore( () => {\n                    slottedElements.forEach( slottedElement => {\n                        priv.slottedElements.add( slottedElement );\n                        _( slottedElement ).set( 'slot@imports', this.el );\n                    } );\n                } );\n                // ----------------\n                priv.hydrationImportRequest = new AbortController;\n                priv.importRequest( fragments => {\n                    if ( priv.originalsRemapped ) { return this.fill( fragments ); }\n                    const identifiersMap = fragments.map( fragment => ( { el: fragment, fragmentDef: fragment.getAttribute( config.template.attr.fragmentdef ) || '', tagName: fragment.tagName, } ) );\n                    slottedElements.forEach( slottedElement => {\n                        const tagName = slottedElement.tagName, fragmentDef = slottedElement.getAttribute( config.template.attr.fragmentdef ) || '';\n                        const originalsMatch = identifiersMap.filter( fragmentIdentifiers => tagName === fragmentIdentifiers.tagName && fragmentDef === fragmentIdentifiers.fragmentDef );\n                        if ( originalsMatch.length !== 1 ) return;\n                        _( slottedElement ).set( 'original@imports', originalsMatch[ 0 ].el );\n                    } );\n                    priv.originalsRemapped = true;\n                }, priv.hydrationImportRequest.signal );\n            };\n\n            priv.autoRestore = ( callback = null ) => {\n                priv.autoRestoreRealtime?.disconnect();\n                if ( callback ) callback();\n                if ( !priv.slottedElements.size ) {\n                    priv.anchorNode.replaceWith( this.el );\n                    return;\n                }\n                const autoRestoreRealtime = realdom.realtime( window.document ).observe( [ ...priv.slottedElements ], record => {\n                    record.exits.forEach( outgoingNode => {\n                        _( outgoingNode ).delete( 'slot@imports' );\n                        priv.slottedElements.delete( outgoingNode );\n                    } );\n                    if ( !priv.slottedElements.size ) {\n                        autoRestoreRealtime.disconnect();\n                        // At this point, ignore if this is a removal involving the whole parent node\n                        if ( !record.target.isConnected ) return;\n                        priv.anchorNode.replaceWith( this.el );\n                    }\n                }, { subtree: true, timing: 'sync', generation: 'exits' } );\n                priv.autoRestoreRealtime = autoRestoreRealtime;\n            };\n\n            priv.connectedCallback = () => {\n                // In case this is DOM node relocation or induced reinsertion into the DOM\n                if ( priv.slottedElements.size ) throw new Error( `Illegal reinsertion into the DOM; import slot is not empty!` );\n                // Totally initialize this instance?\n                if ( !priv.anchorNode ) { priv.setAnchorNode( this.createAnchorNode() ); }\n                if ( priv.moduleRefRealtime ) return;\n                priv.moduleRefRealtime = realdom.realtime( this.el ).attr( config.import.attr.moduleref, ( record, { signal } ) => {\n                    priv.moduleRef = record.value;\n                    // Below, we ignore first restore from hydration\n                    priv.importRequest( fragments => !priv.hydrationImportRequest && this.fill( fragments ), signal );\n                }, { live: true, timing: 'sync', lifecycleSignals: true } );\n                // Must come after\n                priv.hydrationImportRequest?.abort();\n                priv.hydrationImportRequest = null;\n            };\n\n            priv.disconnectedCallback = () => {\n                priv.hydrationImportRequest?.abort();\n                priv.hydrationImportRequest = null;\n                if ( priv.anchorNode.isConnected ) return;\n                priv.moduleRefRealtime?.disconnect();\n                priv.moduleRefRealtime = null;\n            };\n        }\n\n        /**\n         * Creates the slot's anchor node.\n         *\n         * @return Element\n         */\n        createAnchorNode() {\n            if ( !config.isomorphic ) { return window.document.createTextNode( '' ) }\n            return window.document.createComment( this.el.outerHTML );\n        }\n\n        /**\n         * Fills the slot with slottableElements\n         *\n         * @param Iterable  slottableElements\n         *\n         * @return void\n         */\n        fill( slottableElements ) {\n            if ( Array.isArray( slottableElements ) ) { slottableElements = new Set( slottableElements ) }\n            this[ '#' ].autoRestore( () => {              \n                this[ '#' ].slottedElements.forEach( slottedElement => {\n                    const slottedElementOriginal = _( slottedElement ).get( 'original@imports' );\n                    // If still available in source, simply leave unchanged\n                    // otherwise remove it from slot... to reflect this change\n                    if ( slottableElements.has( slottedElementOriginal ) ) {\n                        slottableElements.delete( slottedElementOriginal );\n                    } else {\n                        this[ '#' ].slottedElements.delete( slottedElement );\n                        // This removal will not be caught\n                        slottedElement.remove();\n                    }\n                } );\n                // Make sure anchor node is what's in place...\n                // not the import element itslef - but all only when we have slottableElements.size\n                if ( this.el.isConnected && slottableElements.size ) {\n                    this.el.replaceWith( this[ '#' ].anchorNode );\n                }\n                // Insert slottables now\n                slottableElements.forEach( slottableElement => {\n                    // Clone each slottable element and give it a reference to its original\n                    const slottableElementClone = slottableElement.cloneNode( true );\n                    // The folllowing references must be set before adding to DODM\n                    if ( !slottableElementClone.hasAttribute( config.template.attr.fragmentdef ) ) {\n                        slottableElementClone.toggleAttribute( config.template.attr.fragmentdef, true );\n                    }\n                    _( slottableElementClone ).set( 'original@imports', slottableElement );\n                    _( slottableElementClone ).set( 'slot@imports', this.el );\n                    this[ '#' ].slottedElements.add( slottableElementClone );\n                    this[ '#' ].anchorNode.before( slottableElementClone );\n                } );\n            } );\n        }\n\n        /**\n         * Empty slot.\n         *\n         * @return void\n         */\n        empty() { this[ '#' ].slottedElements.forEach( slottedElement => slottedElement.remove() ); }\n\n        /**\n         * Returns the slot's anchorNode.\n         *\n         * @return array\n         */\n        get anchorNode() { return this[ '#' ].anchorNode; }\n\n        /**\n         * Returns the slot's module reference, if any.\n         *\n         * @return string\n         */\n        get moduleRef() { return this[ '#' ].moduleRef; }\n\n        /**\n         * Returns the slot's slotted elements.\n         *\n         * @return array\n         */\n        get slottedElements() { return this[ '#' ].slottedElements; }\n    }\n}", "\n/**\n * @imports\n */\nimport Observer from '@webqit/observer';\nimport { HTMLContext } from '../context-api/index.js';\nimport _HTMLExportsManager from './_HTMLExportsManager.js';\nimport _HTMLImportElement from './_HTMLImportElement.js';\nimport _HTMLImportsProvider from './_HTMLImportsProvider.js';\nimport { _, _init } from '../util.js';\n\n/**\n * Initializes HTML Modules.\n * \n * @param $config  Object\n *\n * @return Void\n */\nexport default function init( $config = {} ) {\n    const { config, realdom, window } = _init.call( this, 'html-imports', $config, {\n        template: { attr: { moduledef: 'def', fragmentdef: 'def', extends: 'extends', inherits: 'inherits' }, api: { modules: 'modules', moduledef: 'def' }, },\n        context: { attr: { importscontext: 'importscontext', contextname: 'contextname' }, api: { import: 'import' }, },\n        import: { tagName: 'import', attr: { moduleref: 'ref' }, },\n        staticsensitivity: true,\n        isomorphic: true,\n    } );\n    config.templateSelector = `template[${ window.CSS.escape( config.template.attr.moduledef ) }]`;\n    config.ownerContextSelector = [ config.context.attr.contextname, config.context.attr.importscontext ].map( a => `[${ window.CSS.escape( a ) }]` ).join( ',' );\n    config.slottedElementsSelector = `[${ window.CSS.escape( config.template.attr.fragmentdef ) }]`;\n    window.webqit.HTMLImportElement = _HTMLImportElement.call( window, config );\n    window.webqit.HTMLImportsProvider = class extends _HTMLImportsProvider {\n        static get config() { return config; }\n    };\n    window.webqit.Observer = Observer;\n    exposeModulesObjects.call( window, config );\n    realdom.ready( () => hydration.call( window, config ) );\n    realtime.call( window, config );\n}\n\nexport { Observer }\n\n/**\n * Returns the \"exports\" object associated with the given node.\n *\n * @param Element       node\n * @param Bool          autoCreate\n *\n * @return Object\n */\nexport function getModulesObject( node, autoCreate = true ) {\n\tif ( !_( node ).has( 'modules' ) && autoCreate ) {\n\t\tconst modulesObj = Object.create( null );\n\t\t_( node ).set( 'modules', modulesObj );\n\t}\n\treturn _( node ).get( 'modules' );\n}\n\n/**\n * Exposes HTML Modules with native APIs.\n *\n * @param Object        config\n *\n * @return Void\n */\nfunction exposeModulesObjects( config ) {\n    const window = this;\n    // Assertions\n    if ( config.template.api.modules in window.HTMLTemplateElement.prototype ) { throw new Error( `The \"HTMLTemplateElement\" class already has a \"${ config.template.api.modules }\" property!` ); }\n    if ( config.template.api.moduledef in window.HTMLTemplateElement.prototype ) { throw new Error( `The \"HTMLTemplateElement\" class already has a \"${ config.template.api.moduledef }\" property!` ); }\n    if ( config.context.api.import in window.document ) { throw new Error( `document already has a \"${ config.context.api.import }\" property!` ); }\n    if ( config.context.api.import in window.HTMLElement.prototype ) { throw new Error( `The \"HTMLElement\" class already has a \"${ config.context.api.import }\" property!` ); }\n    // Definitions\n    Object.defineProperty( window.HTMLTemplateElement.prototype, config.template.api.modules, { get: function() {\n        return getModulesObject( this );\n    } } );\n    Object.defineProperty( window.HTMLTemplateElement.prototype, config.template.api.moduledef, { get: function() {\n        return this.getAttribute( config.template.attr.moduledef );\n    } } );\n    Object.defineProperty( window.document, config.context.api.import, { value: function( ref, callback, options = {} ) {\n        return importRequest( window.document, ref, callback, options );\n    } } );\n    Object.defineProperty( window.HTMLElement.prototype, config.context.api.import, { value: function( ref, callback, options = {} ) {\n        return importRequest( this, ref, callback, options );\n    } } );\n    function importRequest( context, ref, callback, options ) {\n        const request = _HTMLImportsProvider.createRequest( { detail: ref, ...options } );\n        return HTMLContext.instance( context ).request( request, callback );\n    }\n}\n\n/**\n * Performs realtime capture of elements and their attributes\n * and their module query results; then resolves the respective import elements.\n *\n * @param Object config\n *\n * @return Void\n */\nfunction realtime( config ) {\n    const window = this, { realdom, HTMLImportElement, HTMLImportsProvider } = window.webqit;\n    // ------------\n    // MODULES\n    // ------------\n    const attachImportsContext = host => {\n        const contextId = HTMLImportsProvider.createId( host );\n        HTMLImportsProvider.attachTo( host, contextId );\n    };\n    const detachImportsContext = ( host, force ) => {\n        const contextId = HTMLImportsProvider.createId( host );\n        HTMLImportsProvider.detachFrom( host, contextId, cx => {\n            return force || host.matches && !host.matches( config.ownerContextSelector ) && !Object.keys( cx.localModules ).length;\n        } );\n    };\n    // ------------\n    realdom.realtime( window.document ).subtree/*instead of observe(); reason: jsdom timing*/( [ config.templateSelector, config.ownerContextSelector ], record => {\n        record.entrants.forEach( entry => {\n            if ( entry.matches( config.templateSelector ) ) {\n                Object.defineProperty( entry, 'scoped', { value: entry.hasAttribute( 'scoped' ) } ); \n                const moduleExport = new _HTMLExportsManager( window, entry, config );\n                moduleExport.ownerContext = entry.scoped ? record.target : window.document;\n                const ownerContextModulesObj = getModulesObject( moduleExport.ownerContext );\n                if ( moduleExport.exportId ) { Observer.set( ownerContextModulesObj, moduleExport.exportId, entry ); }\n                // The ownerContext's modulesObj - ownerContextModulesObj - has to be populated\n                // Before attaching a context instance to it, to give the just created context something to use for\n                // fullfiling reclaimed requests.\n                attachImportsContext( moduleExport.ownerContext );\n            } else {\n                attachImportsContext( entry );\n            }\n        } );\n        record.exits.forEach( entry => {\n            if ( entry.matches( config.templateSelector ) ) {\n                const moduleExport = _HTMLExportsManager.instance( window, entry, config );\n                const ownerContextModulesObj = getModulesObject( moduleExport.ownerContext );\n                if ( moduleExport.exportId ) { Observer.deleteProperty( ownerContextModulesObj, moduleExport.exportId ); }\n                detachImportsContext( moduleExport.ownerContext );\n            } else {\n                detachImportsContext( entry, true );\n            }\n        } );\n    }, { live: true, timing: 'sync', staticSensitivity: config.staticsensitivity } );\n    // ------------\n    // IMPORTS\n    // ------------\n    realdom.realtime( window.document ).subtree/*instead of observe(); reason: jsdom timing*/( config.import.tagName, record => {\n        record.entrants.forEach( node => handleRealtime( node, true, record ) );\n        record.exits.forEach( node => handleRealtime( node, false, record ) );\n    }, { live: true, timing: 'sync' } );\n    function handleRealtime( entry, connectedState, record ) {\n        const elInstance = HTMLImportElement.instance( entry );\n        if ( connectedState ) { elInstance[ '#' ].connectedCallback(); }\n        else { elInstance[ '#' ].disconnectedCallback(); }\n    }\n}\n\n/**\n * Performs hydration for server-slotted elements.\n *\n * @param Object config\n *\n * @return Void\n */\nfunction hydration( config ) {\n    const window = this, { HTMLImportElement } = window.webqit;\n    function scan( context ) {\n        const slottedElements = new Set;\n        context.childNodes.forEach( node => {\n            if ( node.nodeType === 1/** ELEMENT_NODE */ ) {\n                if ( !node.matches( config.slottedElementsSelector ) ) return;\n                if ( _( node ).get( 'slot@imports' ) ) return;\n                slottedElements.add( node );\n            } else if ( node.nodeType === 8/** COMMENT_NODE */ ) {\n                const nodeValue = node.nodeValue.trim();\n                if ( !nodeValue.startsWith( '<' + config.import.tagName ) ) return;\n                if ( !nodeValue.endsWith( '</' + config.import.tagName + '>' ) ) return;\n                const reviver = window.document.createElement( 'div' );\n                reviver.innerHTML = nodeValue;\n                const importEl = reviver.firstChild;\n                if ( !importEl.matches( config.import.tagName ) ) return;\n                HTMLImportElement.instance( importEl )[ '#' ].hydrate(\n                    node/* the comment node */, slottedElements\n                );\n                slottedElements.clear();\n            }\n        } );\n    }\n    Array.from( window.document.querySelectorAll( config.slottedElementsSelector ) ).forEach( slottedElement => {\n        // hydration() might be running AFTER certain <slots> have resolved\n        // and slottedElement might be a just-resolved node\n        if ( _( slottedElement ).get( 'slot@imports' ) ) return;\n        if ( _( slottedElement.parentNode ).get( 'alreadyscanned@imports' ) ) return;\n        scan( slottedElement.parentNode );\n        // Scanning is once for every parent\n        _( slottedElement.parentNode ).set( 'alreadyscanned@imports', true );\n    } );\n}\n", "\n/**\n * @imports\n */\nimport init from './index.js';\n\n/**\n * @init\n */\ninit.call( window );"],
  "mappings": "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",
  "names": []
}
