{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@webqit/util/js/isTypeObject.js","webpack:///./node_modules/@webqit/util/js/isArray.js","webpack:///./node_modules/@webqit/util/js/isObject.js","webpack:///./node_modules/@webqit/util/arr/from.js","webpack:///./node_modules/@webqit/util/js/isTypeArray.js","webpack:///./node_modules/@webqit/util/arr/flatten.js","webpack:///./node_modules/@webqit/util/js/isPlainObject.js","webpack:///./node_modules/@webqit/util/js/isBoolean.js","webpack:///./node_modules/@webqit/util/obj/even.js","webpack:///./node_modules/@webqit/util/obj/compareCallback.js","webpack:///./node_modules/@webqit/util/obj/copyPlain.js","webpack:///./node_modules/@webqit/util/str/Lexer.js","webpack:///./node_modules/@webqit/util/str/wrapped.js","webpack:///./node_modules/@webqit/util/str/unwrap.js","webpack:///./node_modules/@webqit/util/str/beforeLast.js","webpack:///./src/util.js","webpack:///./node_modules/@webqit/util/js/isFunction.js","webpack:///./node_modules/@webqit/util/js/isNumeric.js","webpack:///./node_modules/@webqit/util/js/isString.js","webpack:///./node_modules/@webqit/util/js/isUndefined.js","webpack:///./node_modules/@webqit/util/obj/each.js","webpack:///./node_modules/@webqit/util/obj/merge.js","webpack:///./node_modules/@webqit/util/arr/last.js","webpack:///./node_modules/@webqit/util/js/isNumber.js","webpack:///./node_modules/@webqit/util/arr/first.js","webpack:///./node_modules/@webqit/browser-pie/src/index.js","webpack:///./node_modules/@webqit/browser-pie/src/vendor.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/Reflow.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/ready.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/Mutations.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/polyfills.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/query.js","webpack:///./node_modules/@webqit/util/obj/get.js","webpack:///./node_modules/@webqit/util/obj/set.js","webpack:///./node_modules/@webqit/util/obj/del.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/meta.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/index.js","webpack:///./node_modules/@webqit/util/js/isTypeFunction.js","webpack:///./node_modules/@webqit/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@webqit/util/obj/getPrototypeChain.js","webpack:///./node_modules/@webqit/util/arr/pushUnique.js","webpack:///./node_modules/@webqit/util/obj/mergeCallback.js","webpack:///./node_modules/@webqit/util/js/isNull.js","webpack:///./node_modules/@webqit/util/str/after.js","webpack:///./node_modules/@webqit/util/str/before.js","webpack:///./node_modules/@webqit/util/arr/remove.js","webpack:///./node_modules/@webqit/util/arr/any.js","webpack:///./node_modules/@webqit/util/arr/unique.js","webpack:///./node_modules/@webqit/util/js/isEmpty.js","webpack:///./node_modules/@webqit/util/arr/difference.js","webpack:///./src/html-imports/index.js","webpack:///./src/html-imports/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","castObject","length","slice","values","_flatten","arr","depth","withObjects","reduce","acc","concat","obj","getPrototypeOf","_even","obj1","obj2","assertion","obj1Keys","keys","obj2Keys","result","contn","forEach","v1","testPass","k","v2","netComparison","push","contrast","returnOnFirstFalse","isNaN","filter","indexOf","str","delims","options","Error","copyResult","nesting","maxDepth","comments","tokens","matches","matchesi","$cache","cache","cached","lex","this","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","limit","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","nextIndex","quote","block","startsWith","Math","max","testList","test","ret","useRegex","match","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","String","splitSeries2","regParse","subject","search","openingTag","closingTag","config","defaults","overrides","WebQit","dom","OOHTML","meta","DOM","footprint","host","_footprint","webqitFootprint","webqitFootprintSymbol","for","oohtml","scopeQuery","contexts","query","collectionCallback","advancementCallback","path","split","map","trim","execScopeQuery","parseScopeExpr","expr","shift","_modifiers","_modifier","parentheses","evalAssertExpr","callback","_result","_expr","operator","theEnd","evalModuleExpr","lookAhead","_list","_module","modifiers","list","context","collection","itemArray","endsWith","appliedModifiers","reapplyAppliedModifiers","modifier","nextLevel","_itemArray","filterHavingsResult","_filterHavings","level","isStopSegmentIfCount","segment","submodules","toString","arguments","undefined","returnValue","parseFloat","objs","reverse","amount","Number","count","itm","firsts","window","_window","_vendor","_prefix","getName","InstallTrigger","HTMLElement","safari","pushNotification","isChrome","chrome","webstore","isEdgeChromium","navigator","userAgent","isOpera","opr","addons","opera","isIE","document","documentMode","isEdge","StyleMedia","CSS","getPrefix","styles","getComputedStyle","documentElement","prefix","Olink","api","css","Reflow","asyncDOM","async","readCallbacks","writeCallbacks","_run","requestAnimationFrame","withPromise","Promise","resolve","reject","read","write","prevTransaction","onread","readReturn","callWrite","onwrite","writeReturn","repeatTransaction","cycle","then","isDOMReady","readyState","domReadyCallbacks","addEventListener","splice","cb","els","params","on","onPresenceChange","el","presence","isTransient","addedState","removedState","selector","MutationObserver","onAdded","querySelectorAll","parentNode","onRemoved","sourceArray","$$searchCache","Map","_matches","has","nodeListArray","node","observeIndirectMutation","includes","set","Set","fire","state","maintainCallState","add","delete","_observe","removed__addedNodes","added__removedNodes","addedNodes","removedNodes","ignoreTransients","observer","attributes","attributeOldValue","attributeFilter","observe","subtree","childList","MutationObserversCache","callbacks","mutations","size","mut","isConnected","_observer","escape","replace","CSS_escape","Node","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","Node_isConnected","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","item","Element_matches","input","all","temp","createElement","innerHTML","children","firstChild","querySelector","queryAll","matchedItems","method","e","reciever","_ctxt","ctxt","_key","trap","exists","_set","branch","buildTree","success","lastKey","pop","_obj","deleteProperty","del","reduceTree","readWrite","metaInstance","head","setAttribute","append","vars","getAttribute","v","_metaVars","directive","directiveSplit","parseInt","prop","asDefaults","props","_prop","_path","flatten","base","reflow","ready","keysAll","until","prototypalChain","items","getOwnPropertyNames","mergeCallback","deepProps","isReplace","withSymbols","valAtObj1","valAtObj2","getOwnPropertyDescriptor","pos","afterLast","lastIndexOf","beforeLast","prevTest","index","self","arr2","val1","val2","init","_config","onDomReady","importInertContexts","_meta","element","import","attr","importid","templatespec","_defaultNoInherits","modulerefSelector","exportgroupSelector","Import","importEl","importID","importModifiers","anchorNode","slottedElements","compositionBlock","_bindSlotted","_connectToCompositionBlock","createComment","outerHTML","createTextNode","hasAttribute","closest","imports","_export","importReference","slottedObserver","removed","disconnect","remd","replaceWith","inertContext","templateSource","console","warn","moduleref","importId","superA","superB","super","a","templates","_modules","isRewinding","exportsAggr","_exports","getExports","originalSlottedElements","fill","empty","cloneNode","sourceEl","noinherit","prioritize","defaultListAttrs","_defaultListAttrs","type","b_attr","a_attr","jointList","_defaultKeyValAttrs","jointDefs","mergeAttributes","before","silently","slottedElement","remove","onPresent","connectedCallback","resolveSlots","exportName","shouldResolve","importName","importElInstance","log","onAttrChange","mr","attributeName","oldValue","detail","addedExports","removedExports","exportGroup","importsCan","childNodes","nodeValue","nodeType","reviver","hydrate"],"mappings":"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","file":"html-imports.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 74);\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\n/**\n * @imports\n */\nimport domInit from '@webqit/browser-pie/src/dom/index.js';\nimport _merge from '@webqit/util/obj/merge.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport _wrapped from '@webqit/util/str/wrapped.js';\nimport _unwrap from '@webqit/util/str/unwrap.js';\nimport _before from '@webqit/util/str/before.js';\nimport _after from '@webqit/util/str/after.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\n\n/**\n * A OOHTML's meta tag props reader.\n *  \n * @param Object defaults\n * \n * @return Object\n */\nexport function config(defaults, overrides = {}) {\n    const WebQit = domInit.call(this);\n    if (!WebQit.OOHTML.meta) {\n        WebQit.OOHTML.meta = WebQit.DOM.meta('oohtml', true/* readWrite */);\n    }\n    WebQit.OOHTML.meta.defaults(_merge(3, defaults, overrides));\n    return WebQit.OOHTML.meta;\n}\n\n/**\n * Returns an OOHTML footprint object embedded on a host.\n *\n * @param Object\thost\n *\n * @return Object\n */\nexport function footprint(host) {\n    var _footprint, webqitFootprint, webqitFootprintSymbol = Symbol.for('.webqit');\n    if (!(webqitFootprint = host[webqitFootprintSymbol])) {\n        webqitFootprint = {};\n        Object.defineProperty(host, webqitFootprintSymbol, {value: webqitFootprint, enumerable: false});\n    }\n    if (!(_footprint = webqitFootprint.oohtml)) {\n        _footprint = {};\n        webqitFootprint.oohtml = _footprint;\n    }\n    return _footprint;\n}\n\n/**\n * Runs a \"scope-query\" against a context.\n *\n * @param Array\t    contexts\n * @param String\tquery\n * @param Function\tcollectionCallback\n * @param Function\tadvancementCallback\n *\n * @return Array\n */\nexport function scopeQuery(contexts, query, collectionCallback, advancementCallback = null) {\n    var path = query.split('#')[0].split('/').map(n => n.trim()).filter(n => n);\n    return execScopeQuery(contexts, path, collectionCallback, advancementCallback);\n}\n\n/**\n * Parses a \"scope-query\" expression into an \"identifier\" plus \"modifiers\".\n *\n * @param String\texpr\n *\n * @return Array\n */\nexport function parseScopeExpr(expr) {\n    var split = Lexer.split(expr.trim(), [':']);\n    expr = split.shift();\n    var modifiers = split.reduce((_modifiers, _modifier) => {\n        var [ name, parentheses ] = Lexer.split(_modifier.trim(), []);\n        _modifiers[name] = _unwrap(parentheses, '(', ')');\n        return _modifiers;\n    }, {});\n    return [ expr, modifiers ];\n}\n\nconst evalAssertExpr = (expr, callback) => {\n    return Lexer.split(expr.trim(), ['|', '+'], { preserveDelims: true }).reduce((_result, _expr) => {\n        var operator;\n        if (_expr.startsWith('|') || _expr.startsWith('+')) {\n            operator = _expr.substr(0, 1);\n            _expr = _expr.substr(1).trim();\n        }\n        if (_result.theEnd || (operator === '|' && _result.length)) {\n            _result.theEnd = true;\n            return _result;\n        }\n        return _result.concat(callback(_expr.trim()));\n    }, []).filter(t => t);\n};\n\nconst evalModuleExpr = (contexts, expr, collectionCallback) => {\n    const lookAhead = contexts => contexts.reduce((_list, _module) => _list.concat(Object.values(collectionCallback(_module))), []);\n    return evalAssertExpr(expr, _expr => {\n        var [ _expr, modifiers ] = parseScopeExpr(_expr);\n         // ------------\n        return contexts.reduce((list, context) => {\n            var collection = collectionCallback(context);\n            if (_expr === '*') {\n                    _expr = '(' + Object.keys(collection).join('+') + ')';\n            }\n            var itemArray = _wrapped(_expr, '(', ')') ? evalModuleExpr([context], _unwrap(_expr, '(', ')'), collectionCallback) : _arrFrom(collection[_expr], false);\n            // ------------\n            var appliedModifiers = [], reapplyAppliedModifiers = expr => `${expr}${appliedModifiers.map(m => `:${m}(${modifiers[m]})`).join('')}`;\n            Object.keys(modifiers).forEach(modifier => {\n                if (modifier === 'deep' || modifier === 'deepest') {\n                    var nextLevel = [context];\n                    while ((modifier === 'deepest' || !itemArray.length) && (nextLevel = lookAhead(nextLevel)).length) {\n                        var _itemArray = evalModuleExpr(nextLevel, reapplyAppliedModifiers(_expr), collectionCallback);\n                        if (_itemArray.length) {\n                            itemArray = _itemArray;\n                        }\n                    }\n                } else {\n                    if (modifier === 'having' || modifier === 'not-having') {\n                        itemArray = itemArray.filter(module => {\n                            var filterHavingsResult = evalAssertExpr(modifiers[modifier], _filterHavings => collectionCallback(module, _filterHavings));\n                            return modifier === 'not-having' ? !filterHavingsResult.length : filterHavingsResult.length;\n                        });    \n                    }\n                    appliedModifiers.push(modifier);\n                }\n            });\n            return list.concat(itemArray);\n        }, []);\n    });\n};\n\nconst execScopeQuery = function(contexts, path, collectionCallback, advancementCallback = null, level = 0) {\n\n    if (!path.length) {\n        return [];\n    }\n\n    var segment = path.shift(), isStopSegmentIfCount;\n    if (segment.endsWith('.')) {\n        isStopSegmentIfCount = true;\n        segment = segment.substr(0, segment.length - 1).trim();\n    }\n    // -----------\n    var modules = evalModuleExpr(contexts, segment, collectionCallback);\n    // -----------\n    if (modules.length && isStopSegmentIfCount) {\n        return modules;\n    }\n    // -----------\n    if (path.length) {\n        var submodules = execScopeQuery(modules, path.slice(), collectionCallback, advancementCallback, level + 1);\n        if (submodules === -1) {\n            return advancementCallback(modules, level, true);\n        }\n        return submodules;\n    }\n\n    return advancementCallback ? advancementCallback(modules, level) : modules;\n};\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport {\r\n    getName as getVendorName,\r\n    getPrefix as getVendorPrefix\r\n} from './vendor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Centralized ENV initializer\r\n * for actual and virtual browser environments.\r\n * ---------------------------\r\n */\r\n\r\nexport default function() {\r\n    if (!(_isObject(this) && this.window) && (typeof window === 'undefined')) {\r\n        throw new Error('A window context is required.');\r\n    }\r\n    const _window = _isObject(this) && this.window ? this.window : window;\r\n    // Create global scope?\r\n    if (!_window.WebQit) {\r\n        _window.WebQit = {};\r\n    }\r\n    if (!_window.WebQit.window) {\r\n        // Is this params for global or sub scope?\r\n        let _vendor, _prefix;\r\n        Object.defineProperty(_window.WebQit, 'window', {get: () => _window});\r\n        Object.defineProperty(_window.WebQit, 'vendor', {value: {\r\n            getName: () => {\r\n                if (!_vendor) {\r\n                    _vendor = getVendorName(_window);\r\n                }\r\n                return _vendor;\r\n            },\r\n            getPrefix: () => {\r\n                if (!_prefix) {\r\n                    _prefix = getVendorPrefix(_window);\r\n                }\r\n                return _prefix;\r\n            }\r\n        }});\r\n    }\r\n    return _window.WebQit;\r\n }","\r\n/**\r\n * Detects vendor type from the given window object\r\n * \r\n * @param window    window\r\n *\r\n * @return string\r\n */\r\nexport function getName(window) {\r\n    // Firefox 1.0+\r\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n    if (isFirefox) {\r\n        return 'firefox';\r\n    }\r\n    // Safari 3.0+ \"[object HTMLElementConstructor]\" \r\n    var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof window.safari !== 'undefined' && window.safari.pushNotification));\r\n    if (isSafari) {\r\n        return 'safari';\r\n    }\r\n    // Chrome 1 - 79\r\n    var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\r\n    // Edge (based on chromium) detection\r\n    var isEdgeChromium = isChrome && (window.navigator.userAgent.indexOf(\"Edg\") != -1);\r\n    // Opera 8.0+\r\n    var isOpera = (!!window.opr && !!window.opr.addons) || !!window.opera || window.navigator.userAgent.indexOf(' OPR/') >= 0;\r\n\r\n    // Internet Explorer 6-11\r\n    var isIE = /*@cc_on!@*/false || !!window.document.documentMode;\r\n    // Edge 20+\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    // Blink engine detection\r\n    var isBlink = (isChrome || isOpera) && !!window.CSS;\r\n    return isEdge ? 'edge' : (\r\n        isIE ? 'ie' : (\r\n            isOpera ? 'opera' : (\r\n                isEdgeChromium ? 'ie-chromium' : (\r\n                    isChrome ? 'chrome' : 'unknown'\r\n                )\r\n            )\r\n        )\r\n    );\r\n};\r\n\r\n/**\r\n * Returns the vendor-specific property prefix.\r\n *\r\n * @return object\r\n */\r\nexport function getPrefix(window) {\r\n    var styles = window.getComputedStyle(window.document.documentElement, '');\r\n    var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.Olink === '' && ['', 'o'])[1];\r\n    var api = (('WebKit|Moz|Ms|O').match(new RegExp('(' + prefix + ')', 'i')) || [])[1];\r\n    return {\r\n        api,\r\n        prefix,\r\n        css: '-' + prefix + '-',\r\n    };\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Binds callbacks to requestAnimationFrame()\r\n * to create a central \"read/write\" phases for Ctxt access.\r\n * ---------------------------\r\n */\r\n\t\t\t\r\nexport default class Reflow {\r\n\r\n\t/**\r\n\t * Starts the loop.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tconstructor(window, asyncDOM = true) {\r\n\t\tthis.window = window;\r\n\t\tthis.async = asyncDOM;\r\n\t\tthis.readCallbacks = [];\r\n\t\tthis.writeCallbacks = [];\r\n\t\tthis._run();\r\n\t}\r\n\r\n\t_run() {\r\n\t\tthis.window.requestAnimationFrame(() => {\r\n\t\t\tthis.readCallbacks.forEach((callback, i) => {\r\n\t\t\t\tif (callback && !callback()) {\r\n\t\t\t\t\tthis.readCallbacks[i] = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.writeCallbacks.forEach((callback, i) => {\r\n\t\t\t\tif (callback && !callback()) {\r\n\t\t\t\t\tthis.writeCallbacks[i] = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._run();\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"read\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonread(callback, withPromise = false) {\r\n\t\tif (withPromise) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.async === false) {\r\n\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.readCallbacks.push(() => {\r\n\t\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.async === false) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.readCallbacks.push(callback);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"write\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonwrite(callback, withPromise = false) {\r\n\t\tif (withPromise) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.async === false) {\r\n\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeCallbacks.push(() => {\r\n\t\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.async === false) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.writeCallbacks.push(callback);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * A special construct for Ctxt manipulations that span\r\n\t * one or more read/write cycles.\r\n\t *\r\n\t * @param function \tread\r\n\t * @param function \twrite\r\n\t * @param mixed\t\tprevTransaction\r\n\t *\r\n\t * @return void|mixed\r\n\t */\r\n\tcycle(read, write, prevTransaction) {\r\n\t\tthis.onread(() => {\r\n\t\t\t// Record initial values\r\n\t\t\tvar readReturn = read(prevTransaction);\r\n\t\t\tif (readReturn) {\r\n\t\t\t\t// Call erite, the transation\r\n\t\t\t\tvar callWrite = (readReturn) => {\r\n\t\t\t\t\tthis.onwrite(() => {\r\n\t\t\t\t\t\tvar writeReturn = write(readReturn, prevTransaction);\r\n\t\t\t\t\t\tif (writeReturn) {\r\n\t\t\t\t\t\t\t// Repeat transaction\r\n\t\t\t\t\t\t\tvar repeatTransaction = (writeReturn) => {\r\n\t\t\t\t\t\t\t\tthis.cycle(read, write, writeReturn);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\t\t\t// If \"write\" returns a promise, we wait until it is resolved\r\n\t\t\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\t\t\tif (writeReturn instanceof Promise) {\r\n\t\t\t\t\t\t\t\twriteReturn.then(repeatTransaction);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trepeatTransaction();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\t// ---------------------------------------\r\n\t\t\t\t// If \"read\" returns a promise, we wait until it is resolved\r\n\t\t\t\t// ---------------------------------------\r\n\t\t\t\tif (readReturn instanceof Promise) {\r\n\t\t\t\t\treadReturn.then(callWrite);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallWrite();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n};","\n/**\n * @imports\n */\nimport init from '../index.js';\n\nexport default function(callback) {\n    const WebQit = init.call(this);\n    if (WebQit.DOM.isDOMReady || WebQit.window.document.readyState === 'complete') {\n        callback(WebQit.window);\n    } else {\n        if (!WebQit.window.domReadyCallbacks) {\n            WebQit.window.domReadyCallbacks = [];\n            WebQit.window.document.addEventListener('DOMContentLoaded', () => {\n                WebQit.DOM.isDOMReady = true;\n                WebQit.window.domReadyCallbacks.splice(0).forEach(cb => cb(WebQit.window));\n            }, false);\n        }\n        WebQit.window.domReadyCallbacks.push(callback);\n    }\n}\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport domReady from './ready.js';\r\n\r\n/**\r\n * ---------------------\r\n * Ctxt Mutations Utilities\r\n * ---------------------\r\n */\r\nexport default class Mutations {\r\n\r\n\t/**\r\n\t * Starts the loop.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tconstructor(window) {\r\n\t\tthis.window = window;\r\n\t}\r\n\r\n\t/**\r\n\t * ---------------------\r\n\t * PRESENCE\r\n\t * ---------------------\r\n\t */\r\n\t\t\r\n\t/**\r\n\t * Shortcut function to onPresenceChange().\r\n\t *\r\n\t * Observes when the given elements or selectors are added\r\n\t * to the given context.\r\n\t *\r\n\t * @param window\t\t\t\t\twindow\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonAdded(els, callback, params = {}) {\r\n\t\tparams.on = 'added';\r\n\t\treturn this.onPresenceChange(els, (el, presence, isTransient, addedState, removedState) => {\r\n\t\t\tcallback(el, presence, isTransient, addedState, removedState);\r\n\t\t}, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut function to onPresenceChange().\r\n\t *\r\n\t * Observes when the given elements or selectors are removed\r\n\t * from the given context.\r\n\t *\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonRemoved(els, callback, params = {}) {\r\n\t\tparams.on = 'removed';\r\n\t\treturn this.onPresenceChange(els, (el, presence, isTransient, addedState, removedState) => {\r\n\t\t\tcallback(el, presence, isTransient, addedState, removedState);\r\n\t\t}, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a MutationObserver that fires if currently, and whenever,\r\n\t * the given element, or selector, is present in the Ctxt.\r\n\t *\r\n\t * @param string|Element\t\t\t\tselector\r\n\t * @param function\t\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\t\tparams\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonPresent(selector, callback, params = {}) {\r\n\t\t// On Ctxt-ready\r\n\t\tdomReady.call(this.window, () => {\r\n\t\t\t// On Ctxt mutation\r\n\t\t\tif (this.window.MutationObserver) {\r\n\t\t\t\tthis.onAdded(selector, (els, presence) => {\r\n\t\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t\t}, params);\r\n\t\t\t}\r\n\t\t\tif (_isString(selector)) {\r\n\t\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t\t// as the callback handler may trigger more additions\r\n\t\t\t\t_arrFrom(this.window.document.querySelectorAll(selector)).forEach(el => callback(el, 1));\r\n\t\t\t} else if (selector.parentNode) {\r\n\t\t\t\tcallback(selector, 1);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a MutationObserver that fires if currently, and whenever,\r\n\t * the given element, or selector, is absent in the Ctxt.\r\n\t *\r\n\t * @param string|Element\t\t\t\tselector\r\n\t * @param function\t\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\t\tparams\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonAbsent(selector, callback, params = {}) {\r\n\t\t// On Ctxt-ready\r\n\t\tdomReady.call(this.window, () => {\r\n\t\t\t// On Ctxt mutation\r\n\t\t\tif (this.window.MutationObserver) {\r\n\t\t\t\tonRemoved(selector, (els, presence) => {\r\n\t\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t\t}, params);\r\n\t\t\t}\r\n\t\t\tif (_isString(selector)) {\r\n\t\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t\t// as the callback handler may trigger more removals\r\n\t\t\t\tif (_arrFrom(this.window.document.querySelectorAll(selector)).length === 0) {\r\n\t\t\t\t\tcallback(null, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (!selector.parentNode) {\r\n\t\t\t\tcallback(selector, 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Observes when the given elements or selectors are added or removed\r\n\t * from the given context.\r\n\t *\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonPresenceChange(els, callback, params = {}) {\r\n\t\tels = _arrFrom(els, false/*castObject*/);\r\n\t\tvar search = (el, nodeListArray) => {\r\n\t\t\t// Filter out text nodes\r\n\t\t\tnodeListArray = nodeListArray.filter(node => node.matches);\r\n\t\t\tif (_isString(el)) {\r\n\t\t\t\t// Is directly mutated...\r\n\t\t\t\tvar matches = nodeListArray.filter(node => node.matches(el));\r\n\t\t\t\t// Is contextly mutated...\r\n\t\t\t\tif (params.observeIndirectMutation !== false) {\r\n\t\t\t\t\tmatches = nodeListArray\r\n\t\t\t\t\t\t.reduce((collection, node) => collection.concat(_arrFrom(node.querySelectorAll(el))), matches);\r\n\t\t\t\t\tif (matches.length) {\r\n\t\t\t\t\t\treturn matches;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Is directly mutated...\r\n\t\t\t\tif (nodeListArray.includes(el)) {\r\n\t\t\t\t\treturn [el];\r\n\t\t\t\t}\r\n\t\t\t\t// Is contextly mutated...\r\n\t\t\t\tif (params.observeIndirectMutation !== false && nodeListArray.length) {\r\n\t\t\t\t\tvar parentNode = el;\r\n\t\t\t\t\twhile(parentNode = parentNode.parentNode) {\r\n\t\t\t\t\t\tif (nodeListArray.includes(parentNode)) {\r\n\t\t\t\t\t\t\treturn [el];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar match = (els, sourceArray) => {\r\n\t\t\t// -------------------------------\r\n\t\t\t// Search can be expensive...\r\n\t\t\t// Multiple listeners searching the same thing in the same list?\r\n\t\t\tif (!sourceArray.$$searchCache) {\r\n\t\t\t\tsourceArray.$$searchCache = new Map();\r\n\t\t\t}\r\n\t\t\t// -------------------------------\r\n\t\t\treturn els.reduce((matches, el) => {\r\n\t\t\t\t// -------------------------------\r\n\t\t\t\tvar _matches;\r\n\t\t\t\tif (sourceArray.$$searchCache.has(el)) {\r\n\t\t\t\t\t_matches = sourceArray.$$searchCache.get(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_matches = search(el, sourceArray, _isString(el)) || [];\r\n\t\t\t\t\tsourceArray.$$searchCache.set(el, _matches);\r\n\t\t\t\t}\r\n\t\t\t\treturn matches.concat(_matches);\r\n\t\t\t}, []);\r\n\t\t};\r\n\t\tvar addedState = new Set(), removedState = new Set();\r\n\t\tvar fire = (list, state, isTransient) => {\r\n\t\t\tif ((state && params.on === 'removed') || (!state && params.on === 'added')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ((list = match(els, list)).length) {\r\n\t\t\t\tif (params.maintainCallState) {\r\n\t\t\t\t\tlist.forEach(el => {\r\n\t\t\t\t\t\tif (state) {\r\n\t\t\t\t\t\t\taddedState.add(el);\r\n\t\t\t\t\t\t\tremovedState.delete(el);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\taddedState.delete(el);\r\n\t\t\t\t\t\t\tremovedState.add(el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcallback(list, state, isTransient, addedState, removedState);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback(list, state, isTransient);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar subject = params.context || this.window.document.documentElement;\r\n\t\tvar mo = this._observe(subject, (removed__addedNodes, added__removedNodes, addedNodes, removedNodes) => {\r\n\t\t\tif (!params.ignoreTransients) {\r\n\t\t\t\tfire(removed__addedNodes, 0, true);\r\n\t\t\t\tfire(removed__addedNodes.concat(added__removedNodes), 1, true);\r\n\t\t\t\tfire(added__removedNodes, 0, true);\r\n\t\t\t}\r\n\t\t\tfire(removedNodes, 0);\r\n\t\t\tfire(addedNodes, 1);\r\n\t\t});\r\n\t\treturn mo;\r\n\t}\r\n\r\n\t/**\r\n\t * ---------------------\r\n\t * MUTATIONS\r\n\t * ---------------------\r\n\t */\r\n\r\n\t/**\r\n\t * Observes changes in attributes of the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param array\t\t\t\t\t\tfilter\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonAttrChange(el, callback, filter = []) {\r\n\t\tvar observer = new this.window.MutationObserver(callback);\r\n\t\tvar params = {attributes:true, attributeOldValue:true};\r\n\t\tif (filter) {\r\n\t\t\tparams.attributeFilter = filter;\r\n\t\t}\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * Observes changes in tree/subtree of the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param bool\t\t\t\t\t\tsubtree\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonTreeChange(el, callback, subtree = false) {\r\n\t\tvar observer = new this.window.MutationObserver(callback);\r\n\t\tvar params = {childList:true, subtree};\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * Observes mutations on the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonMutation(el, callback, params) {\r\n\t\tvar observer = new this.window.MutationObserver(callback);\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param Element subject \r\n\t * @param Function callback \r\n\t */\r\n\t_observe(subject, callback) {\r\n\t\tif (!MutationObserversCache.has(subject)) {\r\n\t\t\tconst callbacks = new Set();\r\n\t\t\tconst observer = new this.window.MutationObserver(mutations => {\r\n\t\t\t\tif (!callbacks.size) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar addedNodes = mutations.reduce((list, mut) => list.concat(_arrFrom(mut.addedNodes)), []),\r\n\t\t\t\tremovedNodes = mutations.reduce((list, mut) => list.concat(_arrFrom(mut.removedNodes)), []),\r\n\t\t\t\tremoved__addedNodes = [],\r\n\t\t\t\tadded__removedNodes = [];\r\n\r\n\t\t\t\taddedNodes = new Set(addedNodes);\r\n\t\t\t\tremovedNodes = new Set(removedNodes);\r\n\t\t\t\taddedNodes.forEach(el => {\r\n\t\t\t\t\tif (removedNodes.has(el)) {\r\n\t\t\t\t\t\tremovedNodes.delete(el);\r\n\t\t\t\t\t\taddedNodes.delete(el);\r\n\t\t\t\t\t\tif (el.isConnected) {\r\n\t\t\t\t\t\t\tremoved__addedNodes.push(el);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tadded__removedNodes.push(el);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\taddedNodes = [...addedNodes];\r\n\t\t\t\tremovedNodes = [...removedNodes];\r\n\r\n\t\t\t\tcallbacks.forEach(callback => callback(removed__addedNodes, added__removedNodes, addedNodes, removedNodes));\r\n\t\t\t});\r\n\t\t\tobserver.observe(subject, {childList:true, subtree:true});\r\n\t\t\tMutationObserversCache.set(subject, {callbacks, observer});\r\n\t\t}\r\n\t\tconst _observer = MutationObserversCache.get(subject);\r\n\t\t_observer.callbacks.add(callback);\r\n\t\treturn {disconnect() {\r\n\t\t\t_observer.callbacks.delete(callback);\r\n\t\t}, reconnect() {\r\n\t\t\t_observer.callbacks.add(callback);\r\n\t\t}};\r\n\t}\r\n};\r\n\r\nconst MutationObserversCache = new Map();\r\n","\r\n/**\r\n * Applies all supported polyfills\r\n */\r\nexport default function(window) {\r\n    CSS_escape(window);\r\n    Node_isConnected(window);\r\n    Element_matches(window);\r\n}\r\n\r\n/**\r\n * Polyfills the window.CSS object.\r\n *  \r\n * @return void\r\n */\r\nexport function CSS_escape(window) {\r\n    if (!window.CSS) {\r\n        window.CSS = {};\r\n    }\r\n    if (!window.CSS.escape) {\r\n        /**\r\n         * Polyfills the window.CSS.escape() function.\r\n         *  \r\n         * @param string str \r\n         * \r\n         * @return string\r\n         */\r\n        window.CSS.escape = str => str.replace(/([\\:@\\~\\$\\&])/g, '\\\\$1');\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Node.prototype.isConnected property\r\n * \r\n * @see MDN\r\n  *  \r\n * @return bool\r\n*/\r\nexport function Node_isConnected(window) {\r\n    if (!('isConnected' in window.Node.prototype)) {\r\n        Object.defineProperty(window.Node.prototype, 'isConnected', {get: function() {\r\n            return !this.ownerDocument || !(\r\n                this.ownerDocument.compareDocumentPosition(this)\r\n                & this.DOCUMENT_POSITION_DISCONNECTED);\r\n        }});\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Element.prototype.matches() method\r\n * \r\n * @see MDN\r\n  *  \r\n * @return void\r\n*/\r\nexport function Element_matches(window) {\r\n    if (!window.Element.prototype.matches) {\r\n        window.Element.prototype.matches = \r\n        window.Element.prototype.matchesSelector || \r\n        window.Element.prototype.mozMatchesSelector ||\r\n        window.Element.prototype.msMatchesSelector || \r\n        window.Element.prototype.oMatchesSelector || \r\n        window.Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;            \r\n        };\r\n    }\r\n}","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport init from '../index.js';\r\n\r\n/**\r\n * Creates one or a list of DOM elements\r\n * from an input of markup, selector, HTMLElement.\r\n *\r\n * @param mixed \t\t\t\tinput\r\n * @param document|Element\t    context\r\n * @param bool\t\t \t\t\tall\r\n *\r\n * @return Element|Array\r\n */\r\nexport default function query(input, context = null, all = false) {\r\n\tconst WebQit = init.call(this);\r\n\tif (_isString(input)) {\r\n\t\tvar els;\r\n\t\tif (input.trim().startsWith('<')) {\r\n\t\t\t// Create a node from markup\r\n\t\t\tvar temp = WebQit.window.document.createElement('div');\r\n\t\t\ttemp.innerHTML = input;\r\n\t\t\tels = all ? _arrFrom(temp.children) : temp.firstChild;\r\n\t\t} else {\r\n\t\t\tels = all ? _arrFrom(querySelectorAll.call(this, input, context)) : querySelector.call(this, input, context);\r\n\t\t}\r\n\t\treturn els;\r\n\t}\r\n\tif (input instanceof WebQit.window.Element) {\r\n\t\treturn all ? [input] : input;\r\n\t}\r\n\treturn all ? _arrFrom(input) : input;\r\n}\r\n\r\n/**\r\n * Creates a list of DOM elements\r\n * from an input of markup, selector, HTMLElement.\r\n *\r\n * @param mixed \t\t\t\tinput\r\n * @param document|Element\t    context\r\n *\r\n * @return Array\r\n */\r\nexport function queryAll(selector, context = null) {\r\n    return query.call(this, selector, context, true);\r\n}\r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n * @param bool\t\t \t\t\tall\r\n *\r\n * @return Element|DOMNodeList\r\n */\r\nexport function querySelector(selector, context = null, all = false) {\r\n\tconst WebQit = init.call(this);\r\n    context = context || WebQit.window.document;\r\n\tvar matchedItems, method = all ? 'querySelectorAll' : 'querySelector';\r\n\ttry {\r\n\t\tmatchedItems = context[method](selector);\r\n\t} catch(e) {\r\n\t\ttry {\r\n\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':matches('));\r\n\t\t} catch(e) {\r\n\t\t\ttry {\r\n\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-webkit-any('));\r\n\t\t\t} catch(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-moz-any('));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn matchedItems;\r\n}\r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n *\r\n * @return DOMNodeList\r\n */\r\nexport function querySelectorAll(selector, context = null) {\r\n    return querySelector.call(this, selector, context, true);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Sets a value to the given path.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n * @param mixed \t\t\t\tval\r\n * @param object|function \t\tbuildTree\r\n * @param object \t\t\t\ttrap\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, path, val, buildTree = {}, trap = {}) {\r\n\tconst _set = (target, key, val) => {\r\n\t\tif (trap.set) {\r\n\t\t\treturn trap.set(target, key, val);\r\n\t\t} else {\r\n\t\t\tif (_isNumeric(path[i]) && _isArray(target)) {\r\n\t\t\t\ttarget.push(val);\r\n\t\t\t} else {\r\n\t\t\t\ttarget[key] = val;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\tpath = _arrFrom(path);\r\n\tvar target = obj;\r\n\tfor(var i = 0; i < path.length; i ++) {\r\n\t\tif (i < path.length - 1) {\r\n\t\t\tif (!target || (!_isTypeObject(target) && !_isFunction(target))) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar branch = _get(target, path[i], trap);\r\n\t\t\tif (!_isTypeObject(branch)) {\r\n\t\t\t\tif (trap.buildTree === false) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbranch = _isFunction(trap.buildTree) ? trap.buildTree(i) : (_isNumeric(path[i + 1]) ? [] : {});\r\n\t\t\t\tvar branchSuccess = _set(target, path[i], branch);\r\n\t\t\t\tif (!branchSuccess) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttarget = branch;\r\n\t\t} else {\r\n\t\t\treturn _set(target, path[i], val);\r\n\t\t}\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Unsets a value from the given path.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n * @param bool|function \t\treduceTree\r\n * @param object \t\t\t\ttrap\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, path, reduceTree = false, trap = {}) {\r\n\tpath = _arrFrom(path);\r\n\tvar success = false;\r\n\tdo {\r\n\t\tvar lastKey = path.pop();\r\n\t\tvar lastKey = lastKey === ''/*null*/ ? 0 : lastKey;\r\n\t\tvar _obj = obj;\r\n\t\tif (path.length) {\r\n\t\t\t_obj = _get(obj, path, {}/*reciever*/, trap);\r\n\t\t}\r\n\t\tif ((_isTypeObject(_obj) || _isFunction(_obj)) && (trap.has ? trap.has(_obj, lastKey) : lastKey in _obj)) {\r\n\t\t\tif (trap.deleteProperty) {\r\n\t\t\t\tsuccess = trap.deleteProperty(_obj, lastKey);\r\n\t\t\t} else if (trap.del) {\r\n\t\t\t\tsuccess = trap.del(_obj, lastKey);\r\n\t\t\t} else {\r\n\t\t\t\tdelete _obj[lastKey];\r\n\t\t\t\tsuccess = true;\r\n\t\t\t}\r\n\t\t}\r\n\t} while (success && reduceTree && path.length && (_isTypeObject(_obj) || _isFunction(_obj)) && !(trap.keys ? trap.keys(_obj) : Object.keys(_obj)).length);\r\n\treturn success;\r\n};\r\n","\n/**\n * @imports\n */\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _merge from '@webqit/util/obj/merge.js';\nimport _set from '@webqit/util/obj/set.js';\nimport _get from '@webqit/util/obj/get.js';\nimport _del from '@webqit/util/obj/del.js';\nimport init from '../index.js';\n\n/**\n * A WebQit's meta tag props reader.\n *  \n * @param String name\n * @param Bool\t readWrite\n * \n * @return Object\n */\nexport default function meta(name, readWrite = false) {\n    const WebQit = init.call(this);\n    var metaInstance = {};\n\n    // Initialize reader\n    if (!(metaInstance.el = WebQit.window.document.head.querySelector('meta[name=\"oohtml\"]')) && readWrite) {\n        metaInstance.el = WebQit.window.document.createElement('meta');\n        metaInstance.el.setAttribute('name', name);\n        WebQit.window.document.head.append(metaInstance.el);\n    }\n    if (metaInstance.el) {\n        metaInstance.vars = (metaInstance.el.getAttribute('content') || '').split(';').filter(v => v).reduce((_metaVars, directive) => {\n            var directiveSplit = directive.split('=').map(d => d.trim());\n            _set(_metaVars, directiveSplit[0].split('.'), directiveSplit[1] === 'true' \n                ? true : (directiveSplit[1] === 'false' \n                    ? false : (_isNumeric(directiveSplit[1]) ? parseInt(directiveSplit[1]) : directiveSplit[1])\n                )\n            );\n            return _metaVars;\n        }, {});\n    }\n\n    // Read prop...\n    metaInstance.get = function(prop) {\n        return _get(this.vars, prop.split('.'));\n    }\n\n    // Write prop...\n    metaInstance.set = function(prop, val = null, asDefaults = false) {\n        var props = _isObject(prop) ? prop : {[prop]: val === true ? 'true' : val};\n        asDefaults = arguments.length < 3 ? val : asDefaults;\n        Object.keys(props).forEach(name => {\n            if (props[name] === false) {\n                _del(this.vars, name.split('.'));\n            } else if (_isObject(props[name])) {\n                Object.keys(props[name]).forEach(_prop => {\n                    var _path = (name + '.' + _prop).split('.');\n                    if (!asDefaults || !_get(this.vars, _path)) {\n                        _set(this.vars, _path, props[name][_prop]);\n                    }\n                });\n            } else {\n                var _path = name.split('.');\n                if (!asDefaults || !_get(this.vars, _path)) {\n                    _set(this.vars, _path, props[name]);\n                }\n            }\n        });\n        if (readWrite) {\n            const flatten = (base, obj) => Object.keys(obj).reduce((arr, name) => {\n                var path = (base ? base + '.' : '') + name;\n                if (_isObject(obj[name])) {\n                    arr.push(...flatten(path, obj[name]));\n                } else {\n                    arr.push(path + '=' + obj[name]);\n                }\n                return arr;\n            }, []);\n            this.el.setAttribute('content', flatten('', this.vars).join(';'));\n        }\n        return true;\n    }\n\n    // Write prop...\n    metaInstance.defaults = function(prop, val = null) {\n        return this.set(prop, val, true);\n    };\n\n    return metaInstance;\n}","\r\n/**\r\n * @imports\r\n */\r\nimport init from '../index.js';\r\nimport Reflow from './Reflow.js';\r\nimport Mutations from './Mutations.js';\r\nimport polyfill from './polyfills.js';\r\nimport query, { queryAll, querySelector, querySelectorAll } from './query.js';\r\nimport ready from './ready.js';\r\nimport meta from './meta.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ctxt-Scope initializations.\r\n * ---------------------------\r\n */\r\n\r\nexport default function() {\r\n    const WebQit = init.call(this);\r\n    if (WebQit.DOM) {\r\n        return WebQit;\r\n    }\r\n    WebQit.DOM = {};\r\n    polyfill(WebQit.window);\r\n    WebQit.DOM.reflow = new Reflow(WebQit.window);\r\n    WebQit.DOM.mutations = new Mutations(WebQit.window);\r\n    WebQit.DOM.meta = meta.bind(WebQit.window);\r\n    WebQit.DOM.query = query.bind(WebQit.window);\r\n    WebQit.DOM.queryAll = queryAll.bind(WebQit.window);\r\n    WebQit.DOM.ready = ready.bind(WebQit.window);\r\n    // ------\r\n    return WebQit;\r\n}\r\n\r\nexport {\r\n    meta,\r\n    query,\r\n    queryAll,\r\n    querySelector,\r\n    querySelectorAll,\r\n    ready,\r\n}","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n","\n/**\n * @imports\n */\nimport _any from '@webqit/util/arr/any.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _remove from '@webqit/util/arr/remove.js';\nimport _unique from '@webqit/util/arr/unique.js';\nimport _difference from '@webqit/util/arr/difference.js';\nimport _each from '@webqit/util/obj/each.js';\nimport domInit from '@webqit/browser-pie/src/dom/index.js';\nimport { config, footprint, scopeQuery, parseScopeExpr } from '../util.js';\n\n/**\n * ---------------------------\n * HTML Partials\n * ---------------------------\n */\n\n/**\n * @init\n * \n * @param Object config\n */\nexport default function init(_config = null, onDomReady = false) {\n\n    const WebQit = domInit.call(this);\n    if (onDomReady) {\n        WebQit.DOM.ready(() => {\n            init.call(this, _config, false);\n        });\n        return;\n    }\n\n    const window = WebQit.window;\n    const document = WebQit.window.document;\n    const mutations = WebQit.DOM.mutations;\n\n    const importInertContexts = [];\n    const _meta = config.call(this, {\n        element: {\n            import: 'import',\n        },\n        attr: {\n            importid: 'name',\n            templatespec: 'template-specificity',\n        },\n    }, _config);\n\n    _defaultNoInherits.push(_meta.get('attr.importid'), _meta.get('attr.moduleref'));\n    const modulerefSelector = '[' + window.CSS.escape(_meta.get('attr.moduleref')) + ']';\n    const exportgroupSelector = '[' + window.CSS.escape(_meta.get('attr.exportgroup')) + ']';\n\n    // ----------------------\n    // Capture slot elements\n    // ----------------------\n\n    const Import = class/* extends window.HTMLElement*/ {\n\n        /*\n        static create(el) {\n            return el;\n        }\n        constructor(importEl) {\n            super();\n            this.el = this;\n        }\n        */\n\n        static create(el) {\n            return new Import(el);\n        }\n        constructor(importEl) {\n            this.el = importEl;\n            const [ importID, modifiers ] = parseScopeExpr(importEl.getAttribute(_meta.get('attr.importid')) || 'default');\n            footprint(this.el).importID = importID;\n            footprint(this.el).importModifiers = modifiers;\n        }\n        \n        /**\n         * Called by the Slots hydrator.\n         *\n         * @param Comment       anchorNode\n         * @param array         slottedElements\n         * @param Element       compositionBlock\n         *\n         * @return void\n         */\n        hydrate(anchorNode, slottedElements, compositionBlock) {\n            footprint(this.el).anchorNode = anchorNode;\n            footprint(this.el).slottedElements = slottedElements;\n            footprint(this.el).compositionBlock = compositionBlock;\n            this._bindSlotted(slottedElements);\n            this._connectToCompositionBlock();\n        }\n    \n        /**\n         * This triggers self-resolution\n         *\n         * @return void\n         */\n        connectedCallback() {\n            if (!footprint(this.el).anchorNode) {\n                footprint(this.el).anchorNode = _meta.get('isomorphic')\n                    ? document.createComment(this.el.outerHTML)\n                    : document.createTextNode('');\n                footprint(this.el).compositionBlock = !this.el.hasAttribute(_meta.get('attr.moduleref'))\n                    ? this.el.parentNode.closest(modulerefSelector) : (\n                        this.el.getAttribute(_meta.get('attr.moduleref')).trim().startsWith('~') ? this.el.parentNode.closest(exportgroupSelector) : null\n                    );\n                this._connectToCompositionBlock();\n            }\n            WebQit.DOM.ready.call(WebQit, () => {\n                this.resolve();\n            });\n        }\n    \n        /**\n         * Connects the instance to the compositionBlock.\n         */\n        _connectToCompositionBlock() {\n            if (this.compositionBlock) {\n                if (!footprint(this.compositionBlock).imports) {\n                    footprint(this.compositionBlock).imports = {};\n                }\n                // Now after the update slot ID\n                footprint(this.compositionBlock).imports[this.importID] = this.el;\n            }\n        }\n\n        /**\n         * Bind a slotted element.\n         *\n         * @param array              exports\n         *\n         * @return void\n         */\n        _bindSlotted(exports) {\n            exports.forEach(_export => {\n                _export.importReference = this.el;\n            });\n            footprint(this.el).slottedObserver = mutations.onRemoved(exports, (removed, state, isTransient, addedState, removedState) => {\n                if (removedState && removedState.size === exports.length) {\n                    footprint(this.el).slottedObserver.disconnect();\n                }\n                removed.forEach(remd => {\n                    // Let's ensure this wasn't slotted againe\n                    if (!remd.parentNode) {\n                        _remove(this.slottedElements, remd);\n                    }\n                    // if the slotted hasnt been slotted somewhere\n                    if (remd.importReference === this.el) {\n                        delete remd.importReference;\n                    }\n                });\n                // If this was the last of the s,ottable in the same family of IDs,\n                // we should restore the original slot\n                if (!this.slottedElements.length) {\n                    // Must be assigned bu now\n                    // for it to be removed in the first place\n                    if (this.anchorNode.isConnected) {\n                        this.anchorNode.replaceWith(this.el);\n                    }\n                }\n            }, {maintainCallState: true, ignoreTransients: true});\n        }\n\n        /**\n         * Resolves the slot\n         */\n        resolve() {\n            if (_any(importInertContexts, inertContext => this.el.closest(inertContext))) {\n                return;\n            }\n            var getExports = (contexts, moduleref) => {\n                var importId = this.importID,\n                    modifiers = this.importModifiers,\n                    [ superA, superB ] = 'super' in modifiers ? modifiers.super.split('-').filter(a => a).map(a => parseInt(a || 0)).concat([0, 1000]) : [0, 0];\n                    const aggrExports = modules => modules.reduce((_exports, _module) => _exports.concat(footprint(_module).exports[importId] || []), []);\n                return scopeQuery(contexts, moduleref, function(host, prop) {\n                    var collection = footprint(host).templates || {};\n                    if (arguments.length === 1) return collection;\n                    if (prop.startsWith(':')) return (footprint(host).exports || {})[prop.substr(1)];\n                    return collection[prop];\n                }, function(_modules, level, isRewinding) {\n                    var exportsAggr = aggrExports(_modules);\n                    if (!exportsAggr.length && level > superA && superB) {\n                        superB --;\n                        return -1;\n                    }\n                    return exportsAggr;\n                });\n            };\n            // -----------------\n            // Global import or scoped slot?\n            var templateSource, exports;\n            if (this.el.hasAttribute(_meta.get('attr.moduleref'))) {\n                // Did we previously had a compositionBlock?\n                // Let's remove ourself\n                if (this.compositionBlock && footprint(this.compositionBlock).imports[this.importID] === this.el) {\n                    delete footprint(this.compositionBlock).imports[this.importID];\n                }\n                templateSource = this.el;\n            } else {\n                if (!this.compositionBlock) {\n                    console.warn('Scoped slots must be found within template contexts. [' + this.importID + ']', this.el);\n                    return;\n                }\n                templateSource = this.compositionBlock;\n            }\n            var moduleref = templateSource.getAttribute(_meta.get('attr.moduleref')).trim();\n            if (templateSource && (exports = getExports([moduleref.startsWith('~') ? this.compositionBlock : document], moduleref)).length) {\n                if (_difference(exports, footprint(this.el).originalSlottedElements || []).length) {\n                    footprint(this.el).originalSlottedElements = exports;\n                    this.fill(exports);\n                }\n            } else {\n                footprint(this.el).originalSlottedElements = null;\n                this.empty();\n            }\n        }\n\n        /**\n         * Fill slot with exports.\n         *\n         * @param array|Element     exports\n         *\n         * @return void\n         */\n        fill(exports) {\n            exports = _arrFrom(exports, false/* castObject */).map(_export => _export.cloneNode(true));\n            // ---------------------\n            // Discard previous slotted elements\n            // But this intentional removal should not trigger slot restoration\n            this.empty(true/* silently */);\n            if (this.el.isConnected) {\n                this.el.replaceWith(this.anchorNode);\n            }\n            // ---------------------\n            // Slot-in the corresponding exports from template\n            exports.forEach(_export => {\n                // ---------------------\n                // Implement the slot?\n                if (!footprint(_export).templates) {\n                    footprint(_export).templates = {};\n                }\n                footprint(_export).templates['~'] = this.el;\n                // Inherit attributes from the slot element before replacement\n                mergeAttributes(_export, this.el);\n                // ---------------------\n                if (!_export.getAttribute(_meta.get('attr.exportgroup'))) {\n                    _export.setAttribute(_meta.get('attr.exportgroup'), this.importID);\n                }\n                // Place slottable\n                this.anchorNode.before(_export);\n            });\n            this._bindSlotted(exports);\n            // ---------------------\n            // Updatate records\n            this.slottedElements.push(...exports);\n        }\n\n        /**\n         * Empty slot.\n         *\n         * @param bool              sliently\n         *\n         * @return void\n         */\n        empty(silently = false) {\n            if (this.slottedElements) {\n                var slottedElements = this.slottedElements;\n                if (silently && footprint(this.el).slottedObserver) {\n                    footprint(this.el).slottedObserver.disconnect();\n                    slottedElements = this.slottedElements.splice(0);\n                }\n                slottedElements.forEach(slottedElement => slottedElement.remove());\n            }\n        }\n\n        /**\n         * Returns the slot's name.\n         *\n         * @return string\n         */\n        get importID() {\n            return footprint(this.el).importID;\n        }\n\n        /**\n         * Returns the slot's import Modifiers.\n         *\n         * @return string\n         */\n         get importModifiers() {\n            return footprint(this.el).importModifiers;\n        }\n\n        /**\n         * Returns the slot's anchorNode.\n         *\n         * @return array\n         */\n        get anchorNode() {\n            return footprint(this.el).anchorNode;\n        }\n\n        /**\n         * Returns the slot's compositionBlock, if any.\n         *\n         * @return array\n         */\n        get compositionBlock() {\n            return footprint(this.el).compositionBlock;\n        }\n\n        /**\n         * Returns the slot's slotted elements.\n         *\n         * @return array\n         */\n        get slottedElements() {\n            if (!footprint(this.el).slottedElements) {\n                footprint(this.el).slottedElements = [];\n            }\n            return footprint(this.el).slottedElements;\n        }\n\n        /**\n         * Returns the slot's implementable exports\n         *\n         * @return array\n         */\n        get exports() {\n            return footprint(this.el).exports;\n        }\n                \n        /**\n         * The attributes we want to observe.\n         *\n         * @return array\n         */\n        static get observedAttributes() {\n            return [_meta.get('attr.importid')];\n        }\n    };\n\n    // ----------------------\n    // Capture import elements\n    // ----------------------\n\n    mutations.onPresent(_meta.get('element.import'), el => {\n        var importElInstance = Import.create(el);\n        importElInstance.connectedCallback();\n    });\n    /**\n    window.customElements.define(_meta.get('element.import'), Import);\n    */\n\n    // ----------------------\n    // Progressive resolution\n    // ----------------------\n    \n    const resolveSlots = (el, exportName) => {\n        const shouldResolve = (importEl, importName) => !exportName || importName === exportName || (exportName === true && importEl.getAttribute(_meta.get('attr.templatespec')));\n        if (el.matches(_meta.get('element.import'))) {\n            var importElInstance = Import.create(el);\n            importElInstance.connectedCallback();\n            if (shouldResolve(el, importElInstance.importID)) {\n                importElInstance.resolve();\n            }\n        } else {\n            _each(footprint(el).imports, (name, importEl) => {\n                console.log('========', name);\n                if (shouldResolve(importEl, name)) {\n                    var importElInstance = Import.create(importEl);\n                    importElInstance.resolve();\n                }\n            });\n        }\n    };\n    \n    mutations.onPresent(modulerefSelector, el => {\n        if (_any(importInertContexts, inertContext => el.closest(inertContext))) {\n            return;\n        }\n        // Imports resolve by themselves\n        // But...\n        // We resolve them again when reference to template changes\n        mutations.onAttrChange(el, mr => {\n            if (mr[0].target.getAttribute(mr[0].attributeName) !== mr[0].oldValue) {\n                resolveSlots(el);\n            }\n        }, [_meta.get('attr.moduleref'), _meta.get('attr.importid')]);\n    });\n\n    document.addEventListener('templatemutation', e => {\n        // Resolve slots when the referenced template changes\n        if (!e.detail.path) {\n            return;\n        }\n        const modulerefSelector = [e.detail.path, e.detail.path + '/'].map(path => '[' + window.CSS.escape(_meta.get('attr.moduleref')) + '=\"' + path + '\"]').join(',');\n        _arrFrom(document.querySelectorAll(modulerefSelector)).forEach(el => {\n            resolveSlots(el, true);\n            e.detail.addedExports.concat(e.detail.removedExports).forEach(exportGroup => {\n                resolveSlots(el, exportGroup.name);\n            });\n        });\n    });\n\n    // ----------------------\n    // Restore slots from snapshots\n    // ----------------------\n\n    const hydrateSlots = () => {\n        _arrFrom(document.querySelectorAll(exportgroupSelector)).forEach(_export => {\n            // Scan\n            if (!footprint(_export.parentNode).importsCan) {\n                var slottedElements = [];\n                _export.parentNode.childNodes.forEach(node => {\n                    var nodeValue;\n                    if (node.nodeType === 1/** ELEMENT_NODE */ && node.matches(exportgroupSelector)) {\n                        slottedElements.push(node);\n                    } else if (node.nodeType === 8/** COMMENT_NODE */ && (nodeValue = node.nodeValue.trim())\n                    && nodeValue.startsWith('<' + _meta.get('element.import'))\n                    && nodeValue.endsWith('</' + _meta.get('element.import') + '>')) {\n                        var importEl, reviver = document.createElement('div');\n                        reviver.innerHTML = nodeValue;\n                        if ((importEl = reviver.firstChild).matches(_meta.get('element.import'))) {\n                            // Belongs to a composition block?\n                            var compositionBlock = !importEl.hasAttribute(_meta.get('attr.moduleref'))\n                                ? node.parentNode.closest(modulerefSelector) : (\n                                    importEl.getAttribute(_meta.get('attr.moduleref')).trim().startsWith('~') ? node.parentNode.closest(exportgroupSelector) : null\n                                )\n                            var importElInstance = Import.create(importEl);\n                            importElInstance.hydrate(node, slottedElements, compositionBlock);\n                            // Empty basket\n                            slottedElements = [];\n                        }\n                    }\n                });\n                // Scanning is once for every parent\n                footprint(_export.parentNode).importsCan = true;\n            }\n        });\n    };\n\n    // ----------------------\n    // Hydrate\n    // ----------------------\n\n    WebQit.DOM.ready.call(WebQit, () => {\n        if (_meta.get('isomorphic')) {\n            hydrateSlots();\n        }\n    });\n\n};\n\n/**\n * Imports exports from from sourceEl into el.\n *\n * @param Element\t\t\t\t    exportEl\n * @param Element\t\t\t\t    superExportEl\n * @param array    \t\t\t\t    noinherit\n *\n * @return Element\n */\nexport function mergePartials(exportEl, superExportEl, noinherit = []) {\n    if (!superExportEl.exportsSlottables) {\n        return exportEl;\n    }\n    _each(superExportEl.exportsSlottables, (slotId, slottable) => {\n        if (exportEl.exportsSlottables && exportEl.exportsSlottables[slotId]) {\n            // Simply inherit attributes from the super slottable\n            // The export may however define a no-inherit directive for all its slottables\n            var _noinherit = noinherit.concat((exportEl.getAttribute('noinherit') || '').split(' ').map(val => val.trim()));\n            this.mergeAttributes(exportEl.exportsSlottables[slotId], slottable, _noinherit, false/*prioritize*/);\n        } else {\n            // Copy new slottables\n            exportEl.append(slottable.clone(true));\n        }\n    });\n    return exportEl;\n};\n\n/**\n * Imports attributes from sourceEl into el.\n *\n * @param Element\t\t\t\t    el\n * @param Element\t\t\t\t    sourceEl\n * @param array\t\t\t\t\t\tnoinherit\n * @param bool\t\t\t\t\t\tprioritize\n *\n * @return Element\n */\nexport function mergeAttributes(el, sourceEl, noinherit = [], prioritize = true) {\n    // ----------------------------\n    // Norecompose directive\n    // ----------------------------\n    noinherit = noinherit.concat(_defaultNoInherits);\n    if (el.hasAttribute('noinherit')) {\n        noinherit = noinherit.concat((el.getAttribute('noinherit') || '*').split(' ').map(val => val.trim()));\n    }\n    // ----------------------------\n    // Merge list attributes...\n    // ----------------------------\n    var defaultListAttrs = _defaultListAttrs.concat(['role', 'class']);\n    _unique(defaultListAttrs).forEach(type => {\n        var b_attr, a_attr;\n        if (!noinherit.includes(type) && !noinherit.includes('*') && (b_attr = sourceEl.getAttribute(type))) {\n            if (a_attr = el.getAttribute(type)) {\n                var jointList = !prioritize ? [b_attr, a_attr] : [a_attr, b_attr];\n            } else {\n                var jointList = [b_attr];\n            }\n            el.setAttribute(type, _unique(jointList.join(' ').split(' ').map(r => r.trim())).join(' '));\n            noinherit.push(type);\n        }\n    });\n    // ----------------------------\n    // Merge key/val attributes...\n    // ----------------------------\n    _unique(_defaultKeyValAttrs.concat('style')).forEach(type => {\n        var b_attr, a_attr;\n        if (!noinherit.includes(type) && !noinherit.includes('*') && (b_attr = sourceEl.getAttribute(type))) {\n            if (a_attr = el.getAttribute(type)) {\n                var jointDefs = !prioritize ? [b_attr, a_attr] : [a_attr, b_attr];\n                if (!jointDefs[0].trim().endsWith(';')) {\n                    jointDefs[0] = jointDefs[0] + ';';\n                }\n            } else {\n                var jointDefs = [b_attr];\n            }\n            el.setAttribute(type, jointDefs.join(' '));\n            noinherit.push(type);\n        }\n    });\n    // ----------------------------\n    // Port all other attributes...\n    // ----------------------------\n    if (!noinherit.includes('*')) {\n        for (var i = 0; i < sourceEl.attributes.length; i ++) {\n            var attr = sourceEl.attributes[i];\n            if (!noinherit.includes(attr.name) \n            && (!el.hasAttribute(attr.name) || prioritize)) {\n                el.setAttribute(attr.name, attr.value);\n            }\n        }\n    }\n    return el;\n};\n\nconst _defaultNoInherits = ['nocompose'], \n    _defaultKeyValAttrs = [],\n    _defaultListAttrs = [];\n","\n/**\n * @imports\n */\nimport init from './index.js';\n\n/**\n * @init\n */\ninit.call(window);"],"sourceRoot":""}