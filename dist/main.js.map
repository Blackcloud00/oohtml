{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@onephrase/util/js/isTypeObject.js","webpack:///./node_modules/@onephrase/util/js/isArray.js","webpack:///./node_modules/@onephrase/util/arr/from.js","webpack:///./node_modules/@onephrase/util/js/isTypeArray.js","webpack:///./node_modules/@onephrase/util/js/isFunction.js","webpack:///./node_modules/@onephrase/util/js/isString.js","webpack:///./node_modules/@onephrase/util/js/isObject.js","webpack:///./node_modules/@onephrase/util/js/isNumeric.js","webpack:///./node_modules/@onephrase/util/obj/each.js","webpack:///./node_modules/@onephrase/util/js/isUndefined.js","webpack:///./node_modules/@onephrase/util/arr/unique.js","webpack:///./node_modules/@onephrase/util/obj/merge.js","webpack:///./node_modules/@onephrase/util/str/after.js","webpack:///./node_modules/@onephrase/util/str/before.js","webpack:///./node_modules/@onephrase/util/dom/mutation.js","webpack:///./node_modules/@onephrase/util/js/isTypeFunction.js","webpack:///./node_modules/@onephrase/util/arr/remove.js","webpack:///./node_modules/@onephrase/util/js/isNumber.js","webpack:///./node_modules/@onephrase/util/js/isNull.js","webpack:///./node_modules/@onephrase/util/arr/any.js","webpack:///./node_modules/@onephrase/util/dom/ready.js","webpack:///./node_modules/@onephrase/util/js/isClass.js","webpack:///./node_modules/@onephrase/util/obj/getAllPropertyNames.js","webpack:///./node_modules/@onephrase/util/obj/getPrototypeChain.js","webpack:///./node_modules/@onephrase/util/obj/mergeCallback.js","webpack:///./node_modules/@onephrase/util/obj/with.js","webpack:///./src/meta.js","webpack:///./node_modules/@onephrase/util/arr/intersect.js","webpack:///./node_modules/@onephrase/util/arr/pushUnique.js","webpack:///./node_modules/@onephrase/util/obj/copy.js","webpack:///./node_modules/@onephrase/util/js/getType.js","webpack:///./node_modules/@web-native-js/observer/src/getFirebase.js","webpack:///./node_modules/@web-native-js/observer/src/Firebase.js","webpack:///./node_modules/@onephrase/util/obj/get.js","webpack:///./node_modules/@web-native-js/observer/src/observer/unobserve.js","webpack:///./node_modules/@web-native-js/observer/src/Fireable.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/Interceptor.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/Action.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/Interceptors.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/getInterceptors.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/_getProps.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/keys.js","webpack:///./node_modules/@web-native-js/observer/src/observer/build.js","webpack:///./node_modules/@web-native-js/observer/src/observer/observe.js","webpack:///./node_modules/@web-native-js/observer/src/observer/Delta.js","webpack:///./node_modules/@web-native-js/observer/src/observer/link.js","webpack:///./node_modules/@web-native-js/observer/src/observer/unlink.js","webpack:///./node_modules/@web-native-js/observer/src/observer/closure.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/get.js","webpack:///./node_modules/@web-native-js/observer/src/observer/Observer.js","webpack:///./node_modules/@onephrase/util/arr/crossJoin.js","webpack:///./node_modules/@web-native-js/observer/src/observer/Observers.js","webpack:///./node_modules/@web-native-js/observer/src/observer/getObservers.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/has.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/_setProp.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/set.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/deleteProperty.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/defineProperty.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/ownKeys.js","webpack:///./node_modules/@web-native-js/observer/src/index.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/intercept.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/unintercept.js","webpack:///./node_modules/@web-native-js/observer/src/interceptor/proxy.js","webpack:///./node_modules/@web-native-js/observer/src/observer/init.js","webpack:///./node_modules/@onephrase/util/js/isEmpty.js","webpack:///./node_modules/@onephrase/util/obj/from.js","webpack:///./node_modules/@onephrase/util/arr/difference.js","webpack:///./node_modules/@onephrase/util/js/instanceof.js","webpack:///./node_modules/@onephrase/util/js/isPlainObject.js","webpack:///./node_modules/@onephrase/util/js/isBoolean.js","webpack:///./node_modules/@onephrase/util/obj/even.js","webpack:///./node_modules/@onephrase/util/obj/compareCallback.js","webpack:///./node_modules/@web-native-js/jsen/src/ExprInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ReferenceInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/CallInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/FuncInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/IfInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/SyntaxError.js","webpack:///./node_modules/@web-native-js/jsen/src/Jsen.js","webpack:///./node_modules/@web-native-js/jsen/src/ReferenceError.js","webpack:///./node_modules/@web-native-js/jsen/src/Scope.js","webpack:///./node_modules/@onephrase/util/str/wrapped.js","webpack:///./node_modules/@onephrase/util/str/unwrap.js","webpack:///./node_modules/@onephrase/util/str/beforeLast.js","webpack:///./node_modules/@onephrase/util/arr/flatten.js","webpack:///./node_modules/@onephrase/util/arr/first.js","webpack:///./node_modules/@onephrase/util/arr/last.js","webpack:///./node_modules/@onephrase/util/obj/copyPlain.js","webpack:///./node_modules/@onephrase/util/str/Lexer.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/AbstractionInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Abstraction.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ArrInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Arr.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ArgumentsInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Arguments.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/AssertionInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Assertion.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/AssignmentInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Assignment.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/BlockInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ReturnInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Block.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/BoolInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Bool.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Call.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ComparisonInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Comparison.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ConditionInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Condition.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/DeletionInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Deletion.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Func.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/If.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/MathInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Math.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/NumInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Num.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/ObjInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Obj.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/PresenceInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Presence.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Reference.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Return.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/StrInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Str.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/VoidInterface.js","webpack:///./node_modules/@web-native-js/jsen/src/Expr/Void.js","webpack:///./node_modules/@web-native-js/jsen/src/index.js","webpack:///./src/scoped-js/Scope.js","webpack:///./src/scoped-js/params.js","webpack:///./src/scoped-js/index.js","webpack:///./src/html-partials/params.js","webpack:///./src/html-partials/index.js","webpack:///./src/scoped-html/params.js","webpack:///./src/scoped-html/index.js","webpack:///./src/index.js","webpack:///./node_modules/@onephrase/util/dom/polyfills.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","castObject","length","slice","values","toString","String","isNaN","returnValue","undefined","obj","keys","forEach","k","callback","parseFloat","arguments","arr","filter","index","self","indexOf","objs","obj1","obj2","search","subject","pos","afterLast","lastIndexOf","substr","beforeLast","onRemoved","window","els","params","on","onPresenceChange","el","presence","onPresent","selector","MutationObserver","onAdded","document","querySelectorAll","parentNode","nodeListArray","node","matches","observeIndirectMutation","reduce","collection","concat","includes","added","removed","context","documentElement","mo","mutations","matchedAddedNodes","mut","addedNodes","matchedAsAddedNode","match","push","onceEach","newlyadded","once","disconnect","matchedRemovedNodes","removedNodes","matchedAsRemovedNode","newlyremoved","observe","childList","subtree","onAttrChange","observer","attributes","attributeOldValue","attributeFilter","itm","limit","splice","Number","prevTest","__readyCallbacks","readyState","addEventListener","test","Function","keysAll","until","prototypalChain","getPrototypeOf","getOwnPropertyNames","mergeCallback","deepProps","isReplace","withSymbols","depth","shift","Error","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","entriesOrKey","meta","prop","set","CHTML_META","CHTML_METATag","querySelector","getAttribute","split","v","META","directive","directiveSplit","map","trim","parseInt","content","setAttribute","arr2","val1","val2","items","firebase","firebaseKey","Base","this","fireables","currentlyFiring","fireable","dfn","_fireable","fireableFilter","fireableTags","tags","dfnFilter","dfnTags","originalHandler","handler","reciever","path","_ctxt","ctxt","_key","trap","exists","observers","getObservers","forget","disconnected","Fireable","event","next","recieved","type","seal","Firebase","super","add","Interceptor","action","defaultHandler","Action","a","_args","interceptor","fire","args","pop","getFirebase","createIfNotExist","Interceptors","interceptors","defaultKeys","_keys","ownKeys","getInterceptors","_getProps","build","paths","startsWith","subkeys","existing","unique","originalSubject","changes","_changes","delta","field","Delta","linkTag","unobserve","subjects","subjectCopy","result","cntxt","initialKeys","currentKeys","related","buffered","isUpdate","oldValue","unlink","defaultGet","_value","autoClosures","closure","apply","filterArray","isDynamicFilter","endsWith","join","dynamicFieldOutcomes","observedField","replace","deltaNameSplit","observedDynamicFieldOutcome","seg","suptree","currTable","column","newTable","row","_row","fields","formatChanges","data","fieldDelta","_delta","_field","Observer","propagationStopped","Observers","defaultHas","_state","keysOrPayload","detail","handleSet","descriptor","define","defaultSet","_success","eventObject","success","events","successfulEvents","_setProp","defaultDel","del","deleteProperty","def","has","intercept","unintercept","proxy","Proxy","init","onGetFire","onSetFire","currentDescriptor","writable","newValue","link","classB","mixinTest","classA","prototypes","prevAns","constructor","_even","assertion","obj1Keys","obj2Keys","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","Super","comments","vars","Interface","ExprInterface","cache","expr","Parsers","_parsed","allowCache","parseOne","parsers","grammars","parsed","assert","SyntaxError","Parser","deepVars","parse","_expr","_Parsers","_params","subStmt","lodge","ReferenceInterface","CallInterface","_var","reference","FuncInterface","IfInterface","onTrue","onFalse","explain","stack","errorLevel","local","$local","props","_has","main","scope","references","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","initKeyword","_set","localContxtMeta","LogicalError","ReferenceError","prop2","contextObj2","fn","exec","execUnknown","openingTag","closingTag","_flatten","withObjects","acc","count","firsts","amount","reverse","str","delims","options","copyResult","nesting","maxDepth","tokens","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","cursor","_evalCharsAt","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","quote","block","Math","max","testList","ret","useRegex","RegExp","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","ArgumentsInterface","list","arg","Assertion","AssertionInterface","logic","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","operator","postIncrDecr","initialVal","getEval","operandA","operandB","_pushUnique","message","testBlockEnd","isIncrDecr","b","BlockInterface","stmts","delim","stringifyEach","callEval","stmt","catch","results","isDirectEventTarget","f","isIndirectEventTarget","ReturnInterface","BoolInterface","state","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","splits","Deletion","DeletionInterface","red","Func","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","_context","onTrueIsBlock","onFalseIsBlock","rest","MathInterface","currentTotal","sub","NumInterface","int","dec","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","Reference","backticks","sourceContext","subjectContext","separator","nameSplit","isContext","exprLc","StrInterface","VoidInterface","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","Call","Scope","scriptElement","globalBindingMethod","localBindingMethod","inertContexts","script","AST","_this","globalRuntimeInitializationWaitlist","ready","getVal","delVal","setVal","mergeVal","getScriptBase","scopedJS","globalScopeInstance","inWaitlist","applyBinding","targetScriptBase","console","error","warn","inertContext","closest","srcCode","scriptBase","remove","textContent","shouldExplain","hasAttribute","log","hasBindings","Element","binding","update","scopeInstanceProxy","waitingElement","globalScopeInstanceProxy","bundleElement","templateElement","templateNamespaceAttribute","slotReferenceAttribute","templateReferenceAttribute","slotElement","slotNameAttribute","itemsBindingMethod","itemIndexAttribute","keyValAttributes","listAttributes","inertSubjects","noinheritAttributes","recomposeCallback","chtml","loadingTemplates","addTemplate","templates","CSS","escape","load","src","Promise","resolve","reject","fetch","then","response","ok","text","statusText","innerHTML","dispatchEvent","Event","children","discoverContents","template","partials","templateName","HTMLTemplateElement","partialsName","templateId","imported","item","inerts","resolveSlots","slots","slot","change","customElements","HTMLElement","anchorNode","slottedElements","compositionBlock","_bindSlotted","_connectToCompositionBlock","createComment","outerHTML","createTextNode","after","all","slotReference","slottedObserver","remd","before","fill","empty","cloneNode","mergeAttributes","silently","slottedElement","promise","templatesReadyState","slotsCan","childNodes","nodeValue","nodeType","reviver","createElement","firstChild","hydrate","exportEl","superExportEl","noinherit","partialsSlottables","slotId","slottable","_noinherit","append","clone","sourceEl","prioritize","b_attr","a_attr","jointList","jointDefs","attr","rootAttribute","scopedIdAttribute","namespacePropertyName","namespaceStore","scopedId","Chtml","CSS_escape","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","Element_matches","polyfills","HTMLPartials","ScopedHTML","ScopedJS","WN","WebNative"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _difference from '../arr/difference.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport ready from './ready.js';\r\n\r\n/**\r\n * ---------------------\r\n * PRESENCE\r\n * ---------------------\r\n */\r\n\r\n/**\r\n * Shortcut function to onPresenceChange().\r\n *\r\n * Observes when the given elements or selectors are added\r\n * to the given context.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param array|Element|string\t\tels\r\n * @param function\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onAdded(window, els, callback, params = {}) {\r\n\tparams.on = 'added';\r\n\treturn onPresenceChange(window, els, (el, presence) => {\r\n\t\tcallback(el, presence);\r\n\t}, params);\r\n};\r\n\r\n/**\r\n * Shortcut function to onPresenceChange().\r\n *\r\n * Observes when the given elements or selectors are removed\r\n * from the given context.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param array|Element|string\t\tels\r\n * @param function\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onRemoved(window, els, callback, params = {}) {\r\n\tparams.on = 'removed';\r\n\treturn onPresenceChange(window, els, (el, presence) => {\r\n\t\tcallback(el, presence);\r\n\t}, params);\r\n};\r\n\r\n/**\r\n * Creates a MutationObserver that fires if currently, and whenever,\r\n * the given element, or selector, is present in the DOM.\r\n *\r\n * @param window\t\t\t\t\t\twindow\r\n * @param string|Element\t\t\t\tselector\r\n * @param function\t\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\t\tparams\r\n *\r\n * @return void\r\n */\r\nexport function onPresent(window, selector, callback, params = {}) {\r\n\t// On DOM-ready\r\n\tready(window, () => {\r\n\t\t// On DOM mutation\r\n\t\tif (window.MutationObserver) {\r\n\t\t\tonAdded(window, selector, (els, presence) => {\r\n\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\tif (_isString(selector)) {\r\n\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t// as the callback handler may trigger more additions\r\n\t\t\t_arrFrom(window.document.querySelectorAll(selector)).forEach(el => callback(el, 1));\r\n\t\t} else if (selector.parentNode) {\r\n\t\t\tcallback(selector, 1);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Creates a MutationObserver that fires if currently, and whenever,\r\n * the given element, or selector, is absent in the DOM.\r\n *\r\n * @param window\t\t\t\t\t\twindow\r\n * @param string|Element\t\t\t\tselector\r\n * @param function\t\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\t\tparams\r\n *\r\n * @return void\r\n */\r\nexport function onAbsent(window, selector, callback, params = {}) {\r\n\t// On DOM-ready\r\n\tready(window, () => {\r\n\t\t// On DOM mutation\r\n\t\tif (window.MutationObserver) {\r\n\t\t\tonRemoved(window, selector, (els, presence) => {\r\n\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\tif (_isString(selector)) {\r\n\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t// as the callback handler may trigger more removals\r\n\t\t\tif (_arrFrom(window.document.querySelectorAll(selector)).length === 0) {\r\n\t\t\t\tcallback(null, 0);\r\n\t\t\t}\r\n\t\t} else if (!selector.parentNode) {\r\n\t\t\tcallback(selector, 0);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Observes when the given elements or selectors are added or removed\r\n * from the given context.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param array|Element|string\t\tels\r\n * @param function\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onPresenceChange(window, els, callback, params = {}) {\r\n\tels = _arrFrom(els, false/*castObject*/);\r\n\tvar search = (el, nodeListArray) => {\r\n\t\t// Filter out text nodes\r\n\t\tnodeListArray = nodeListArray.filter(node => node.matches);\r\n\t\tif (_isString(el)) {\r\n\t\t\t// Is directly mutated...\r\n\t\t\tvar matches = nodeListArray.filter(node => node.matches(el));\r\n\t\t\t// Is contextly mutated...\r\n\t\t\tif (params.observeIndirectMutation !== false) {\r\n\t\t\t\tmatches = nodeListArray\r\n\t\t\t\t\t.reduce((collection, node) => collection.concat(_arrFrom(node.querySelectorAll(el))), matches);\r\n\t\t\t\tif (matches.length) {\r\n\t\t\t\t\treturn matches;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Is directly mutated...\r\n\t\t\tif (nodeListArray.includes(el)) {\r\n\t\t\t\treturn [el];\r\n\t\t\t}\r\n\t\t\t// Is contextly mutated...\r\n\t\t\tif (params.observeIndirectMutation !== false && nodeListArray.length) {\r\n\t\t\t\tvar parentNode = el;\r\n\t\t\t\twhile(parentNode = parentNode.parentNode) {\r\n\t\t\t\t\tif (nodeListArray.includes(parentNode)) {\r\n\t\t\t\t\t\treturn [el];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvar added = [], removed = [];\r\n\tvar subject = params.context || window.document.documentElement;\r\n\tvar mo = new window.MutationObserver(mutations => {\r\n\t\tif (!params.on || params.on === 'added') {\r\n\t\t\tvar matchedAddedNodes = [];\r\n\t\t\tels.forEach(el => {\r\n\t\t\t\tif (_isString(el)) {\r\n\t\t\t\t\tmatchedAddedNodes = mutations\r\n\t\t\t\t\t\t.reduce((matches, mut) => matches.concat(search(el, _arrFrom(mut.addedNodes)) || []), matchedAddedNodes);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar matchedAsAddedNode = mutations\r\n\t\t\t\t\t\t.reduce((match, mut) => match || (search(el, _arrFrom(mut.addedNodes)) || [])[0], null);\r\n\t\t\t\t\tif (matchedAsAddedNode) {\r\n\t\t\t\t\t\tmatchedAddedNodes.push(matchedAsAddedNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (matchedAddedNodes.length) {\r\n\t\t\t\tif (params.onceEach) {\r\n\t\t\t\t\tvar newlyadded = _difference(matchedAddedNodes, added);\r\n\t\t\t\t\tif (newlyadded.length) {\r\n\t\t\t\t\t\tadded.push(...newlyadded);\r\n\t\t\t\t\t\tcallback(newlyadded, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (params.once) {\r\n\t\t\t\t\t\tmo.disconnect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcallback(matchedAddedNodes, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!params.on || params.on === 'removed') {\r\n\t\t\tvar matchedRemovedNodes = [];\r\n\t\t\tels.forEach(el => {\r\n\t\t\t\tif (_isString(el)) {\r\n\t\t\t\t\tmatchedRemovedNodes = mutations\r\n\t\t\t\t\t\t.reduce((matches, mut) => matches.concat(search(el, _arrFrom(mut.removedNodes)) || []), matchedRemovedNodes);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar matchedAsRemovedNode = mutations\r\n\t\t\t\t\t\t.reduce((match, mut) => match || (search(el, _arrFrom(mut.removedNodes)) || [])[0], null);\r\n\t\t\t\t\tif (matchedAsRemovedNode) {\r\n\t\t\t\t\t\tmatchedRemovedNodes.push(matchedAsRemovedNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (matchedRemovedNodes.length) {\r\n\t\t\t\tif (params.onceEach) {\r\n\t\t\t\t\tvar newlyremoved = _difference(matchedRemovedNodes, removed);\r\n\t\t\t\t\tif (newlyremoved.length) {\r\n\t\t\t\t\t\tremoved.push(...newlyremoved);\r\n\t\t\t\t\t\tcallback(newlyremoved, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (params.once) {\r\n\t\t\t\t\t\tmo.disconnect();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcallback(matchedRemovedNodes, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tmo.observe(subject, {childList:true, subtree:true});\r\n\treturn mo;\r\n};\r\n\r\n/**\r\n * ---------------------\r\n * MUTATIONS\r\n * ---------------------\r\n */\r\n\r\n/**\r\n * Observes changes in attributes of the given element.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param Element\t\t\t\t\tel\r\n * @param function\t\t\t\t\tcallback\r\n * @param array\t\t\t\t\t\tfilter\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onAttrChange(window, el, callback, filter = []) {\r\n\tvar observer = new window.MutationObserver(callback);\r\n\tvar params = {attributes:true, attributeOldValue:true};\r\n\tif (filter) {\r\n\t\tparams.attributeFilter = filter;\r\n\t}\r\n\tobserver.observe(el, params);\r\n\treturn observer;\r\n};\r\n\r\n/**\r\n * Observes changes in tree/subtree of the given element.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param Element\t\t\t\t\tel\r\n * @param function\t\t\t\t\tcallback\r\n * @param bool\t\t\t\t\t\tsubtree\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onTreeChange(window, el, callback, subtree = false) {\r\n\tvar observer = new window.MutationObserver(callback);\r\n\tvar params = {childList:true, subtree};\r\n\tobserver.observe(el, params);\r\n\treturn observer;\r\n};\r\n\r\n/**\r\n * Observes mutations on the given element.\r\n *\r\n * @param window\t\t\t\t\twindow\r\n * @param Element\t\t\t\t\tel\r\n * @param function\t\t\t\t\tcallback\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return MutationObserver\r\n */\r\nexport function onMutation(window, el, callback, params) {\r\n\tvar observer = new window.MutationObserver(callback);\r\n\tobserver.observe(el, params);\r\n\treturn observer;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm) => prevTest || callback(itm), false);\r\n};\r\n","\r\n// ------------------\r\n// ready\r\n// ------------------\r\nexport default function(window, callback) {\r\n\tif (!window.__readyCallbacks) {\r\n\t\twindow.__readyCallbacks = [];\r\n\t}\r\n    if (window.document.readyState === 'complete') {\r\n\t\tcallback();\r\n    } else {\r\n\t\twindow.__readyCallbacks.push(callback);\r\n\t}\r\n    window.document.addEventListener('DOMContentLoaded', () => {\r\n\t\twindow.__readyCallbacks.forEach(callback => callback());\r\n\t\twindow.__readyCallbacks.splice(0);\r\n\t}, false);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = true) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '../js/isObject.js';\r\nimport _from from './from.js';\r\nimport _merge from './merge.js';\r\n\r\n/**\r\n * Return the input object with additional entries.\r\n *\r\n * @param object\t \t\t\tobj\r\n * @param string|array \t\t\tentriesOrKey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(obj, entriesOrKey, val = null) {\r\n\treturn _merge(obj, _isObject(entriesOrKey) ? entriesOrKey : _from(entriesOrKey, val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@onephrase/util/js/isNumeric.js';\r\nimport _with from '@onephrase/util/obj/with.js';\r\n\r\n/**\r\n * A CHTML's meta tag props reader.\r\n *  \r\n * @param window window\r\n * @param string prop\r\n * @param any\t set\r\n * \r\n * @return string|number|bool\r\n */\r\nexport default function meta(window, prop, set = null) {\r\n    if (!window.CHTML_META) {\r\n        if (window.CHTML_METATag = window.document.querySelector('meta[name=\"chtml\"]')) {\r\n            window.CHTML_META = (window.CHTML_METATag.getAttribute('content') || '').split(';').filter(v => v).reduce((META, directive) => {\r\n                var directiveSplit = directive.split('=').map(d => d.trim());\r\n                return _with(META, directiveSplit[0], directiveSplit[1] === 'true' \r\n                    ? true : (directiveSplit[1] === 'false' \r\n                        ? false : (_isNumeric(directiveSplit[1]) ? parseInt(directiveSplit[1]) : directiveSplit[1])\r\n                    )\r\n                );\r\n            }, {});\r\n        }\r\n    }\r\n    if (arguments.length === 3) {\r\n        if (set === false) {\r\n            delete window.CHTML_META[prop];\r\n        } else {\r\n            window.CHTML_META[prop] = set === true ? 'true' : set;\r\n        }\r\n        var content = Object.keys(window.CHTML_META).reduce((content, prop) => content + prop + '=' + window.CHTML_META[prop] + ';', '');\r\n        window.CHTML_METATag.setAttribute('content', content);\r\n        return true;\r\n    }\r\n    return window.CHTML_META ? window.CHTML_META[prop] : undefined;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nexport default function(val) {\r\n\treturn typeof val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\n\r\n/**\r\n * Returns an subject's firebase.\r\n *\r\n * @param array|object\tsubject\r\n * @param string      \tfirebaseKey\r\n * @param object      \tBase\r\n *\r\n * @return Firebase\r\n */\r\nexport default function(subject, firebaseKey, Base = null) {\r\n    if (!_isTypeObject(subject)) {\r\n        throw new Error('Object must be of type subject; \"' + _getType(subject) + '\" given!');\r\n    }\r\n    var firebase;\r\n    if (!(firebase = subject[firebaseKey]) && Base) {\r\n        try {\r\n            firebase = new Base(subject);\r\n            Object.defineProperty(subject, firebaseKey, {\r\n                get:() => firebase,\r\n                set:value => {\r\n                    if (value !== firebase) {\r\n                        throw new Error('Attempt to overwrite the \"' + firebaseKey + '\" special property!');\r\n                    }\r\n                },\r\n                enumerable:false,\r\n            });\r\n        } catch(e) {}\r\n    }\r\n    return firebase;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _intersect from '@onephrase/util/arr/intersect.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Firebase class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param object\tsubject\r\n\t * \r\n\t * @return void\r\n\t */\r\n\tconstructor(subject) {\r\n\t\tthis.subject = subject;\r\n\t\tthis.fireables = [];\r\n\t\tthis.currentlyFiring = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds an Fireable instance\r\n\t * with optional tags.\r\n\t *\r\n\t * @param Fireable\t\t\tfireable\r\n\t *\r\n\t * @return Fireable\r\n\t */\r\n\tadd(fireable) {\r\n\t\tthis.fireables.push(fireable);\r\n\t\treturn fireable;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes fireables by definition.\r\n\t *\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tforget(dfn) {\r\n\t\tthis.filter(dfn).forEach(fireable => {\r\n\t\t\tthis.fireables = this.fireables.filter(_fireable => _fireable !== fireable);\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Finds fireables by definition.\r\n\t *\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tfilter(dfn) {\r\n\t\treturn this.fireables.filter(fireable => {\r\n\t\t\tvar fireableFilter = _arrFrom(fireable.filter);\r\n\t\t\tvar fireableTags = _arrFrom((fireable.params || {}).tags);\r\n\t\t\t// -----------------------\r\n\t\t\tvar dfnFilter = _arrFrom(dfn.filter);\r\n\t\t\tvar dfnTags = _arrFrom((dfn.params || {}).tags);\r\n\t\t\t// -----------------------\r\n\t\t\treturn (!dfn.originalHandler || fireable.handler === dfn.originalHandler)\r\n\t\t\t\t&& (!dfnFilter.length || (dfnFilter.length === fireableFilter.length && _intersect(fireableFilter, dfnFilter).length === dfnFilter.length))\r\n\t\t\t\t&& (!dfnTags.length || (dfnTags.length === fireableTags.length && _intersect(fireableTags, dfnTags).length === dfnTags.length));\r\n\t\t});\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\nimport getObservers from './getObservers.js';\r\n\r\n/**\r\n * Removes observers from an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\toriginalHandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, filter, originalHandler = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Object must be of type subject; \"' + _getType(subject) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? originalHandler : {};\r\n\t\toriginalHandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (originalHandler && !_isFunction(originalHandler)) {\r\n\t\tthrow new Error('Handler must be a function; \"' + _getType(originalHandler) + '\" given!');\r\n\t}\r\n\tvar observers;\r\n\tif (observers = getObservers(subject, false)) {\r\n\t\treturn observers.forget({filter, originalHandler, params,});\r\n\t}\r\n}\r\n","\r\n/**\r\n * ---------------------------\r\n * The Fireable class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param object|array\t\tsubject\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tthis.handler = dfn.handler;\r\n\t\tthis.filter = dfn.filter;\r\n\t\tthis.params = dfn.params;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a \"disconnected\" flag on the Fireable.\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tdisconnect() {\r\n\t\tthis.disconnected = true;\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Fireable from '../Fireable.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Trap class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Fireable {\r\n\t\r\n\t/**\r\n\t * Calls the observer's handler function\r\n\t * on matching with the event's fields.\r\n\t *\r\n\t * @param Event\t\t\t \t\t\tevent\r\n\t * @param function\t\t\t\t\tnext\r\n\t * @param mixed\t\t\t\t\t \trecieved\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tfire(event, next, recieved) {\r\n\t\tif (this.disconnected || (this.filter && this.filter !== event.type)) {\r\n\t\t\treturn next(...Array.prototype.slice.call(arguments, 2));\r\n\t\t}\r\n\t\treturn this.handler(event, recieved, next);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@onephrase/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The QueryEvent class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\tsubject\r\n\t * @param object\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tif (!dfn.type) {\r\n\t\t\tthrow new Error('Action type must be given in definition!');\r\n\t\t}\r\n\t\t_each(dfn, (key, value) => {\r\n\t\t\tObject.defineProperty(this, key, {value, enumerable:true});\r\n\t\t});\r\n\t\tObject.seal(this);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Firebase from '../Firebase.js';\r\nimport Interceptor from './Interceptor.js';\r\nimport Action from './Action.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Reactive class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Firebase {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(dfn) {\r\n\t\treturn super.add(new Interceptor(this.subject, dfn));\r\n\t}\r\n\r\n\t/**\r\n\t * Fires all interceptors with the given action.\r\n\t *\r\n\t * @param Action\t\t\taction\r\n\t * @param function\t\t\tdefaultHandler\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tfire(action, defaultHandler = null) {\r\n\t\tif (!(action instanceof Action)) {\r\n\t\t\taction = new Action(this.subject, action);\r\n\t\t}\r\n\t\tif (this.currentlyFiring.filter(a => a.type === action.type && a.name === action.name).length) {\r\n\t\t\treturn defaultHandler ? defaultHandler() : undefined;\r\n\t\t}\r\n\t\tthis.currentlyFiring.push(action);\r\n\t\tconst next = (index, ..._args) => {\r\n\t\t\tvar interceptor = this.fireables[index];\r\n\t\t\tif (interceptor) {\r\n\t\t\t\treturn interceptor.fire(action, (...args) => {\r\n\t\t\t\t\treturn next(index + 1, ...args);\r\n\t\t\t\t}/*next*/, ..._args);\r\n\t\t\t}\r\n\t\t\treturn defaultHandler ? defaultHandler(..._args) : _args[0];\r\n\t\t};\r\n\t\tvar value = next(0);\r\n\t\tthis.currentlyFiring.pop();\r\n\t\treturn value;\r\n\t}\r\n};","/**\r\n * @imports\r\n */\r\nimport getFirebase from '../getFirebase.js';\r\nimport Interceptors from './Interceptors.js';\r\n\r\n/**\r\n * Returns Interceptors List handle.\r\n * \r\n * @param object    subject \r\n * @param bool      createIfNotExist \r\n * \r\n * @returns Observers\r\n */\r\nexport default function(subject, createIfNotExist = true) {\r\n    return getFirebase(subject, '.interceptors', createIfNotExist ? Interceptors : null);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs a \"getProps\" type of query operation on a subject.\r\n * Fires any observers for the specific type that may be bound to subject.\r\n *\r\n * @param bool\t\t\townKeys\r\n * @param array|object\tsubject\r\n *\r\n * @return array\r\n */\r\nexport default function(ownKeys, subject) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"keys\" traps, otherwise \"test\" the default way\r\n\tvar interceptors, defaultKeys = function(_keys) {\r\n\t\treturn arguments.length ? _keys : (\r\n\t\t\townKeys ? Object.getOwnPropertyNames(subject) : Object.keys(subject)\r\n\t\t);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\treturn interceptors.fire({type:ownKeys ? 'ownKeys' : 'keys'}, defaultKeys);\r\n\t}\r\n\treturn defaultKeys();\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _getProps from './_getProps.js';\r\n\r\n/**\r\n * Runs a \"keys\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n *\r\n * @return array\r\n */\r\nexport default function(subject) {\r\n\treturn _getProps(false/*ownKeys*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _before from '@onephrase/util/str/before.js';\r\nimport _after from '@onephrase/util/str/after.js';\r\nimport _keys from '../interceptor/keys.js';\r\nimport _get from '../interceptor/get.js';\r\nimport getObservers from './getObservers.js';\r\nimport link from './link.js';\r\n\r\n/**\r\n * Recursively \"connects\" an object's members to the object\r\n * for observer actions.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tpaths\r\n * @param bool\t\t\tsubtree\r\n *\r\n * @return void\r\n */\r\nexport default function build(subject, paths = null, subtree = false) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\tvar observers = getObservers(subject);\r\n\tif (!observers || observers.build) {\r\n\t\treturn;\r\n\t}\r\n\tobservers.build = true;\r\n\t// ---------------------------------\r\n\tpaths = _arrFrom(paths);\r\n\t// If any path starts with a dot, (a wild card path), all keys at this level is implied\r\n\tvar keys = !paths.length || paths.filter(path => path.startsWith('.')).length\r\n\t\t? _keys(subject).filter(k => k.indexOf('.') === -1) \r\n\t\t: paths.map(path => _before(path, '.'));\r\n\tvar subkeys = paths.length ? paths.map(path => _after(path, '.')) : null;\r\n\tkeys.forEach(key => {\r\n\t\tvar value = _get(subject, key);\r\n\t\tif (_isTypeObject(value)) {\r\n\t\t\tlink(subject, key, value);\r\n\t\t\tif ((subkeys || subtree)) {\r\n\t\t\t\tbuild(value, subkeys, subtree);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\nimport getObservers from './getObservers.js';\r\nimport build from './build.js';\r\n\r\n/**\r\n * Adds an observer to an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\thandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return Observer\r\n */\r\nexport default function(subject, filter, handler = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Object must be of type subject; \"' + _getType(handler) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? handler : {};\r\n\t\thandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (!_isFunction(handler)) {\r\n\t\tthrow new Error('Callback must be a function; \"' + _getType(handler) + '\" given!');\r\n\t}\r\n\tvar dfn = {filter, handler, params,};\r\n\tif (dfn.filter || dfn.params.subtree) {\r\n\t\tbuild(subject, dfn.filter, dfn.params.subtree);\r\n\t}\r\n\tvar observers = getObservers(subject);\r\n\tvar existing;\r\n\tif (dfn.params.unique && (existing = observers.filter({filter, params})).length) {\r\n\t\treturn existing[0];\r\n\t}\r\n\treturn observers.add(dfn);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@onephrase/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The QueryEvent class\r\n * ---------------------------\r\n */\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\tsubject\r\n\t * @param object\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tthis.subject = subject;\r\n\t\tif (!dfn.originalSubject) {\r\n\t\t\tthis.originalSubject = subject;\r\n\t\t}\r\n\t\tif (!('type' in dfn)) {\r\n\t\t\tthrow new Error('Delta type must be given in definition!');\r\n\t\t}\r\n\t\tif (!('name' in dfn)) {\r\n\t\t\tthrow new Error('Property name must be given in definition!');\r\n\t\t}\r\n\t\t_each(dfn, (key, value) => {\r\n\t\t\tObject.defineProperty(this, key, {value, enumerable:true});\r\n\t\t});\r\n\t\tif (!this.path) {\r\n\t\t\tObject.defineProperty(this, 'path', {value:dfn.name, enumerable:true});\r\n\t\t}\r\n\t\tObject.seal(this);\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@onephrase/util/obj/each.js';\r\nimport getObservers from './getObservers.js';\r\nimport observe from './observe.js';\r\nimport Delta from './Delta.js';\r\n\r\n/**\r\n * Bubble helper\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tfield\r\n * @param array|object\tvalue\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, field, value) {\r\n\tvar observers;\r\n\tobserve(value, changes => {\r\n\t\tif (observers = getObservers(subject, false)) {\r\n\t\t\tvar _changes = changes.map(delta => {\r\n\t\t\t\tvar dfn = {}; _each(delta, (key, value) => {\r\n\t\t\t\t\tif (key !== 'subject' && key !== 'name' && key !== 'path') {\r\n\t\t\t\t\t\tdfn[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdfn.name = field;\r\n\t\t\t\tdfn.path = field + '.' + delta.path;\r\n\t\t\t\tdfn.originalSubject = delta.originalSubject;\r\n\t\t\t\treturn new Delta(subject, dfn);\r\n\t\t\t});\r\n\t\t\treturn observers.fire(_changes);\r\n\t\t}\r\n\t}, {subtree:true, unique:true, tags:[linkTag, field, subject]});\r\n};\r\n\r\n/**\r\n * @var object\r\n */\r\nexport const linkTag = {};","\r\n/**\r\n * @imports\r\n */\r\nimport unobserve from './unobserve.js';\r\nimport { linkTag } from './link.js';\r\n\r\n/**\r\n * Unbubble helper\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tfield\r\n * @param array|object\tobject\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, field, value) {\r\n\tunobserve(value, null, null, {tags:[linkTag, field, subject]});\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@onephrase/util/obj/copy.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport getObservers from './getObservers.js';\r\nimport unlink from './unlink.js';\r\nimport link from './link.js';\r\n\r\n/**\r\n * Executes a callback function on a subject in \"closure\" mode.\r\n * Fires any observers that may be bound to subject on recorded changes.\r\n *\r\n * @param function\t\tcallback\r\n * @param array\t\t\t...subjects\r\n *\r\n * @return array|Event\r\n */\r\nexport default function(callback, ...subjects) {\r\n\tvar context = subjects.map(subject => {\r\n\t\tif (!_isTypeObject(subject)) {\r\n\t\t\tthrow new Error('Target must be of type object!');\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tsubject,\r\n\t\t\tsubjectCopy: _isArray(subject) ? subject.slice(0) : _copy(subject),\r\n\t\t};\r\n\t});\r\n\t// ---------------------------------\r\n\tvar result = callback(...subjects);\r\n\t// ---------------------------------\r\n\tcontext.map(cntxt => {\r\n\t\tvar initialKeys = Object.keys(cntxt.subjectCopy);\r\n\t\tvar currentKeys = Object.keys(cntxt.subject);\r\n\t\tvar related = [];\r\n\t\tvar changes = _unique(initialKeys.concat(currentKeys)).map(key => {\r\n\t\t\tif (_isArray(cntxt.subject) && (key === 'length' || key === '.observer')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (cntxt.subjectCopy[key] !== cntxt.subject[key]) {\r\n\t\t\t\trelated.push(key);\r\n\t\t\t\t// ---------------------------------\r\n\t\t\t\t// The event object\r\n\t\t\t\tvar e = {\r\n\t\t\t\t\tname:key,\r\n\t\t\t\t\trelated,\r\n\t\t\t\t\tbuffered: true,\r\n\t\t\t\t};\r\n\t\t\t\tif (currentKeys.includes(key)) {\r\n\t\t\t\t\te.type = 'set';\r\n\t\t\t\t\te.value = cntxt.subject[key];\r\n\t\t\t\t\tif (initialKeys.includes(key)) {\r\n\t\t\t\t\t\te.isUpdate = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\te.type = 'del';\r\n\t\t\t\t}\r\n\t\t\t\tif (initialKeys.includes(key)) {\r\n\t\t\t\t\te.oldValue = cntxt.subjectCopy[key];\r\n\t\t\t\t}\r\n\t\t\t\t// ---------------------------------\r\n\t\t\t\t// Unobserve outgoing value for bubbling\r\n\t\t\t\tif (_isTypeObject(cntxt.subjectCopy[key])) {\r\n\t\t\t\t\tunlink(cntxt.subject, key, cntxt.subjectCopy[key]);\r\n\t\t\t\t}\r\n\t\t\t\t// Observe incoming value for bubbling\r\n\t\t\t\tif (_isTypeObject(cntxt.subject[key])) {\r\n\t\t\t\t\tlink(cntxt.subject, key, cntxt.subject[key]);\r\n\t\t\t\t}\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t}).filter(c => c);\r\n\t\t// ---------------------------------\r\n\t\tvar observers;\r\n\t\tif (changes.length && (observers = getObservers(cntxt.subject, false))) {\r\n\t\t\treturn observers.fire(changes);\r\n\t\t}\r\n\t});\r\n\treturn result;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _objFrom from '@onephrase/util/obj/from.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _isNumeric from '@onephrase/util/js/isNumeric.js';\r\nimport _isClass from '@onephrase/util/js/isClass.js';\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport closure from '../observer/closure.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs a \"get\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeys\r\n * @param bool\t\t\tautoClosures\r\n *\r\n * @return mixed\r\n */\r\nexport default function(subject, keys, autoClosures = false) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"get\" traps, otherwise \"get\" the default way\r\n\tvar value, interceptors, defaultGet = function(_value) {\r\n\t\treturn arguments.length ? _value : (_isArray(keys) ? _objFrom(keys, subject) : subject[keys]);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject)) {\r\n\t\tvalue = interceptors.fire({type:'get', name:keys}, defaultGet);\r\n\t} else {\r\n\t\tvalue = defaultGet();\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute array methods in \"mutation\" mode\r\n\tif (autoClosures && _isArray(subject) && !_isNumeric(keys) && _isFunction(value) && !_isClass(value)) {\r\n\t\treturn function observerArrayMethodWrapper(...args) {\r\n\t\t\treturn closure(() => {\r\n\t\t\t\treturn value.apply(subject, args);\r\n\t\t\t}, subject);\r\n\t\t};\r\n\t}\r\n\treturn value;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _crossJoin from '@onephrase/util/arr/crossJoin.js';\r\nimport _pushUnique from '@onephrase/util/arr/pushUnique.js';\r\nimport _any from '@onephrase/util/arr/any.js';\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _strAfter from '@onephrase/util/str/after.js';\r\nimport _isString from '@onephrase/util/js/isString.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _commonsGet from '@onephrase/util/obj/get.js';\r\nimport _get from '../interceptor/get.js';\r\nimport Fireable from '../Fireable.js';\r\nimport Delta from './Delta.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Observer class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Fireable {\r\n\t\r\n\t/**\r\n\t * Initializes the instance.\r\n\t *\r\n\t * @param array|object\t\tsubject\r\n\t * @param object\t\t\tdfn\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tconstructor(subject, dfn) {\r\n\t\tsuper(subject, dfn);\r\n\t\t// -----------------------\r\n\t\tthis.filterArray = _arrFrom(this.filter);\r\n\t\tthis.isDynamicFilter = this.filterArray.filter(\r\n\t\t\tfilter => _isString(filter) && (filter.indexOf('..') > -1 || filter.startsWith('.') || filter.endsWith('.'))\r\n\t\t).length;\r\n\t\tif (this.isDynamicFilter && this.filterArray.length > 1) {\r\n\t\t\tthrow new Error('Only one \"Dynamic Filter\" must be observed at a time! \"' + this.filterArray.join(', ') + '\" have been bound together.');\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Calls the observer's handler function\r\n\t * on matching with the event's filter.\r\n\t *\r\n\t * @param array\t\t\t \tchanges\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tfire(changes) {\r\n\t\tif (this.disconnected || (this.params.type && !_any(changes, delta => this.params.type === delta.type))) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.filterArray.length) {\r\n\t\t\tvar dynamicFieldOutcomes = [];\r\n\t\t\tvar matches = this.filterArray.filter((observedField, i) => {\r\n\t\t\t\tobservedField = _isString(observedField) \r\n\t\t\t\t\t? observedField.replace(/`/g, '')\r\n\t\t\t\t\t: observedField;\r\n\t\t\t\tdynamicFieldOutcomes[i] = [];\r\n\t\t\t\t// one observedField can turn out to be two if dynamic\r\n\t\t\t\t// and evt.originatingFields is multiple\r\n\t\t\t\treturn changes.filter(delta => {\r\n\t\t\t\t\tvar deltaNameSplit = delta.path.split('.');\r\n\t\t\t\t\tvar observedDynamicFieldOutcome = this.isDynamicFilter \r\n\t\t\t\t\t\t? observedField.split('.').map((seg, k) => seg || deltaNameSplit[k] || '').join('.')\r\n\t\t\t\t\t\t: observedField;\r\n\t\t\t\t\t_pushUnique(dynamicFieldOutcomes[i], observedDynamicFieldOutcome);\r\n\t\t\t\t\treturn (observedDynamicFieldOutcome === delta.name\r\n\t\t\t\t\t\t|| (this.params.suptree !== false && (observedDynamicFieldOutcome + '.').startsWith(delta.path + '.'))\r\n\t\t\t\t\t\t|| (this.params.subtree && (delta.path + '.').startsWith(observedDynamicFieldOutcome + '.'))\r\n\t\t\t\t\t) && (!this.isDynamicFilter || !observedDynamicFieldOutcome.split('.').filter(seg => !seg).length);\r\n\t\t\t\t}).length;\r\n\t\t\t}).length;\r\n\t\t\tif (matches) {\r\n\t\t\t\t_crossJoin(dynamicFieldOutcomes).forEach(fields => {\r\n\t\t\t\t\tvar _changes = this.formatChanges(fields, changes);\r\n\t\t\t\t\tthis.handler(_isArray(this.filter) ? _changes : _changes[0]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (!this.filter/** if this.filterArray is empty because this.filter is null */\r\n\t\t&& (this.params.subtree || changes.filter(delta => delta.path === delta.name).length === changes.length)) {\r\n\t\t\tthis.handler(changes);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Validates a proposed fire operation.\r\n\t *\r\n\t * @param array\t\t \tfields\r\n\t * @param array\t\t\tchanges\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tformatChanges(fields, changes) {\r\n\t\treturn this.params.data === false ? [] : fields.map(field => {\r\n\t\t\t// --------------------------\r\n\t\t\tvar fieldDelta = changes.reduce((_delta, delta) => {\r\n\t\t\t\tif (_delta) {\r\n\t\t\t\t\treturn _delta;\r\n\t\t\t\t}\r\n\t\t\t\tif (field + '' === delta.path + '') {\r\n\t\t\t\t\treturn delta;\r\n\t\t\t\t}\r\n\t\t\t\tif ((field + '.').startsWith(delta.path + '.')) {\r\n\t\t\t\t\tvar _field = _isString(field) ? _strAfter(field, delta.path + '.').split('.') : field;\r\n\t\t\t\t\tvar _delta = new Delta(delta.subject, {\r\n\t\t\t\t\t\ttype: delta.type,\r\n\t\t\t\t\t\tname: field,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (delta.type === 'del' || delta.isUpdate) {\r\n\t\t\t\t\t\t_delta.oldValue = _commonsGet(delta.oldValue, _field, {get:_get});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (delta.type !== 'del') {\r\n\t\t\t\t\t\t_delta.value = _commonsGet(delta.value, _field, {get:_get});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn _delta;\r\n\t\t\t\t}\r\n\t\t\t}, null);\r\n\t\t\t// --------------------------\r\n\t\t\tif (!fieldDelta) {\r\n\t\t\t\tfieldDelta = new Delta(this.subject, {\r\n\t\t\t\t\ttype: 'get',\r\n\t\t\t\t\tname: field,\r\n\t\t\t\t\tvalue: _commonsGet(this.subject, _isString(field) ? field.split('.') : field, {get:_get}),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// --------------------------\r\n\t\t\treturn fieldDelta;\r\n\t\t});\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from './from.js';\r\n\r\n/**\r\n * Accepts a list of column and joins them to a table.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.reduce((currTable, column) => {\r\n\t\tvar newTable = [];\r\n\t\tcurrTable.forEach(row => {\r\n\t\t\t_arrFrom(column).forEach(column => {\r\n\t\t\t\tvar _row = row.slice();\r\n\t\t\t\t_row.push(column);\r\n\t\t\t\tnewTable.push(_row);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn newTable;\r\n\t}, [[]]);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _remove from '@onephrase/util/arr/remove.js';\r\nimport Firebase from '../Firebase.js';\r\nimport Observer from './Observer.js';\r\nimport Delta from './Delta.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The Reactive class\r\n * ---------------------------\r\n */\r\n\r\nexport default class extends Firebase {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tadd(dfn) {\r\n\t\treturn super.add(new Observer(this.subject, dfn));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fires all observers with the given evt (change).\r\n\t *\r\n\t * @param array|Delta\t\tchanges\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tfire(changes) {\r\n\t\t// We accept multiple changes\r\n\t\tchanges = _arrFrom(changes, false).map(delta => !(delta instanceof Delta) ? new Delta(this.subject, delta) : delta);\r\n\t\tif (this.currentlyFiring.filter(d => changes.filter(delta => d.type === delta.type && d.name === delta.name).length).length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.currentlyFiring.push(...changes);\r\n\t\tthis.fireables.forEach(observer => {\r\n\t\t\tif (changes.propagationStopped) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobserver.fire(changes);\r\n\t\t});\r\n\t\tchanges.forEach(delta => _remove(this.currentlyFiring, delta));\r\n\t\treturn true;\r\n\t}\r\n};","/**\r\n * @imports\r\n */\r\nimport getFirebase from '../getFirebase.js';\r\nimport Observers from './Observers.js';\r\n\r\n/**\r\n * Returns Observers List handle.\r\n * \r\n * @param object    subject \r\n * @param bool      createIfNotExist \r\n * \r\n * @returns Observers\r\n */\r\nexport default function(subject, createIfNotExist = true) {\r\n    return getFirebase(subject, '.observers', createIfNotExist ? Observers : null);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Runs an \"in\" query operation on a subject.\r\n * Fires any such query observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string\t\tkey\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, key) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\t// ---------------------------------\r\n\t// Execute any \"has\" traps, otherwise \"test\" the default way\r\n\tvar interceptors, defaultHas = function(_state) {\r\n\t\treturn arguments.length ? _state : (key in subject);\r\n\t};\r\n\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\treturn interceptors.fire({type:'has', name:key}, defaultHas);\r\n\t}\r\n\treturn defaultHas();\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _isString from '@onephrase/util/js/isString.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _isNumber from '@onephrase/util/js/isNumber.js';\r\nimport _isObject from '@onephrase/util/js/isObject.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport getObservers from '../observer/getObservers.js';\r\nimport build from '../observer/build.js';\r\nimport unlink from '../observer/unlink.js';\r\nimport link from '../observer/link.js';\r\nimport getInterceptors from './getInterceptors.js';\r\nimport _has from './has.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Executes a \"_setProp\" type of operation on a subject.\r\n * Fires any observers for the specific type that may be bound to subject.\r\n *\r\n * @param bool\t\t\tdefine\r\n * @param array|object\tsubject\r\n * @param string|array\tkeysOrPayload\r\n * @param mixed\t\t\tvalue\r\n * @param any\t\t\tdetail\r\n *\r\n * @return bool\r\n */\r\nexport default function(define, subject, keysOrPayload, value = null, detail = null) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\tif (_isObject(keysOrPayload)) {\r\n\t\tdetail = value;\r\n\t\tvalue = null;\r\n\t}\r\n\t// ----------\r\n\tvar interceptors = getInterceptors(subject, false),\r\n\t\tobservers = getObservers(subject, false);\r\n\t// ----------\r\n\tconst handleSet = (key, value, related, detail) => {\r\n\t\tif (_isString(key) && key.indexOf('.') !== -1) {\r\n\t\t\tthrow new Error('Property names with a dot are not supported!');\r\n\t\t}\r\n\t\tvar type = 'set', descriptor;\r\n\t\tif (define) {\r\n\t\t\ttype = 'def';\r\n\t\t\tdescriptor = value || {};\r\n\t\t\tvalue = descriptor.value;\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// The event object\r\n\t\tvar e = {\r\n\t\t\tname:key,\r\n\t\t\ttype,\r\n\t\t\tvalue,\r\n\t\t\trelated,\r\n\t\t\tdetail,\r\n\t\t};\r\n\t\tif (_has(subject, key)) {\r\n\t\t\te.isUpdate = true;\r\n\t\t\te.oldValue = _get(subject, key);\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// The set operation\r\n\t\tvar defaultSet = function(_success) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\tif (descriptor) {\r\n\t\t\t\t\tObject.defineProperty(subject, key, descriptor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsubject[key] = value;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn _success;\r\n\t\t};\r\n\t\tif (interceptors) {\r\n\t\t\tvar eventObject = descriptor \r\n\t\t\t\t? {type:'def', name:key, descriptor, related, detail} \r\n\t\t\t\t: {type:'set', name:key, value, related, detail};\r\n\t\t\te.success = interceptors.fire(eventObject, defaultSet);\r\n\t\t} else {\r\n\t\t\te.success = defaultSet();\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\tif (e.success && e.value !== e.oldValue) {\r\n\t\t\t// Unobserve outgoing value for bubbling\r\n\t\t\tif (_isTypeObject(e.oldValue)) {\r\n\t\t\t\tunlink(subject, key, e.oldValue);\r\n\t\t\t}\r\n\t\t\t// Observe incoming value for bubbling\r\n\t\t\tif (_isTypeObject(e.value)) {\r\n\t\t\t\tlink(subject, key, e.value);\r\n\t\t\t\tif (observers && observers.build) {\r\n\t\t\t\t\tbuild(e.value, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn e;\r\n\t};\r\n\t// ---------------------------------\r\n\tvar keys, events = [];\r\n\tif (_isArray(keysOrPayload) || ((_isString(keysOrPayload) || _isNumber(keysOrPayload)) && (keys = _arrFrom(keysOrPayload)))) {\r\n\t\tevents = keys.map(key => handleSet(key, value, keys, detail));\r\n\t} else if (_isObject(keysOrPayload) && (keys = Object.keys(keysOrPayload))) {\r\n\t\tevents = keys.map(key => handleSet(key, keysOrPayload[key], keys, detail));\r\n\t}\r\n\tvar successfulEvents = events.filter(e => e.success);\r\n\t// ---------------------------------\r\n\tif (observers) {\r\n\t\tobservers.fire(successfulEvents);\r\n\t}\r\n\treturn successfulEvents.length > 0;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _setProp from './_setProp.js';\r\n\r\n/**\r\n * Executes a \"set\" operation on a subject.\r\n * Fires any observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeysOrPayload\r\n * @param mixed\t\t\tvalue\r\n * @param any\t\t\tdetail\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, keysOrPayload, value = null, detail = null) {\r\n\treturn _setProp(false/*define*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _isString from '@onephrase/util/js/isString.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport getObservers from '../observer/getObservers.js';\r\nimport unlink from '../observer/unlink.js';\r\nimport getInterceptors from './getInterceptors.js';\r\nimport _has from './has.js';\r\nimport _get from './get.js';\r\n\r\n/**\r\n * Executes a \"delete\" operation on a subject.\r\n * Fires any observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeys\r\n * @param any\t\t\tdetail\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, keys, detail = null) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Target must be of type object!');\r\n\t}\r\n\tvar keys = _arrFrom(keys);\r\n\tvar events = keys.map(key => {\r\n\t\tif (_isString(key) && key.indexOf('.') !== -1) {\r\n\t\t\tthrow new Error('Property names with a dot are not supported!');\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// The event object\r\n\t\tvar e = {\r\n\t\t\tname:key,\r\n\t\t\ttype:'del',\r\n\t\t\trelated:keys,\r\n\t\t\tdetail,\r\n\t\t};\r\n\t\tif (_has(subject, key)) {\r\n\t\t\te.oldValue = _get(subject, key);\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// Execute any \"del\" traps, otherwise \"del\" the default way\r\n\t\tvar interceptors, defaultDel = function(_success) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\tdelete subject[key];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn _success;\r\n\t\t};\r\n\t\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\t\te.success = interceptors.fire({type:'del', name:key, related:keys}, defaultDel);\r\n\t\t} else {\r\n\t\t\te.success = defaultDel();\r\n\t\t}\r\n\t\t// ---------------------------------\r\n\t\t// Unobserve outgoing value for bubbling\r\n\t\tif (e.success && _isTypeObject(e.oldValue)) {\r\n\t\t\tunlink(subject, key, e.oldValue);\r\n\t\t}\r\n\t\treturn e;\r\n\t});\r\n\tvar successfulEvents = events.filter(e => e.success);\r\n\t// ---------------------------------\r\n\tvar observers;\r\n\tif (observers = getObservers(subject, false)) {\r\n\t\tobservers.fire(successfulEvents);\r\n\t}\r\n\treturn successfulEvents.length > 0;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _setProp from './_setProp.js';\r\n\r\n/**\r\n * Executes a \"set\" operation on a subject.\r\n * Fires any observers that may be bound to subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeysOrPayload\r\n * @param mixed\t\t\tvalue\r\n * @param any\t\t\tdetail\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, keysOrPayload, value = null, detail = null) {\r\n\treturn _setProp(true/*define*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _getProps from './_getProps.js';\r\n\r\n/**\r\n * Runs a \"ownKeys\" query operation on a target.\r\n * Fires any such query observers that may be bound to target.\r\n *\r\n * @param array|object\tsubject\r\n *\r\n * @return array\r\n */\r\nexport default function(subject) {\r\n\treturn _getProps(true/*ownKeys*/, ...arguments);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\n// Interceptor\r\nimport set from './interceptor/set.js';\r\nimport get from './interceptor/get.js';\r\nimport has from './interceptor/has.js';\r\nimport deleteProperty from './interceptor/deleteProperty.js';\r\nimport defineProperty from './interceptor/defineProperty.js';\r\nimport keys from './interceptor/keys.js';\r\nimport ownKeys from './interceptor/ownKeys.js';\r\nimport intercept from './interceptor/intercept.js';\r\nimport unintercept from './interceptor/unintercept.js';\r\nimport proxy from './interceptor/proxy.js';\r\n// Observer\r\nimport observe from './observer/observe.js';\r\nimport unobserve from './observer/unobserve.js';\r\nimport closure from './observer/closure.js';\r\nimport init from './observer/init.js';\r\nimport build from './observer/build.js';\r\nimport link from './observer/link.js';\r\nimport unlink from './observer/unlink.js';\r\n\r\n// Now we'll mimick standard Trap properties\r\n// so that can be used as standard Trap out of the box.\r\nconst del = deleteProperty;\r\nconst def = defineProperty;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default {\r\n\t// Interceptor\r\n\tset,\r\n\tget,\r\n\thas,\r\n\tdeleteProperty,\r\n\tdel,\r\n\tdefineProperty,\r\n\tdef,\r\n\tkeys,\r\n\townKeys,\r\n\tintercept,\r\n\tunintercept,\r\n\tproxy,\r\n\t// Observer\r\n\tobserve,\r\n\tunobserve,\r\n\tclosure,\r\n\tinit,\r\n\tbuild,\r\n\tlink,\r\n\tunlink,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Adds a trap to an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\thandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return Interceptor\r\n */\r\nexport default function(subject, filter, handler, params = {}) {\r\n\tif (!_isTypeObject(subject)) {\r\n\t\tthrow new Error('Object must be of type subject; \"' + _getType(handler) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? handler : {};\r\n\t\thandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (!_isFunction(handler)) {\r\n\t\tthrow new Error('Callback must be a function; \"' + _getType(handler) + '\" given!');\r\n\t}\r\n\tvar interceptors = getInterceptors(subject);\r\n\tvar dfn = {filter, handler, params,}, existing;\r\n\tif (dfn.params.unique && (existing = interceptors.filter(dfn)).length) {\r\n\t\treturn existing[0];\r\n\t}\r\n\treturn interceptors.add(dfn);\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\nimport getInterceptors from './getInterceptors.js';\r\n\r\n/**\r\n * Removes traps from an subject's firebase.\r\n *\r\n * @param array|object\t\t\t\tsubject\r\n * @param string|array|function\t\tfilter\r\n * @param function\t\t\t\t\toriginalHandler\r\n * @param object\t\t\t\t\tparams\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, filter, originalHandler = null, params = {}) {\r\n\tif (!subject || !_isTypeObject(subject)) {\r\n\t\tthrow new Error('Object must be of type subject; \"' + _getType(subject) + '\" given!');\r\n\t}\r\n\tif (_isFunction(filter)) {\r\n\t\tparams = arguments.length > 2 ? originalHandler : {};\r\n\t\toriginalHandler = filter;\r\n\t\tfilter = null;\r\n\t}\r\n\tif (originalHandler && !_isFunction(originalHandler)) {\r\n\t\tthrow new Error('Handler must be a function; \"' + _getType(originalHandler) + '\" given!');\r\n\t}\r\n\tvar interceptors;\r\n\tif (interceptors = getInterceptors(subject, false)) {\r\n\t\treturn interceptors.forget({filter, originalHandler, params,});\r\n\t}\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isClass from '@onephrase/util/js/isClass.js';\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _getType from '@onephrase/util/js/getType.js';\r\nimport _get from './get.js';\r\nimport _set from './set.js';\r\nimport _has from './has.js';\r\nimport _del from './deleteProperty.js';\r\nimport _def from './defineProperty.js';\r\nimport _ownKeys from './ownKeys.js';\r\n\r\n/**\r\n * Returns an object as a proxy and binds all instance methods\r\n * to the proxy instead of the object itself.\r\n *\r\n * @param object|array\t\tsubject\r\n *\r\n * @return Proxy\r\n */\r\nexport default function(subject) {\r\n\tif (!_isTypeObject(subject)) {\r\n\t\tthrow new Error('Object must be of type subject; \"' + _getType(subject) + '\" given!');\r\n    }\r\n    var proxy = new Proxy(subject, {\r\n        get: (subject, key) => {\r\n            var val = _get(subject, key);\r\n            if (_isFunction(val) && !_isClass(val)) {\r\n                return val.bind(proxy);\r\n            }\r\n            return val;\r\n        },\r\n        set:  _set,\r\n        has: _has,\r\n        deleteProperty: _del,\r\n        defineProperty: _def,\r\n        ownKeys: _ownKeys,\r\n    });\r\n\treturn proxy;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _get from '../interceptor/get.js';\r\nimport _set from '../interceptor/set.js';\r\n\r\n/**\r\n * Initializes \"Reflxive getter/setter\" traps on the subject.\r\n *\r\n * @param array|object\tsubject\r\n * @param string|array\tkeys\r\n *\r\n * @return void\r\n */\r\nexport default function(subject, keys) {\r\n\t_arrFrom(keys).forEach(key => {\r\n\t\tvar value = subject[key], onGetFire, onSetFire;\r\n\t\tvar currentDescriptor = Object.getOwnPropertyDescriptor(subject, key)\r\n\t\t|| {enumerable: key in subject ? false/*existing but hidden*/ : true};\r\n\t\tif ('value' in currentDescriptor) {\r\n\t\t\tdelete currentDescriptor.value;\r\n\t\t}\r\n\t\tif ('writable' in currentDescriptor) {\r\n\t\t\tdelete currentDescriptor.writable;\r\n\t\t}\r\n\t\tcurrentDescriptor.get = () => {\r\n\t\t\tif (onGetFire) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t\tonGetFire = true;\r\n\t\t\tvar _value = _get(subject, key);\r\n\t\t\tonGetFire = false;\r\n\t\t\treturn _value;\r\n\t\t};\r\n\t\tcurrentDescriptor.set = newValue => {\r\n\t\t\tif (onSetFire) {\r\n\t\t\t\tvalue = newValue;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tonSetFire = true;\r\n\t\t\tvar rspns = _set(subject, key, newValue);\r\n\t\t\tonSetFire = false;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tObject.defineProperty(subject, key, currentDescriptor);\r\n\t});\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@onephrase/util/js/isObject.js';\r\nimport _even from '@onephrase/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, trap = {})\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConditional'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@onephrase/util/obj/merge.js';\r\nimport _isEmpty from '@onephrase/util/js/isEmpty.js';\r\nimport _remove from '@onephrase/util/arr/remove.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _instanceof from '@onephrase/util/js/instanceof.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Jsen {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !Parsers && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar parsers = Object.values(Parsers || this.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, parsers[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!Parsers && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = parsers[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Parser, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = [], deepVars = [];\r\n\t\tvar parsed = Parser.parse(expr, (_expr, _Parsers, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _Parsers, _params ? _merge(params, _params) : params);\r\n\t\t\tif (_params.lodge !== false) {\r\n\t\t\t\tif (_instanceof(subStmt, ReferenceInterface) || _instanceof(subStmt, CallInterface)) {\r\n\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t\tif (subStmt) {\r\n\t\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\t\tsubStmt.meta.deepVars.forEach(_var => deepVars.push(_var));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (!parsed.meta) {\r\n\t\t\t\tparsed.meta = {};\r\n\t\t\t}\r\n\t\t\tparsed.meta.vars = vars;\r\n\t\t\tparsed.meta.deepVars = deepVars;\r\n\t\t\tif (_instanceof(parsed, CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context) {\r\n\t\t\t\t\tparsed.meta.vars.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if (_instanceof(parsed, FuncInterface)) {\r\n\t\t\t\tparsed.meta.vars.splice(0);\r\n\t\t\t\tparsed.meta.deepVars.splice(0);\r\n\t\t\t} else if (_instanceof(parsed, IfInterface)) {\r\n\t\t\t\tif (parsed.onTrue) {\r\n\t\t\t\t\tparsed.onTrue.meta.vars.concat(parsed.onTrue.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed.onFalse) {\r\n\t\t\t\t\tparsed.onFalse.meta.vars.concat(parsed.onFalse.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@onephrase/util/js/isTypeObject.js';\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport _isClass from '@onephrase/util/js/isClass.js';\r\nimport _isString from '@onephrase/util/js/isString.js';\r\nimport _isNull from '@onephrase/util/js/isNull.js';\r\nimport _isNumber from '@onephrase/util/js/isNumber.js';\r\nimport _after from '@onephrase/util/str/after.js';\r\nimport _before from '@onephrase/util/str/before.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => _after(delta.path, '.'))\r\n\t\t\t\t.filter(path => path);\r\n\t\t\tvar props = references.map(path => _before(path, '.'));\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props;\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@onephrase/util/arr/first.js';\r\nimport _flatten from '@onephrase/util/arr/flatten.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(Assertion.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(Assertion.negation.length))],\r\n\t\t\t\tAssertion.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@onephrase/util/arr/last.js';\r\nimport _before from '@onephrase/util/str/before.js';\r\nimport _after from '@onephrase/util/str/after.js';\r\nimport _isNumber from '@onephrase/util/js/isNumber.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport _copy from '@onephrase/util/obj/copy.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport _before from '@onephrase/util/str/before.js';\r\nimport _flatten from '@onephrase/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\t// Current!\r\n\t\tparams = params ? _copy(params) : {};\r\n\t\tcontext = Scope.create(context);\r\n\t\t// Stringifies JSEN vars\r\n\t\tvar stringifyEach = list => _unique(list.map(expr => _before(_before(expr.toString(), '['), '(')));\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar vars = stringifyEach(stmt.meta.vars);\r\n\t\t\tvar deepVars = stringifyEach(stmt.meta.deepVars || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => vars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepVars.filter(v => (v + '.').startsWith(f + '.')).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = _copy(params);\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tif (stmt instanceof ReturnInterface) {\r\n\t\t\t\t\treturn callEval(stmt, context, _params);\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\tif (params.references && (stmt instanceof AssignmentInterface)) {\r\n\t\t\t\t\tparams.references = params.references.concat(stringifyEach([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@onephrase/util/arr/flatten.js';\r\nimport _first from '@onephrase/util/arr/first.js';\r\nimport _last from '@onephrase/util/arr/last.js';\r\nimport _difference from '@onephrase/util/arr/difference.js';\r\nimport _isArray from '@onephrase/util/js/isArray.js';\r\nimport _isObject from '@onephrase/util/js/isObject.js';\r\nimport _isString from '@onephrase/util/js/isString.js';\r\nimport _each from '@onephrase/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@onephrase/util/arr/last.js';\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@onephrase/util/obj/copy.js';\r\nimport _each from '@onephrase/util/obj/each.js';\r\nimport _flatten from '@onephrase/util/arr/flatten.js';\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            }\r\n\t\t\treturn new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@onephrase/util/js/isNumeric.js';\r\nimport _flatten from '@onephrase/util/arr/flatten.js';\r\nimport _intersect from '@onephrase/util/arr/intersect.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@onephrase/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport _first from '@onephrase/util/arr/first.js';\r\nimport _last from '@onephrase/util/arr/last.js';\r\nimport _each from '@onephrase/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@onephrase/util/arr/last.js';\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@onephrase/util/js/isUndefined.js';\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/util/str/wrapped.js';\r\nimport _unwrap from '@onephrase/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@onephrase/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Scope from './Scope.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Block from './Expr/Block.js';\r\nimport BlockInterface from './Expr/BlockInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport If from './Expr/If.js';\r\nimport IfInterface from './Expr/IfInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Presence from './Expr/Presence.js';\r\nimport PresenceInterface from './Expr/PresenceInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\nimport Void from './Expr/Void.js';\r\nimport VoidInterface from './Expr/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tScope\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { Scope } from '@web-native-js/jsen';\r\n\r\n/**\r\n * ---------------------------\r\n * The Contexts class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default Scope;\r\n","\r\n/**\r\n * @ENV\r\n */\r\nexport default {\r\n    scriptElement: 'script[type=\"scoped\"]',\r\n    globalBindingMethod: 'bind',\r\n    localBindingMethod: 'bind',\r\n    inertContexts: [],\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Observer from '@web-native-js/observer';\r\nimport JSEN, { Block } from '@web-native-js/jsen';\r\nimport ready from '@onephrase/util/dom/ready.js';\r\nimport { onPresent } from '@onephrase/util/dom/mutation.js';\r\nimport _merge from '@onephrase/util/obj/merge.js';\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _remove from '@onephrase/util/arr/remove.js';\r\nimport _any from '@onephrase/util/arr/any.js';\r\nimport _isFunction from '@onephrase/util/js/isFunction.js';\r\nimport meta from '../meta.js';\r\nimport Scope from './Scope.js';\r\nimport params from './params.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The ScopedJS class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ScopedJS {\r\n\r\n    /**\r\n     * @parse\r\n     */\r\n    static parse(script, params = {}) {\r\n        var AST;\r\n        if (!(AST = JSEN.parse(script, [Block], _merge({assert:false}, params)))) {\r\n            AST = new Block([JSEN.parse(script, null, params)]);\r\n        }\r\n        return AST;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(window, trap = Observer, _params = {}) {\r\n\r\n        const _this = this;\r\n        _this.params = _merge({}, params, _params);\r\n        _this.window = window;\r\n        _this.trap = trap;\r\n\r\n        var globalRuntimeInitializationWaitlist = [], globalRuntimeInitialized = false;\r\n        ready(_this.window, () => {\r\n            globalRuntimeInitialized = meta(_this.window, 'script-autorun');\r\n        });\r\n\r\n        // ----------------------\r\n        // Helpers\r\n        // ----------------------\r\n\r\n        const getVal = (target, key) => {\r\n            if (_this.trap) {\r\n                return _this.trap.get(target, key);\r\n            }\r\n            return target[key];\r\n        };\r\n\r\n        const delVal = (target, key) => {\r\n            if (_this.trap) {\r\n                return _this.trap.deleteProperty(target, key);\r\n            }\r\n            delete target[key];\r\n            return true;\r\n        };\r\n\r\n        const setVal = (target, key, value) => {\r\n            if (_this.trap) {\r\n                _this.trap.set(target, key, value);\r\n            } else {\r\n                target[key] = value;\r\n            }\r\n            return target;\r\n        };\r\n\r\n        const mergeVal = (target, value) => {\r\n            if (_this.trap) {\r\n                _this.trap.set(target, value);\r\n            } else {\r\n                Object.keys(value).forEach(key => {\r\n                    target[key] = value[key];\r\n                });\r\n            }\r\n            return target;\r\n        };\r\n\r\n        const getScriptBase = function(target) {\r\n            if (!target['.chtml']) {\r\n                target['.chtml'] = {};\r\n            }\r\n            if (!target['.chtml'].scopedJS) {\r\n                // Create scope\r\n                target['.chtml'].scopedJS = {\r\n                    scope: new Scope(setVal({\r\n                        super: new Scope(setVal({\r\n                            super: globalScopeInstance,\r\n                        }, 'main', setVal({}, 'this', target))),\r\n                    }, 'main', {})),\r\n                };\r\n                // Watch scope\r\n                target['.chtml'].scopedJS.scope.observe(_this.trap, e => {\r\n                    if (!target['.chtml'].scopedJS.inWaitlist) {\r\n                        applyBinding(target, e);\r\n                    }\r\n                });\r\n            }\r\n            return target['.chtml'].scopedJS;\r\n        };\r\n\r\n        const applyBinding = function(target, event) {\r\n            var targetScriptBase = getScriptBase(target);\r\n            targetScriptBase.inWaitlist = false;\r\n            var params = {\r\n                references: (event || {}).references, \r\n                catch: e => {\r\n                    if (targetScriptBase.errorLevel === 2) {\r\n                        console.error(target, e);\r\n                    } else if (targetScriptBase.errorLevel !== 0) {\r\n                        console.warn(target, e.message);\r\n                    }\r\n                },\r\n                trap: _this.trap,\r\n            };\r\n            if (targetScriptBase.AST) {\r\n                var returnValue = targetScriptBase.AST.eval(targetScriptBase.scope, params);\r\n                if (_isFunction(returnValue)) {\r\n                    returnValue(targetScriptBase.scope.stack.main);\r\n                }\r\n            }\r\n        };\r\n\r\n        const globalScopeInstance = new Scope(setVal({\r\n            super: new Scope({main: _this.window})\r\n        }, 'main', {}), {\r\n            errorLevel:_this.params.errorLevel,\r\n        });\r\n\r\n        // ----------------------\r\n        // Capture scripts\r\n        // ----------------------\r\n\r\n        onPresent(_this.window, _this.params.scriptElement, (scriptElement, p) => {\r\n            if (_any(_this.params.inertContexts, inertContext => scriptElement.closest(inertContext)) || !scriptElement.parentNode) {\r\n                return;\r\n            }\r\n            // Remove\r\n            var srcCode, parentNode = scriptElement.parentNode, scriptBase = getScriptBase(parentNode);\r\n            if (!meta(_this.window, 'isomorphic')) {\r\n                scriptElement.remove();\r\n            }\r\n            if (scriptBase.scriptElement === scriptElement) {\r\n                return;\r\n            } else if (scriptBase.scriptElement) {\r\n                throw new Error('An element must only have one scopedJS instance!');\r\n            }\r\n            scriptBase.scriptElement = scriptElement;\r\n            if (!(srcCode = (scriptElement.textContent || '').trim())) {\r\n                return;\r\n            }\r\n            // ------\r\n            // Parse\r\n            // ------\r\n            var explain = [], shouldExplain = scriptElement.hasAttribute('explain') || meta(_this.window, 'script-explain');\r\n            scriptBase.AST = ScopedJS.parse(srcCode, {\r\n                explain: shouldExplain ? explain : null,\r\n            });\r\n            if (shouldExplain) {\r\n                console.log(parentNode, explain);\r\n            }\r\n            // ------\r\n            // Eval\r\n            // ------\r\n            scriptBase.errorLevel = scriptElement.getAttribute('errors') \r\n                ? parseInt(scriptElement.getAttribute('errors'))\r\n                : meta(_this.window, 'script-errors');\r\n            if (meta(_this.window, 'script-autorun') || scriptBase.hasBindings || scriptElement.hasAttribute('autorun')) {\r\n                applyBinding(parentNode);\r\n            } else {\r\n                scriptBase.inWaitlist = true;\r\n                globalRuntimeInitializationWaitlist.push(parentNode);\r\n            }\r\n        });\r\n\r\n        // ----------------------\r\n        // Define the \"local\" binding method on Element.prototype\r\n        // ----------------------\r\n\r\n        if (_this.params.localBindingMethod in _this.window.Element.prototype) {\r\n            throw new Error('The \"Element\" class already has a \"' + _this.params.localBindingMethod + '\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.Element.prototype, _this.params.localBindingMethod, {\r\n            value: function(binding, params = {}) {\r\n                let scriptBase = getScriptBase(this);\r\n                // NOTE that this element if in waitlist won't be called by this mergeVal()/setVal()\r\n                if (params.update) {\r\n                    mergeVal(scriptBase.scope.stack.main, binding);\r\n                } else {\r\n                    setVal(scriptBase.scope.stack, 'main', binding);\r\n                }\r\n                scriptBase.hasBindings = true;\r\n                // Explicitly remove from waitlist\r\n                if (globalRuntimeInitializationWaitlist.includes(this)) {\r\n                    _remove(globalRuntimeInitializationWaitlist, this);\r\n                    applyBinding(this);\r\n                }\r\n            }\r\n        });\r\n\r\n        if ('bindings' in _this.window.Element.prototype) {\r\n            throw new Error('The \"Element\" class already has a \"bindings\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.Element.prototype, 'bindings', {\r\n            get: function() {\r\n                var scriptBase = getScriptBase(this), _this = this;\r\n                if (!scriptBase.scopeInstanceProxy) {\r\n                    // Same proxy instance, even if scriptBase.scope.stack.main\r\n                    // is later changed\r\n                    scriptBase.scopeInstanceProxy = new Proxy(scriptBase.scope.stack.main, {\r\n                        set: (target, key, value) => {\r\n                            // NOTE that this element if in waitlist won't be called by this setVal()\r\n                            setVal(scriptBase.scope.stack.main, key, value);\r\n                            scriptBase.hasBindings = true;\r\n                            // Explicitly remove from waitlist\r\n                            if (globalRuntimeInitializationWaitlist.includes(_this)) {\r\n                                _remove(globalRuntimeInitializationWaitlist, _this);\r\n                                applyBinding(_this);\r\n                            }\r\n                            return true;\r\n                        },\r\n                        get: (target, key) => {\r\n                            return getVal(scriptBase.scope.stack.main, key);\r\n                        },\r\n                        deleteProperty: (target, key) => {\r\n                            return delVal(scriptBase.scope.stack.main, key);\r\n                        },\r\n                    });\r\n                }\r\n                return scriptBase.scopeInstanceProxy;\r\n            },\r\n        });\r\n\r\n        // ----------------------\r\n        // Define the global \"scopedJS\" object\r\n        // ----------------------\r\n\r\n        if (_this.params.globalBindingMethod in _this.window.document) {\r\n            throw new Error('document already has a \"' + _this.params.globalBindingMethod + '\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.document, _this.params.globalBindingMethod, {\r\n            value: function(binding, params = {}) {\r\n                // NOTE that elements in waitlist won't be called by this mergeVal()/setVal()\r\n                if (params.update) {\r\n                    mergeVal(globalScopeInstance.stack.main, binding);\r\n                } else {\r\n                    setVal(globalScopeInstance.stack, 'main', binding);\r\n                }\r\n                // Explicitly empty waitlist\r\n                var waitingElement;\r\n                while(waitingElement = globalRuntimeInitializationWaitlist.shift()) {\r\n                    applyBinding(waitingElement);\r\n                }\r\n                globalRuntimeInitialized = true;\r\n            },\r\n        });\r\n\r\n        if ('bindings' in _this.window.document) {\r\n            throw new Error('document already has a \"bindings\" property!');\r\n        }\r\n        var globalScopeInstanceProxy;\r\n        Object.defineProperty(_this.window.document, 'bindings', {\r\n            get: function() {\r\n                if (!globalScopeInstanceProxy) {\r\n                    // Same proxy instance, even if globalScopeInstance.stack.main\r\n                    // is later changed\r\n                    globalScopeInstanceProxy = new Proxy(globalScopeInstance.stack.main, {\r\n                        set: (target, key, value) => {\r\n                            // NOTE that elements in waitlist won't be called by this setVal()\r\n                            setVal(globalScopeInstance.stack.main, key, value);\r\n                            // Explicitly empty waitlist\r\n                            var waitingElement;\r\n                            while(waitingElement = globalRuntimeInitializationWaitlist.shift()) {\r\n                                applyBinding(waitingElement);\r\n                            }\r\n                            globalRuntimeInitialized = true;\r\n                            return true;\r\n                        },\r\n                        get: (target, key) => {\r\n                            return getVal(globalScopeInstance.stack.main, key);\r\n                        },\r\n                        deleteProperty: (target, key) => {\r\n                            return delVal(globalScopeInstance.stack.main, key);\r\n                        },\r\n                    });\r\n                }\r\n                return globalScopeInstanceProxy;\r\n            },\r\n        });\r\n    }\r\n};","\r\n/**\r\n * @ENV\r\n */\r\nexport default {\r\n    bundleElement: 'partials-bundle',\r\n    templateElement: 'template',\r\n        templateNamespaceAttribute: 'name',\r\n            slotReferenceAttribute: 'partials-slot',\r\n    templateReferenceAttribute: 'template',\r\n        slotElement: 'partials-slot',\r\n            slotNameAttribute: 'name',\r\n    itemsBindingMethod: 'partialsItemize',\r\n        itemIndexAttribute: 'partials-index',\r\n    keyValAttributes: [],\r\n    listAttributes: [],\r\n    inertContexts: ['template'],\r\n    inertSubjects: [],\r\n    noinheritAttributes: ['nocompose', 'name', 'template'],\r\n    recomposeCallback: null,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Observer from '@web-native-js/observer';\r\nimport ready from '@onephrase/util/dom/ready.js';\r\nimport { onPresent, onRemoved, onAttrChange } from '@onephrase/util/dom/mutation.js';\r\nimport _isEmpty from '@onephrase/util/js/isEmpty.js';\r\nimport _any from '@onephrase/util/arr/any.js';\r\nimport _arrFrom from '@onephrase/util/arr/from.js';\r\nimport _remove from '@onephrase/util/arr/remove.js';\r\nimport _unique from '@onephrase/util/arr/unique.js';\r\nimport _each from '@onephrase/util/obj/each.js';\r\nimport _merge from '@onephrase/util/obj/merge.js';\r\nimport meta from '../meta.js';\r\nimport params from './params.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The ScopedHTML class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class HTMLPartials {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(window, trap = Observer, _params = {}) {\r\n\r\n        const _this = this;\r\n        _this.window = window;\r\n        _this.trap = trap;\r\n        _this.params = _merge({}, params, _params);\r\n\r\n        // ----------------------\r\n        // Primer\r\n        // ----------------------\r\n\r\n        const chtml = el => {\r\n            if (!el['.chtml']) {\r\n                el['.chtml'] = {};\r\n            }\r\n            return el['.chtml'];\r\n        };\r\n\r\n        // ----------------------\r\n        // Define the global \"templates\" object\r\n        // ----------------------\r\n\r\n        if ('templates' in _this.window.document) {\r\n            throw new Error('document already has a \"templates\" property!');\r\n        }\r\n        const templates = {}, loadingTemplates = [];\r\n        Object.defineProperty(_this.window.document, 'templates', {\r\n            value: templates,\r\n        });\r\n        Object.defineProperty(_this.window.document, 'templatesReadyState', {\r\n            value: 'loading',\r\n            writable: true,\r\n        });\r\n\r\n        // ----------------------\r\n        // Capture template elements\r\n        // ----------------------\r\n\r\n        const addTemplate = el => {\r\n            var name = el.getAttribute(_this.params.templateNamespaceAttribute);\r\n            _this.trap.set(_this.window.document.templates, name, el);\r\n        };\r\n        onPresent(_this.window, 'template[' + _this.window.CSS.escape(_this.params.templateNamespaceAttribute) + ']', el => {\r\n            // --------------------------\r\n            const load = () => {\r\n                var src = el.getAttribute('src');\r\n                return new Promise((resolve, reject) => {\r\n                    // Missing in jsdom\r\n                    if (_this.window.fetch) {\r\n                        _this.window.fetch(src).then(response => {\r\n                            return response.ok ? response.text() : Promise.reject(response.statusText);\r\n                        }).then(content => {\r\n                            el.innerHTML = content;\r\n                            addTemplate(el);\r\n                            el.dispatchEvent(new _this.window.Event('load'));\r\n                            resolve(el);\r\n                        }).catch(error => {\r\n                            // Dispatch the event.\r\n                            el.innerHTML = '';\r\n                            addTemplate(el);\r\n                            el.dispatchEvent(new _this.window.Event('loaderror'));\r\n                            resolve(el);\r\n                            console.error('Error fetching the bundle at ' + src + '. (' + error + ')');\r\n                        });\r\n                    } else {\r\n                        resolve(el);\r\n                        console.error('Error fetching the bundle at ' + src + '. (window.fetch() not supported by browser.)');\r\n                    }\r\n                });\r\n            };\r\n            // --------------------------\r\n            onAttrChange(_this.window, el, changes => {\r\n                load();\r\n            }, ['src']);\r\n            onAttrChange(_this.window, el, changes => {\r\n                if (_this.window.document.templates[changes[0].oldValue] === el) {\r\n                    _this.trap.deleteProperty(_this.window.document.templates, changes[0].oldValue);\r\n                }\r\n                addTemplate(el);\r\n            }, [_this.params.templateNamespaceAttribute]);\r\n            onRemoved(_this.window, el, removed => {\r\n                var name = el.getAttribute(_this.params.templateNamespaceAttribute);\r\n                if (_this.window.document.templates[name] === el) {\r\n                    _this.trap.deleteProperty(_this.window.document.templates, name);\r\n                }\r\n            }, {once:true});\r\n            // --------------------------\r\n            if (el.getAttribute('src') && !el.content.children.length) {\r\n                loadingTemplates.push(load());\r\n            } else {\r\n                addTemplate(el);\r\n            }\r\n        });\r\n\r\n        // ----------------------\r\n        // Define the \"templates\" and \"partials\" properties on HTMLTemplateElement.prototype\r\n        // ----------------------\r\n\r\n        const discoverContents = template => {\r\n            if (_isEmpty(chtml(template).partials) || template.closest('[live]')) {\r\n                // -----------------------\r\n                // Templates and partials\r\n                chtml(template).templates = {};\r\n                chtml(template).partials = {};\r\n                // -----------------------\r\n                // Own partials\r\n                _arrFrom((template.content || template).children).forEach(el => {\r\n                    var templateName, partialsName;\r\n                    if ((el instanceof _this.window.HTMLTemplateElement) && (templateName = el.getAttribute(_this.params.templateNamespaceAttribute))) {\r\n                        chtml(template).templates[templateName] = el;\r\n                    } else {\r\n                        var partialsName = el.getAttribute(_this.params.slotReferenceAttribute) || 'default';\r\n                        if (!chtml(template).partials[partialsName]) {\r\n                            chtml(template).partials[partialsName] = [];\r\n                        }\r\n                        chtml(template).partials[partialsName].push(el);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        if ('templates' in _this.window.HTMLTemplateElement.prototype) {\r\n            throw new Error('The \"HTMLTemplateElement\" class already has a \"templates\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.HTMLTemplateElement.prototype, 'templates', {\r\n            get: function() {\r\n                discoverContents(this);\r\n                return chtml(this).templates;\r\n            }\r\n        });\r\n        if ('partials' in _this.window.HTMLTemplateElement.prototype) {\r\n            throw new Error('The \"HTMLTemplateElement\" class already has a \"partials\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.HTMLTemplateElement.prototype, 'partials', {\r\n            get: function() {\r\n                discoverContents(this);\r\n                return chtml(this).partials;\r\n            }\r\n        });\r\n\r\n        // ----------------------\r\n        // Define the \"template\" property on Element.prototype\r\n        // ----------------------\r\n\r\n        if ('template' in _this.window.Element.prototype) {\r\n            throw new Error('The \"Element\" class already has a \"template\" property!');\r\n        }\r\n        Object.defineProperty(_this.window.Element.prototype, 'template', {\r\n            get: function() {\r\n                var templateId = this.getAttribute(_this.params.templateReferenceAttribute);\r\n                if (templateId) {\r\n                    if (!chtml(this).templates) {\r\n                        chtml(this).templates = {};\r\n                    }\r\n                    if (!chtml(this).templates[templateId] || !this.hasAttribute('cache-template')) {\r\n                        var imported = templateId.split('/').filter(n => n).reduce((context, item) => {\r\n                            return context ? context.templates[item] || context.templates['*'] : null;\r\n                        }, _this.window.document);\r\n                        chtml(this).templates[templateId] = imported;\r\n                    }\r\n                    return chtml(this).templates[templateId];\r\n                }\r\n            },\r\n        });\r\n\r\n        // ----------------------\r\n        // Capture composable elements\r\n        // ----------------------\r\n\r\n        onPresent(_this.window, '[' + _this.window.CSS.escape(_this.params.templateReferenceAttribute) + ']', el => {\r\n            var inerts = _this.params.inertContexts.concat(_this.params.inertSubjects);\r\n            if (_any(inerts, inertContext => el.closest(inertContext))) {\r\n                return;\r\n            }\r\n            var resolveSlots = () => {\r\n                _each(chtml(el).slots, (name, slot) => {\r\n                    slot.resolve();\r\n                });\r\n            };\r\n            // Resolve slots when reference to template changes\r\n            onAttrChange(_this.window, el, resolveSlots, [_this.params.templateReferenceAttribute]);\r\n            // Resolve slots when the referenced template changes\r\n            _this.trap.observe(_this.window.document.templates, changes => {\r\n                var reference = el.getAttribute(_this.params.templateReferenceAttribute);\r\n                changes.forEach(change => {\r\n                    if (reference === change.value || reference.startsWith(change.value + '/')) {\r\n                        resolveSlots();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        // ----------------------\r\n        // Capture slot elements\r\n        // ----------------------\r\n\r\n        _this.window.customElements.define(_this.params.slotElement, class extends _this.window.HTMLElement {\r\n            \r\n            /**\r\n             * Called by the Slots hydrator.\r\n             *\r\n             * @param Comment       anchorNode\r\n             * @param array         slottedElements\r\n             * @param Element       compositionBlock\r\n             *\r\n             * @return void\r\n             */\r\n            hydrate(anchorNode, slottedElements, compositionBlock) {\r\n                this.anchorNode = anchorNode;\r\n                chtml(this).slottedElements = slottedElements;\r\n                chtml(this).compositionBlock = compositionBlock;\r\n                this._bindSlotted(slottedElements);\r\n                this._connectToCompositionBlock();\r\n            }\r\n        \r\n            /**\r\n             * This triggers self-resolution\r\n             *\r\n             * @return void\r\n             */\r\n            connectedCallback() {\r\n                if (!this.anchorNode) {\r\n                    this.anchorNode = meta(_this.window, 'isomorphic')\r\n                        ? _this.window.document.createComment(this.outerHTML)\r\n                        : _this.window.document.createTextNode('');\r\n                    this.after(this.anchorNode);\r\n                    chtml(this).compositionBlock = !this.hasAttribute(_this.params.templateReferenceAttribute)\r\n                        ? this.parentNode.closest('[' + _this.window.CSS.escape(_this.params.templateReferenceAttribute) + ']')\r\n                        : null;\r\n                    this._connectToCompositionBlock();\r\n                    ready(_this.window, () => {\r\n                        Promise.all(loadingTemplates).then(() => {\r\n                            this.resolve();\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        \r\n            /**\r\n             * Connects the instance to the compositionBlock.\r\n             */\r\n            _connectToCompositionBlock() {\r\n                if (this.compositionBlock) {\r\n                    if (!chtml(this.compositionBlock).slots) {\r\n                        chtml(this.compositionBlock).slots = {};\r\n                    }\r\n                    // Now after the update slot ID\r\n                    chtml(this.compositionBlock).slots[this.name] = this;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Bind a slotted element.\r\n             *\r\n             * @param array              partials\r\n             *\r\n             * @return void\r\n             */\r\n            _bindSlotted(partials) {\r\n                partials.forEach(partial => {\r\n                    partial.slotReference = this;\r\n                });\r\n                chtml(this).slottedObserver = onRemoved(_this.window, partials, removed => {\r\n                    removed.forEach(remd => {\r\n                        // Let's ensure this wasn't slotted againe\r\n                        if (!remd.parentNode) {\r\n                            _remove(this.slottedElements, remd);\r\n                        }\r\n                        // if the slotted hasnt been slotted somewhere\r\n                        if (remd.slotReference === this) {\r\n                            delete remd.slotReference;\r\n                        }\r\n                    });\r\n                    // If this was the last of the s,ottable in the same family of IDs,\r\n                    // we should restore the original slot\r\n                    if (!this.slottedElements.length) {\r\n                        // Must be assigned bu now\r\n                        // for it to be removed in the first place\r\n                        this.anchorNode.before(this);\r\n                    }\r\n                }, {onceEach:true});\r\n            }\r\n\r\n            /**\r\n             * Resolves the slot\r\n             */\r\n            resolve() {\r\n                if (_any(_this.params.inertContexts, inertContext => this.closest(inertContext))) {\r\n                    return;\r\n                }\r\n                // -----------------\r\n                // Global import or scoped slot?\r\n                var template, partials;\r\n                if (this.hasAttribute(_this.params.templateReferenceAttribute)) {\r\n                    // Did we previously had a compositionBlock?\r\n                    // Let's remove ourself\r\n                    if (this.compositionBlock && chtml(this.compositionBlock).slots[this.name] === this) {\r\n                        delete chtml(this.compositionBlock).slots[this.name];\r\n                    }\r\n                    if (template = this.template) {\r\n                        partials = template.partials[this.name];\r\n                    }\r\n                } else {\r\n                    if (!this.compositionBlock) {\r\n                        console.warn('Scoped slots must be found within template contexts. [' + this.name + ']', this);\r\n                        return;\r\n                    }\r\n                    // We dont want this proccessed again on restoration to its position\r\n                    if (template = this.compositionBlock.template) {\r\n                        partials = template.partials[this.name];\r\n                    }\r\n                }\r\n                if (template) {\r\n                    this.fill(partials);\r\n                } else {\r\n                    this.empty();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Fill slot with partials.\r\n             *\r\n             * @param array|Element     partials\r\n             *\r\n             * @return void\r\n             */\r\n            fill(partials) {\r\n                partials = _arrFrom(partials, false/* castObject */).map(partial => partial.cloneNode(true));\r\n                // ---------------------\r\n                // Discard previous slotted elements\r\n                // But this intentional removal should not trigger slot restoration\r\n                this.empty(true/* silently */);\r\n                this.remove();\r\n                // ---------------------\r\n                // Slot-in the corresponding partials from template\r\n                partials.forEach(partial => {\r\n                    // ---------------------\r\n                    // Implement the slot?\r\n                    if (partial.getAttribute(_this.params.templateReferenceAttribute) === '@slot') {\r\n                        if (!chtml(partial).templates) {\r\n                            chtml(partial).templates = {};\r\n                        }\r\n                        chtml(partial).templates['@slot'] = this;\r\n                    }\r\n                    // Inherit attributes from the slot element before replacement\r\n                    _this.mergeAttributes(partial, this);\r\n                    // ---------------------\r\n                    if (!partial.getAttribute(_this.params.slotReferenceAttribute)) {\r\n                        partial.setAttribute(_this.params.slotReferenceAttribute, this.name);\r\n                    }\r\n                    // Place slottable\r\n                    this.anchorNode.before(partial);\r\n                });\r\n                this._bindSlotted(partials);\r\n                // ---------------------\r\n                // Updatate records\r\n                this.slottedElements.push(...partials);\r\n            }\r\n\r\n            /**\r\n             * Empty slot.\r\n             *\r\n             * @param bool              sliently\r\n             *\r\n             * @return void\r\n             */\r\n            empty(silently = false) {\r\n                if (this.slottedElements) {\r\n                    var slottedElements = this.slottedElements;\r\n                    if (silently && this.slottedObserver) {\r\n                        this.slottedObserver.disconnect();\r\n                        slottedElements = this.slottedElements.splice(0);\r\n                    }\r\n                    slottedElements.forEach(slottedElement => slottedElement.remove());\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Returns the slot's name.\r\n             *\r\n             * @return string\r\n             */\r\n            get name() {\r\n                return this.getAttribute(_this.params.slotNameAttribute) || 'default';\r\n            }\r\n    \r\n            /**\r\n             * Returns the slot's compositionBlock, if any.\r\n             *\r\n             * @return array\r\n             */\r\n            get compositionBlock() {\r\n                return chtml(this).compositionBlock;\r\n            }\r\n    \r\n            /**\r\n             * Returns the slot's slotted elements.\r\n             *\r\n             * @return array\r\n             */\r\n            get slottedElements() {\r\n                if (!chtml(this).slottedElements) {\r\n                    chtml(this).slottedElements = [];\r\n                }\r\n                return chtml(this).slottedElements;\r\n            }\r\n\r\n            /**\r\n             * Returns the slot's implementable partials\r\n             *\r\n             * @return array\r\n             */\r\n            get partials() {\r\n                discoverContents(this);\r\n                return chtml(this).partials;\r\n            }\r\n                    \r\n            /**\r\n             * The attributes we want to observe.\r\n             *\r\n             * @return array\r\n             */\r\n            static get observedAttributes() {\r\n                return [_this.params.slotNameAttribute];\r\n            }\r\n        });\r\n\r\n        // ----------------------\r\n        // Restore slots from snapshots\r\n        // ----------------------\r\n\r\n        const hydrateSlots = () => {\r\n            _arrFrom(_this.window.document.querySelectorAll('[' + _this.window.CSS.escape(_this.params.slotReferenceAttribute) + ']')).forEach(partial => {\r\n                // Scan\r\n                if (!chtml(partial.parentNode).slotsCan) {\r\n                    var slottedElements = [];\r\n                    partial.parentNode.childNodes.forEach(node => {\r\n                        var nodeValue;\r\n                        if (node.nodeType === 1/** ELEMENT_NODE */ && node.matches('[' + _this.window.CSS.escape(_this.params.slotReferenceAttribute) + ']')) {\r\n                            slottedElements.push(node);\r\n                        } else if (node.nodeType === 8/** COMMENT_NODE */ && (nodeValue = node.nodeValue.trim())\r\n                        && nodeValue.startsWith('<' + _this.params.slotElement)\r\n                        && nodeValue.endsWith('</' + _this.params.slotElement + '>')) {\r\n                            var slot, reviver = _this.window.document.createElement('div');\r\n                            reviver.innerHTML = nodeValue;\r\n                            if ((slot = reviver.firstChild).matches(_this.params.slotElement)) {\r\n                                // Belongs to a composition block?\r\n                                var compositionBlock;\r\n                                if (!slot.hasAttribute(_this.params.templateReferenceAttribute)) {\r\n                                    compositionBlock = node.parentNode.closest('[' + _this.window.CSS.escape(_this.params.templateReferenceAttribute) + ']');\r\n                                }\r\n                                slot.hydrate(node, slottedElements, compositionBlock);\r\n                                // Empty basket\r\n                                slottedElements = [];\r\n                            }\r\n                        }\r\n                    });\r\n                    // Scanning is once for every parent\r\n                    chtml(partial.parentNode).slotsCan = true;\r\n                }\r\n            });\r\n        };\r\n\r\n        // ----------------------\r\n        // Hydrate\r\n        // ----------------------\r\n\r\n        loadingTemplates.forEach(promise => {\r\n            promise.catch(error => {\r\n                console.warn(error);\r\n            });\r\n        });\r\n        ready(_this.window, () => {\r\n            Promise.all(loadingTemplates).then(() => {\r\n                _this.window.document.templatesReadyState = 'complete';\r\n                _this.window.document.dispatchEvent(new _this.window.Event('templatesreadystatechange'));\r\n            });\r\n            if (meta(_this.window, 'isomorphic')) {\r\n                hydrateSlots();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Imports partials from from sourceEl into el.\r\n     *\r\n     * @param Element\t\t\t\t    exportEl\r\n     * @param Element\t\t\t\t    superExportEl\r\n     * @param array    \t\t\t\t    noinherit\r\n     *\r\n     * @return Element\r\n     */\r\n    mergePartials(exportEl, superExportEl, noinherit = []) {\r\n        if (!superExportEl.partialsSlottables) {\r\n            return exportEl;\r\n        }\r\n        _each(superExportEl.partialsSlottables, (slotId, slottable) => {\r\n            if (exportEl.partialsSlottables && exportEl.partialsSlottables[slotId]) {\r\n                // Simply inherit attributes from the super slottable\r\n                // The export may however define a no-inherit directive for all its slottables\r\n                var _noinherit = noinherit.concat((exportEl.getAttribute('noinherit') || '').split(' ').map(val => val.trim()));\r\n                this.mergeAttributes(exportEl.partialsSlottables[slotId], slottable, _noinherit, false/*prioritize*/);\r\n            } else {\r\n                // Copy new slottables\r\n                exportEl.append(slottable.clone(true));\r\n            }\r\n        });\r\n        return exportEl;\r\n    }\r\n\r\n    /**\r\n     * Imports attributes from sourceEl into el.\r\n     *\r\n     * @param Element\t\t\t\t    el\r\n     * @param Element\t\t\t\t    sourceEl\r\n     * @param array\t\t\t\t\t\tnoinherit\r\n     * @param bool\t\t\t\t\t\tprioritize\r\n     *\r\n     * @return Element\r\n     */\r\n    mergeAttributes(el, sourceEl, noinherit = [], prioritize = true) {\r\n        // ----------------------------\r\n        // Norecompose directive\r\n        // ----------------------------\r\n        noinherit = noinherit.concat(this.params.noinheritAttributes);\r\n        if (el.hasAttribute('noinherit')) {\r\n            noinherit = noinherit.concat((el.getAttribute('noinherit') || '*').split(' ').map(val => val.trim()));\r\n        }\r\n        // ----------------------------\r\n        // Merge list attributes...\r\n        // ----------------------------\r\n        var listAttributes = this.params.listAttributes.concat(['role', 'class']);\r\n        _unique(listAttributes).forEach(type => {\r\n            var b_attr, a_attr;\r\n            if (!noinherit.includes(type) && !noinherit.includes('*') && (b_attr = sourceEl.getAttribute(type))) {\r\n                if (a_attr = el.getAttribute(type)) {\r\n                    var jointList = !prioritize ? [b_attr, a_attr] : [a_attr, b_attr];\r\n                } else {\r\n                    var jointList = [b_attr];\r\n                }\r\n                el.setAttribute(type, _unique(jointList.join(' ').split(' ').map(r => r.trim())).join(' '));\r\n                noinherit.push(type);\r\n            }\r\n        });\r\n        // ----------------------------\r\n        // Merge key/val attributes...\r\n        // ----------------------------\r\n        _unique(this.params.keyValAttributes.concat('style')).forEach(type => {\r\n            var b_attr, a_attr;\r\n            if (!noinherit.includes(type) && !noinherit.includes('*') && (b_attr = sourceEl.getAttribute(type))) {\r\n                if (a_attr = el.getAttribute(type)) {\r\n                    var jointDefs = !prioritize ? [b_attr, a_attr] : [a_attr, b_attr];\r\n                    if (!jointDefs[0].trim().endsWith(';')) {\r\n                        jointDefs[0] = jointDefs[0] + ';';\r\n                    }\r\n                } else {\r\n                    var jointDefs = [b_attr];\r\n                }\r\n                el.setAttribute(type, jointDefs.join(' '));\r\n                noinherit.push(type);\r\n            }\r\n        });\r\n        // ----------------------------\r\n        // Port all other attributes...\r\n        // ----------------------------\r\n        if (!noinherit.includes('*')) {\r\n            for (var i = 0; i < sourceEl.attributes.length; i ++) {\r\n                var attr = sourceEl.attributes[i];\r\n                if (!noinherit.includes(attr.name) \r\n                && (!el.hasAttribute(attr.name) || prioritize)) {\r\n                    el.setAttribute(attr.name, attr.value);\r\n                }\r\n            }\r\n        }\r\n        return el;\r\n    }\r\n\r\n};\r\n","\r\n/**\r\n * @ENV\r\n */\r\nexport default {\r\n    rootAttribute: 'namespace',\r\n    scopedIdAttribute: 'scoped:id',\r\n    namespacePropertyName: 'namespace',\r\n    inertContexts: [],\r\n    inertSubjects: [],\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Observer from '@web-native-js/observer';\r\nimport { onPresent, onRemoved } from '@onephrase/util/dom/mutation.js';\r\nimport _merge from '@onephrase/util/obj/merge.js';\r\nimport _any from '@onephrase/util/arr/any.js';\r\nimport params from './params.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The ScopedHTML class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class ScopedHTML {\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(window, trap = Observer, _params = {}) {\r\n\r\n        const _this = this;\r\n        _this.params = _merge({}, params, _params);\r\n        _this.window = window;\r\n        _this.trap = trap;\r\n\t\t\t\r\n\t\t// Define the  namespacePropertyName\r\n\t\tif (!_this.window || !('Element' in _this.window)) {\r\n\t\t\tthrow new Error('The \"Element\" class not found in global context!');\r\n\t\t}\r\n\t\tif (_this.params.namespacePropertyName in _this.window.Element.prototype) {\r\n\t\t\tthrow new Error('The \"Element\" class already has a \"' + _this.params.namespacePropertyName + '\" property!');\r\n\t\t}\r\n\t\tObject.defineProperty(_this.window.Element.prototype, _this.params.namespacePropertyName, {\r\n\t\t\tget: function() {\r\n\t\t\t\tif (!this['.sopedHTML-namespace']) {\r\n\t\t\t\t\tvar namespaceStore = {};\r\n\t\t\t\t\tthis['.sopedHTML-namespace'] = namespaceStore;\r\n\t\t\t\t\tif (_this.trap.link) {\r\n\t\t\t\t\t\t_this.trap.link(this, _this.params.namespacePropertyName, namespaceStore);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this['.sopedHTML-namespace'];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Capture scoped elements\r\n\t\tonPresent(_this.window, '[' + _this.window.CSS.escape(_this.params.scopedIdAttribute) + ']', el => {\r\n\t\t\tvar inerts = _this.params.inertContexts.concat(_this.params.inertSubjects);\r\n\t\t\tif (_any(inerts, inertContext => el.closest(inertContext))) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar scopedId = el.getAttribute(_this.params.scopedIdAttribute),\r\n\t\t\t\townerRoot = el.parentNode.closest('[' + _this.window.CSS.escape(_this.params.rootAttribute) + '],html'),\r\n\t\t\t\tnamespaceStore = ownerRoot[_this.params.namespacePropertyName];\r\n\t\t\tif (namespaceStore[scopedId] !== el) {\r\n\t\t\t\t_this.trap.set(namespaceStore, scopedId, el);\r\n\t\t\t}\r\n\t\t\t// On remove\r\n\t\t\tonRemoved(_this.window, el, () => {\r\n\t\t\t\t// ONLY if I am still the one in place\r\n\t\t\t\tif (namespaceStore[scopedId] === el) {\r\n\t\t\t\t\t// Properly remove me\r\n\t\t\t\t\t_this.trap.deleteProperty(namespaceStore, scopedId);\r\n\t\t\t\t}\r\n\t\t\t}, {once:true});\r\n\t\t});\r\n\t}\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport polyfills from '@onephrase/util/dom/polyfills.js';\r\nimport Jsen from '@web-native-js/jsen';\r\nimport Observer from '@web-native-js/observer';\r\nimport HTMLPartials from './html-partials/index.js';\r\nimport ScopedHTML from './scoped-html/index.js';\r\nimport ScopedJS from './scoped-js/index.js';\r\nimport meta from './meta.js';\r\n\r\n/**\r\n * @init\r\n */\r\nexport default class Chtml {\r\n\r\n    /**\r\n     * @pconstructor\r\n     */\r\n    constructor(window, trap = Observer, params = {}) {\r\n        if (window.Chtml) {\r\n            throw new Error('Window already initialized!');\r\n        }\r\n        window.Chtml = this;\r\n        polyfills(window);\r\n        this.window = window;\r\n        this.HTMLPartials = new HTMLPartials(...arguments);\r\n        this.ScopedHTML = new ScopedHTML(...arguments);\r\n        this.ScopedJS = new ScopedJS(...arguments);\r\n    }\r\n\r\n    /**\r\n     * @meta\r\n     */\r\n    meta(...args) {\r\n        return meta(this.window, ...args);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * @pther\r\n */\r\nexport {\r\n\tObserver,\r\n    Jsen,\r\n    meta,\r\n};\r\n","\r\n/**\r\n * Applies all supported polyfills\r\n */\r\nexport default function(window) {\r\n    CSS_escape(window);\r\n    Element_matches(window);\r\n};\r\n\r\n/**\r\n * Polyfills the window.CSS object.\r\n *  \r\n * @return void\r\n */\r\nexport function CSS_escape(window) {\r\n    if (!window.CSS) {\r\n        window.CSS = {};\r\n    }\r\n    if (!window.CSS.escape) {\r\n        /**\r\n         * Polyfills the window.CSS.escape() function.\r\n         *  \r\n         * @param string str \r\n         * \r\n         * @return string\r\n         */\r\n        window.CSS.escape = str => str.replace(/([\\:@\\~\\$\\&])/g, '\\\\$1');\r\n    }\r\n};\r\n\r\n/**\r\n * Polyfills the Element.prototype.matches() method\r\n  *  \r\n * @return void\r\n*/\r\nexport function Element_matches(window) {\r\n    if (!window.Element.prototype.matches) {\r\n        window.Element.prototype.matches = \r\n        window.Element.prototype.matchesSelector || \r\n        window.Element.prototype.mozMatchesSelector ||\r\n        window.Element.prototype.msMatchesSelector || \r\n        window.Element.prototype.oMatchesSelector || \r\n        window.Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;            \r\n        };\r\n    }\r\n}; \r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param window \t\t\t\twindow\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n * @param bool\t\t \t\t\tall\r\n *\r\n * @return Element|DOMNodeList\r\n */\r\nexport function querySelector(window, selector, context = null, all = false) {\r\n    context = context || window.document;\r\n\tvar matchedItems, method = all ? 'querySelectorAll' : 'querySelector';\r\n\ttry {\r\n\t\tmatchedItems = context[method](selector);\r\n\t} catch(e) {\r\n\t\ttry {\r\n\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':matches('));\r\n\t\t} catch(e) {\r\n\t\t\ttry {\r\n\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-webkit-any('));\r\n\t\t\t} catch(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-moz-any('));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn matchedItems;\r\n};\r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n *\r\n * @return DOMNodeList\r\n */\r\nexport function querySelectorAll(window, selector, context = window.document) {\r\n    return querySelector(selector, context, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Chtml from './index.js';\r\n\r\n// As globals\r\nif (!window.WN) {\r\n\twindow.WN = {};\r\n}\r\nwindow.WN.Chtml = Chtml;\r\nif (!window.WebNative) {\r\n\twindow.WebNative = {};\r\n}\r\nwindow.WebNative.Chtml = Chtml;\r\n\r\nnew Chtml(window);\r\n"],"sourceRoot":""}