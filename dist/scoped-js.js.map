{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../util/js/isArray.js","webpack:///../util/js/isTypeObject.js","webpack:///../util/js/isObject.js","webpack:///../util/arr/from.js","webpack:///../util/js/isTypeArray.js","webpack:///../util/js/isString.js","webpack:///../util/js/isFunction.js","webpack:///../util/js/isNumeric.js","webpack:///../util/js/isUndefined.js","webpack:///../util/obj/each.js","webpack:///../util/js/isNumber.js","webpack:///../util/obj/merge.js","webpack:///../util/arr/remove.js","webpack:///../util/js/isEmpty.js","webpack:///../util/arr/unique.js","webpack:///../util/js/isTypeFunction.js","webpack:///../util/obj/with.js","webpack:///./src/meta.js","webpack:///../util/obj/getAllPropertyNames.js","webpack:///../util/obj/getPrototypeChain.js","webpack:///../util/arr/pushUnique.js","webpack:///../util/obj/mergeCallback.js","webpack:///../util/js/isNull.js","webpack:///../util/arr/any.js","webpack:///../util/arr/difference.js","webpack:///../util/str/before.js","webpack:///../util/str/after.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/polyfills.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/index.js","webpack:///./node_modules/@webqit/browser-pie/src/ENV.js","webpack:///./node_modules/@webqit/browser-pie/src/vendor.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/el.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/Reflow.js","webpack:///./node_modules/@webqit/browser-pie/src/dom/Mutation.js","webpack:///../util/arr/intersect.js","webpack:///../util/obj/from.js","webpack:///../util/js/isClass.js","webpack:///../util/obj/copy.js","webpack:///../util/js/isPlainObject.js","webpack:///../util/js/isBoolean.js","webpack:///../util/obj/even.js","webpack:///../util/obj/compareCallback.js","webpack:///./node_modules/@webqit/subscript/src/ExprInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ReferenceInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/CallInterface.js","webpack:///./node_modules/@webqit/subscript/src/IndependentExprInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/IfInterface.js","webpack:///./node_modules/@webqit/subscript/src/SyntaxError.js","webpack:///./node_modules/@webqit/subscript/src/Parser.js","webpack:///../util/str/wrapped.js","webpack:///../util/str/unwrap.js","webpack:///../util/str/beforeLast.js","webpack:///../util/arr/flatten.js","webpack:///../util/arr/first.js","webpack:///../util/arr/last.js","webpack:///../util/obj/copyPlain.js","webpack:///../util/str/Lexer.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AbstractionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Abstraction.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ArrInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Arr.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ArgumentsInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Arguments.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AssertionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Assertion.js","webpack:///./node_modules/@webqit/subscript/src/grammar/AssignmentInterface.js","webpack:///./node_modules/@webqit/subscript/src/ReferenceError.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Assignment.js","webpack:///./node_modules/@webqit/subscript/src/grammar/BlockInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ReturnInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/DeletionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/NumInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/StrInterface.js","webpack:///./node_modules/@webqit/subscript/src/util.js","webpack:///./node_modules/@webqit/subscript/src/Scope.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Block.js","webpack:///./node_modules/@webqit/subscript/src/grammar/BoolInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Bool.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Call.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ComparisonInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Comparison.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ConditionInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Condition.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Deletion.js","webpack:///./node_modules/@webqit/subscript/src/grammar/FuncInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Func.js","webpack:///./node_modules/@webqit/subscript/src/grammar/If.js","webpack:///./node_modules/@webqit/subscript/src/grammar/MathInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Math.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Num.js","webpack:///./node_modules/@webqit/subscript/src/grammar/ObjInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Obj.js","webpack:///./node_modules/@webqit/subscript/src/grammar/PresenceInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Presence.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Reference.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Return.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Str.js","webpack:///./node_modules/@webqit/subscript/src/grammar/VoidInterface.js","webpack:///./node_modules/@webqit/subscript/src/grammar/Void.js","webpack:///./node_modules/@webqit/subscript/src/grammar.js","webpack:///./node_modules/@webqit/subscript/src/index.js","webpack:///./src/scoped-js/Scope.js","webpack:///./src/scoped-js/params.js","webpack:///./src/scoped-js/index.js","webpack:///./src/scoped-js/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Array","isArray","val","castObject","length","slice","values","String","toString","isNaN","arguments","undefined","returnValue","obj","keys","forEach","k","callback","parseFloat","Number","objs","obj1","obj2","arr","indexOf","itm","limit","splice","filter","index","self","entriesOrKey","meta","prop","set","this","window","OOHTML_META","OOHTML_METATag","document","querySelector","getAttribute","split","v","reduce","META","directive","directiveSplit","map","trim","parseInt","content","setAttribute","keysAll","until","prototypalChain","push","getPrototypeOf","items","getOwnPropertyNames","mergeCallback","deepProps","isReplace","withSymbols","depth","shift","Error","valAtObj1","valAtObj2","getOwnPropertyDescriptor","e","prevTest","arr2","val1","val2","search","subject","pos","beforeLast","lastIndexOf","substr","afterLast","CSS","escape","str","replace","CSS_escape","Ctxt","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","querySelectorAll","item","Element_matches","Node","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","Node_isConnected","selector","context","all","matchedItems","method","init","params","WQ","DOM","scope","_vendor","_prefix","_params","InstallTrigger","test","HTMLElement","safari","pushNotification","isChrome","chrome","webstore","runtime","isEdgeChromium","navigator","userAgent","isOpera","opr","addons","opera","isIE","documentMode","isEdge","StyleMedia","getVendor","styles","getComputedStyle","documentElement","prefix","join","match","Olink","api","RegExp","css","getPrefix","setPrototypeOf","ready","Promise","resolve","addEventListener","readyState","el","query","input","startsWith","temp","createElement","innerHtml","firstChild","Reflow","_run","readCallbacks","writeCallbacks","async","asyncDOM","requestAnimationFrame","withPromise","reject","read","write","prevTransaction","onread","readReturn","callWrite","onwrite","writeReturn","repeatTransaction","cycle","then","Mutation","els","on","onPresenceChange","presence","MutationObserver","onAdded","parentNode","onRemoved","nodeListArray","node","observeIndirectMutation","collection","concat","includes","added","removed","mo","mutations","matchedAddedNodes","mut","addedNodes","matchedAsAddedNode","onceEach","newlyadded","once","disconnect","matchedRemovedNodes","removedNodes","matchedAsRemovedNode","newlyremoved","observe","childList","subtree","observer","attributes","attributeOldValue","attributeFilter","Function","_even","assertion","obj1Keys","obj2Keys","result","contn","v1","testPass","v2","netComparison","contrast","returnOnFirstFalse","Expr","jsenType","Super","comments","vars","Interface","ExprInterface","args","super","cache","expr","grammar","_parsed","allowCache","parseOne","_grammar","parsed","assert","SyntaxError","deepVars","varsUnlodged","parse","_expr","subStmt","ReferenceInterface","hasCallHead","_context","CallInterface","role","lodge","_var","IndependentExprInterface","deepVarsUnlodged","reference","IfInterface","onTrue","onFalse","explain","openingTag","endsWith","closingTag","_flatten","withObjects","acc","count","firsts","amount","reverse","delims","options","copyResult","nesting","maxDepth","tokens","matchesi","$cache","cached","lex","$str","$options","blocks","$blocks","quotes","$quotes","$comments","cursor","_evalCharsAt","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","_testNesting","stopChar","_testChars","stopChars","stopCharForward","matchedDelim","preserveDelims","nextIndex","quote","block","Math","max","testList","ret","useRegex","ci","toLowerCase","target","isNewSeries","splitSeries","splitSeries2","regParse","AbstractionInterface","eval","stringify","parseCallback","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","ArgumentsInterface","list","arg","AssertionInterface","logic","Assertion","constructor","negation","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","AssignmentInterface","initKeyword","operator","postIncrDecr","initialVal","getEval","operandA","operandB","references","_pushUnique","ReferenceError","message","testBlockEnd","isIncrDecr","a","b","pathStartsWith","prev","referencesToPaths","seg","pathArray","unshift","NumInterface","int","StrInterface","stack","errorLevel","local","$local","trap","props","_has","main","tags","changes","delta","path","oldValue","unobserve","final","level","callMain","handle","bindThis","contxtObj","contxtMeta","advance","_get","type","_set","cntxt","localContxtMeta","LogicalError","strictMode","deleteProperty","del","prop2","contextObj2","fn","exec","apply","execUnknown","has","BlockInterface","stmts","delim","returned","returnCallback","callEval","stmt","catch","results","isDirectEventTarget","f","isIndirectEventTarget","ReturnInterface","DeletionInterface","BoolInterface","state","pop","ComparisonInterface","operand1","operand2","compare","oper","strict","exact","is","isNull","equalsTo","strictlyNotEqualsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","ConditionInterface","splits","Deletion","red","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","instance","newMainContext","defaultVal","nestedContext","retrn","body","headNoWrap","head","bodyNoWrap","funcHead","funcBody","param","paramSplit","onTrueIsBlock","onFalseIsBlock","rest","MathInterface","currentTotal","sub","dec","Obj","ObjInterface","entries","_entriesSplit","entry","Presence","PresenceInterface","backticks","sourceContext","subjectContext","separator","nameSplit","exprLc","If","Return","Abstraction","Condition","Comparison","Arr","Num","Str","Bool","Void","VoidInterface","Call","Reference","SCRIPT_ELEMENT","GLOBAL_BINDING_METHOD","LOCAL_BINDING_METHOD","SCRIPT_INERT_CONTEXTS","globalRuntimeInitializationWaitlist","globalRuntimeInitialized","globalAutorun","getVal","Observer","delVal","setVal","mergeVal","getScriptBase","scopedJS","globalScopeInstance","isConnected","inWaitlist","applyBinding","diff","event","targetScriptBase","console","error","warn","AST","onPresent","scriptElement","inertContext","closest","srcCode","scriptBase","remove","textContent","shouldExplain","hasAttribute","script","log","hasBindings","binding","update","$this","scopeInstanceProxy","Proxy","waitingElement","globalScopeInstanceProxy"],"mappings":"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","file":"scoped-js.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '../js/isObject.js';\r\nimport _from from './from.js';\r\nimport _merge from './merge.js';\r\n\r\n/**\r\n * Return the input object with additional entries.\r\n *\r\n * @param object\t \t\t\tobj\r\n * @param string|array \t\t\tentriesOrKey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(obj, entriesOrKey, val = null) {\r\n\treturn _merge(obj, _isObject(entriesOrKey) ? entriesOrKey : _from(entriesOrKey, val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _with from '@webqit/util/obj/with.js';\r\n\r\n/**\r\n * A OOHTML's meta tag props reader.\r\n *  \r\n * @param string prop\r\n * @param any\t set\r\n * \r\n * @return string|number|bool\r\n */\r\nexport default function meta(prop, set = null) {\r\n    if (!this.window.OOHTML_META) {\r\n        if (this.window.OOHTML_METATag = this.window.document.querySelector('meta[name=\"oohtml\"]')) {\r\n            this.window.OOHTML_META = (this.window.OOHTML_METATag.getAttribute('content') || '').split(';').filter(v => v).reduce((META, directive) => {\r\n                var directiveSplit = directive.split('=').map(d => d.trim());\r\n                return _with(META, directiveSplit[0], directiveSplit[1] === 'true' \r\n                    ? true : (directiveSplit[1] === 'false' \r\n                        ? false : (_isNumeric(directiveSplit[1]) ? parseInt(directiveSplit[1]) : directiveSplit[1])\r\n                    )\r\n                );\r\n            }, {});\r\n        }\r\n    }\r\n    if (arguments.length === 3) {\r\n        if (set === false) {\r\n            delete this.window.OOHTML_META[prop];\r\n        } else {\r\n            this.window.OOHTML_META[prop] = set === true ? 'true' : set;\r\n        }\r\n        var content = Object.keys(this.window.OOHTML_META).reduce((content, prop) => content + prop + '=' + this.window.OOHTML_META[prop] + ';', '');\r\n        this.window.OOHTML_METATag.setAttribute('content', content);\r\n        return true;\r\n    }\r\n    return this.window.OOHTML_META ? this.window.OOHTML_META[prop] : undefined;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * Applies all supported polyfills\r\n */\r\nexport default function(Ctxt) {\r\n    CSS_escape(Ctxt.window);\r\n    Element_matches(Ctxt.window);\r\n    Node_isConnected(Ctxt.window);\r\n};\r\n\r\n/**\r\n * Polyfills the window.CSS object.\r\n *  \r\n * @return void\r\n */\r\nexport function CSS_escape(window) {\r\n    if (!window.CSS) {\r\n        window.CSS = {};\r\n    }\r\n    if (!window.CSS.escape) {\r\n        /**\r\n         * Polyfills the window.CSS.escape() function.\r\n         *  \r\n         * @param string str \r\n         * \r\n         * @return string\r\n         */\r\n        window.CSS.escape = str => str.replace(/([\\:@\\~\\$\\&])/g, '\\\\$1');\r\n    }\r\n};\r\n\r\n/**\r\n * Polyfills the Node.prototype.isConnected property\r\n * \r\n * @see MDN\r\n  *  \r\n * @return bool\r\n*/\r\nexport function Node_isConnected(window) {\r\n    if (!('isConnected' in window.Node.prototype)) {\r\n        Object.defineProperty(window.Node.prototype, 'isConnected', {get: function() {\r\n            return !this.ownerDocument || !(\r\n                this.ownerDocument.compareDocumentPosition(this)\r\n                & this.DOCUMENT_POSITION_DISCONNECTED);\r\n        }});\r\n    }\r\n}; \r\n\r\n/**\r\n * Polyfills the Element.prototype.matches() method\r\n * \r\n * @see MDN\r\n  *  \r\n * @return void\r\n*/\r\nexport function Element_matches(window) {\r\n    if (!window.Element.prototype.matches) {\r\n        window.Element.prototype.matches = \r\n        window.Element.prototype.matchesSelector || \r\n        window.Element.prototype.mozMatchesSelector ||\r\n        window.Element.prototype.msMatchesSelector || \r\n        window.Element.prototype.oMatchesSelector || \r\n        window.Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n                i = matches.length;\r\n            while (--i >= 0 && matches.item(i) !== this) {}\r\n            return i > -1;            \r\n        };\r\n    }\r\n}; \r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param window \t\t\t\twindow\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n * @param bool\t\t \t\t\tall\r\n *\r\n * @return Element|DOMNodeList\r\n */\r\nexport function querySelector(window, selector, context = null, all = false) {\r\n    context = context || window.document;\r\n\tvar matchedItems, method = all ? 'querySelectorAll' : 'querySelector';\r\n\ttry {\r\n\t\tmatchedItems = context[method](selector);\r\n\t} catch(e) {\r\n\t\ttry {\r\n\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':matches('));\r\n\t\t} catch(e) {\r\n\t\t\ttry {\r\n\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-webkit-any('));\r\n\t\t\t} catch(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tmatchedItems = context[method](selector.replace(/\\:is\\(/g, ':-moz-any('));\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn matchedItems;\r\n};\r\n\r\n/**\r\n * Queries a DOM context for elements matching\r\n * the given selector.\r\n *\r\n * @param window \t\t\t\twindow\r\n * @param string \t\t\t\tselector\r\n * @param document|Element\t    context\r\n *\r\n * @return DOMNodeList\r\n */\r\nexport function querySelectorAll(window, selector, context = window.document) {\r\n    return querySelector(window, selector, context, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ENV from '../ENV.js';\r\nimport Reflow from './Reflow.js';\r\nimport Mutation from './Mutation.js';\r\nimport polyfill from './polyfills.js';\r\nimport el from './el.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ctxt-Scope initializations.\r\n * ---------------------------\r\n */\r\n\r\nexport default function init(window, params = {}) {\r\n    if (window.WQ && window.WQ.DOM) {\r\n        return window.WQ.DOM;\r\n    }\r\n    const Ctxt = ENV.create(window, 'DOM', params);\r\n    Ctxt.ready = new Promise(resolve => {\r\n        window.document.addEventListener('DOMContentLoaded', () => resolve(window), false);\r\n        if (window.document.readyState === 'complete') {\r\n            resolve(window);\r\n        }\r\n    });\r\n    Ctxt.el = query => el(window, query);\r\n    // ------\r\n    polyfill(Ctxt);\r\n    Reflow.init(Ctxt);\r\n    Mutation.init(Ctxt);\r\n    // ------\r\n    return Ctxt;\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport { getVendor, getPrefix } from './vendor.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Centralized ENV initializer\r\n * for actual and virtual browser environments.\r\n * ---------------------------\r\n */\r\n\r\n export default class ENV {\r\n    static create(window, scope = null, params = {}) {\r\n        // Create global scope?\r\n        if (!window.WQ) {\r\n            // Is this params for global or sub scope?\r\n            let _params = scope ? {} : params;\r\n            let _vendor, _prefix;\r\n            window.WQ = {\r\n                get window() {\r\n                    return window;\r\n                },\r\n                get params() {\r\n                    return _params;\r\n                },\r\n                get vendor() {\r\n                    if (!_vendor) {\r\n                        _vendor = getVendor(window);\r\n                    }\r\n                    return _vendor;\r\n                },\r\n                get prefix() {\r\n                    if (!_prefix) {\r\n                        _prefix = getPrefix(window);\r\n                    }\r\n                    return _prefix;\r\n                },\r\n            };\r\n        } else if (!scope && !_isEmpty(params) && window.WQ.params !== params) {\r\n            throw new Error('Window has already been initialized with a different parans object.')\r\n        }\r\n        // Create sub scope\r\n        if (scope) {\r\n            if (!window.WQ[scope]) {\r\n                window.WQ[scope] = {\r\n                    get params() {\r\n                        return params;\r\n                    }\r\n                };\r\n                Object.setPrototypeOf(window.WQ[scope], window.WQ);\r\n            } else if (!_isEmpty(params) && window.WQ[scope].params !== params) {\r\n                throw new Error('\"' + scope + '\" has already been initialized with a different parans object.')\r\n            }\r\n            return window.WQ[scope];\r\n        }\r\n        return window.WQ;\r\n    }\r\n };","\r\n/**\r\n * Detects vendor type from the given window object\r\n * \r\n * @param window    window\r\n *\r\n * @return string\r\n */\r\nexport function getVendor(window) {\r\n    // Firefox 1.0+\r\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n    if (isFirefox) {\r\n        return 'firefox';\r\n    }\r\n    // Safari 3.0+ \"[object HTMLElementConstructor]\" \r\n    var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof window.safari !== 'undefined' && window.safari.pushNotification));\r\n    if (isSafari) {\r\n        return 'safari';\r\n    }\r\n    // Chrome 1 - 79\r\n    var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\r\n    // Edge (based on chromium) detection\r\n    var isEdgeChromium = isChrome && (window.navigator.userAgent.indexOf(\"Edg\") != -1);\r\n    // Opera 8.0+\r\n    var isOpera = (!!window.opr && !!window.opr.addons) || !!window.opera || window.navigator.userAgent.indexOf(' OPR/') >= 0;\r\n\r\n    // Internet Explorer 6-11\r\n    var isIE = /*@cc_on!@*/false || !!window.document.documentMode;\r\n    // Edge 20+\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    // Blink engine detection\r\n    var isBlink = (isChrome || isOpera) && !!window.CSS;\r\n    return isEdge ? 'edge' : (\r\n        isIE ? 'ie' : (\r\n            isOpera ? 'opera' : (\r\n                isEdgeChromium ? 'ie-chromium' : (\r\n                    isChrome ? 'chrome' : 'unknown'\r\n                )\r\n            )\r\n        )\r\n    );\r\n};\r\n\r\n/**\r\n * Returns the vendor-specific property prefix.\r\n *\r\n * @return object\r\n */\r\nexport function getPrefix(window) {\r\n    var styles = window.getComputedStyle(window.document.documentElement, '');\r\n    var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.Olink === '' && ['', 'o'])[1];\r\n    var api = (('WebKit|Moz|Ms|O').match(new RegExp('(' + prefix + ')', 'i')) || [])[1];\r\n    return {\r\n        api,\r\n        prefix,\r\n        css: '-' + prefix + '-',\r\n    };\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport { querySelector } from './polyfills.js';\r\n\r\n/**\r\n * Creates a DOM element\r\n * from any of markup, selector, HTMLElement.\r\n *\r\n * @param window \t\t\t\twindow\r\n * @param mixed \t\t\t\tinput\r\n *\r\n * @return bool\r\n */\r\nexport default function(window, input) {\r\n\tif (_isString(input)) {\r\n\t\tvar el;\r\n\t\tif (input.trim().startsWith('<')) {\r\n\t\t\t// Create a node from markup\r\n\t\t\tvar temp = window.document.createElement('div');\r\n\t\t\ttemp.innerHtml = input;\r\n\t\t\tel = temp.firstChild;\r\n\t\t} else {\r\n\t\t\tel = querySelector(window, input);\r\n\t\t}\r\n\t\treturn el;\r\n\t}\r\n\treturn input;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Binds callbacks to requestAnimationFrame()\r\n * to create a central \"read/write\" phases for Ctxt access.\r\n * ---------------------------\r\n */\r\n\t\t\t\r\nexport default class Reflow {\r\n\r\n\t/**\r\n\t * Inits Ctxt.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tstatic init(Ctxt) {\r\n\t\tif (Ctxt.Reflow) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCtxt.Reflow = new this(Ctxt);\r\n\t\tCtxt.Reflow._run();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the loop.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tconstructor(Ctxt) {\r\n\t\tthis.Ctxt = Ctxt;\r\n\t\tthis.readCallbacks = [];\r\n\t\tthis.writeCallbacks = [];\r\n\t\tthis.async = this.Ctxt.params.asyncDOM;\r\n\t}\r\n\r\n\t_run() {\r\n\t\tthis.Ctxt.window.requestAnimationFrame(() => {\r\n\t\t\tthis.readCallbacks.forEach((callback, i) => {\r\n\t\t\t\tif (callback && !callback()) {\r\n\t\t\t\t\tthis.readCallbacks[i] = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.writeCallbacks.forEach((callback, i) => {\r\n\t\t\t\tif (callback && !callback()) {\r\n\t\t\t\t\tthis.writeCallbacks[i] = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._run();\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"read\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonread(callback, withPromise = false) {\r\n\t\tif (withPromise) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.async === false) {\r\n\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.readCallbacks.push(() => {\r\n\t\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.async === false) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.readCallbacks.push(callback);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"write\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonwrite(callback, withPromise = false) {\r\n\t\tif (withPromise) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tif (this.async === false) {\r\n\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeCallbacks.push(() => {\r\n\t\t\t\t\t\tcallback(resolve, reject);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (this.async === false) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.writeCallbacks.push(callback);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * A special construct for Ctxt manipulations that span\r\n\t * one or more read/write cycles.\r\n\t *\r\n\t * @param function \tread\r\n\t * @param function \twrite\r\n\t * @param mixed\t\tprevTransaction\r\n\t *\r\n\t * @return void|mixed\r\n\t */\r\n\tcycle(read, write, prevTransaction) {\r\n\t\tthis.onread(() => {\r\n\t\t\t// Record initial values\r\n\t\t\tvar readReturn = read(prevTransaction);\r\n\t\t\tif (readReturn) {\r\n\t\t\t\t// Call erite, the transation\r\n\t\t\t\tvar callWrite = (readReturn) => {\r\n\t\t\t\t\tthis.onwrite(() => {\r\n\t\t\t\t\t\tvar writeReturn = write(readReturn, prevTransaction);\r\n\t\t\t\t\t\tif (writeReturn) {\r\n\t\t\t\t\t\t\t// Repeat transaction\r\n\t\t\t\t\t\t\tvar repeatTransaction = (writeReturn) => {\r\n\t\t\t\t\t\t\t\tthis.cycle(read, write, writeReturn);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\t\t\t// If \"write\" returns a promise, we wait until it is resolved\r\n\t\t\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\t\t\tif (writeReturn instanceof Promise) {\r\n\t\t\t\t\t\t\t\twriteReturn.then(repeatTransaction);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trepeatTransaction();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\t// ---------------------------------------\r\n\t\t\t\t// If \"read\" returns a promise, we wait until it is resolved\r\n\t\t\t\t// ---------------------------------------\r\n\t\t\t\tif (readReturn instanceof Promise) {\r\n\t\t\t\t\treadReturn.then(callWrite);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallWrite();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\n\r\n/**\r\n * ---------------------\r\n * Ctxt Mutation Utilities\r\n * ---------------------\r\n */\r\nexport default class Mutation {\r\n\t\r\n\t/**\r\n\t * Inits Ctxt.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tstatic init(Ctxt) {\r\n\t\tif (Ctxt.Mutation) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCtxt.Mutation = new this(Ctxt);\r\n\t}\r\n\r\n\t/**\r\n\t * Starts the loop.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tconstructor(Ctxt) {\r\n\t\tthis.Ctxt = Ctxt;\r\n\t}\r\n\r\n\t/**\r\n\t * ---------------------\r\n\t * PRESENCE\r\n\t * ---------------------\r\n\t */\r\n\t\t\r\n\t/**\r\n\t * Shortcut function to onPresenceChange().\r\n\t *\r\n\t * Observes when the given elements or selectors are added\r\n\t * to the given context.\r\n\t *\r\n\t * @param window\t\t\t\t\twindow\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonAdded(els, callback, params = {}) {\r\n\t\tparams.on = 'added';\r\n\t\treturn this.onPresenceChange(els, (el, presence) => {\r\n\t\t\tcallback(el, presence);\r\n\t\t}, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Shortcut function to onPresenceChange().\r\n\t *\r\n\t * Observes when the given elements or selectors are removed\r\n\t * from the given context.\r\n\t *\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonRemoved(els, callback, params = {}) {\r\n\t\tparams.on = 'removed';\r\n\t\treturn this.onPresenceChange(els, (el, presence) => {\r\n\t\t\tcallback(el, presence);\r\n\t\t}, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a MutationObserver that fires if currently, and whenever,\r\n\t * the given element, or selector, is present in the Ctxt.\r\n\t *\r\n\t * @param string|Element\t\t\t\tselector\r\n\t * @param function\t\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\t\tparams\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonPresent(selector, callback, params = {}) {\r\n\t\t// On Ctxt-ready\r\n\t\tthis.Ctxt.ready.then(window => {\r\n\t\t\t// On Ctxt mutation\r\n\t\t\tif (window.MutationObserver) {\r\n\t\t\t\tthis.onAdded(selector, (els, presence) => {\r\n\t\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t\t}, params);\r\n\t\t\t}\r\n\t\t\tif (_isString(selector)) {\r\n\t\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t\t// as the callback handler may trigger more additions\r\n\t\t\t\t_arrFrom(window.document.querySelectorAll(selector)).forEach(el => callback(el, 1));\r\n\t\t\t} else if (selector.parentNode) {\r\n\t\t\t\tcallback(selector, 1);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a MutationObserver that fires if currently, and whenever,\r\n\t * the given element, or selector, is absent in the Ctxt.\r\n\t *\r\n\t * @param string|Element\t\t\t\tselector\r\n\t * @param function\t\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\t\tparams\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonAbsent(selector, callback, params = {}) {\r\n\t\t// On Ctxt-ready\r\n\t\tthis.Ctxt.ready.then(window => {\r\n\t\t\t// On Ctxt mutation\r\n\t\t\tif (window.MutationObserver) {\r\n\t\t\t\tonRemoved(selector, (els, presence) => {\r\n\t\t\t\t\tels.forEach(el => callback(el, presence));\r\n\t\t\t\t}, params);\r\n\t\t\t}\r\n\t\t\tif (_isString(selector)) {\r\n\t\t\t\t// IMPORTANT: This must come after having observed mutations above\r\n\t\t\t\t// as the callback handler may trigger more removals\r\n\t\t\t\tif (_arrFrom(window.document.querySelectorAll(selector)).length === 0) {\r\n\t\t\t\t\tcallback(null, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (!selector.parentNode) {\r\n\t\t\t\tcallback(selector, 0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Observes when the given elements or selectors are added or removed\r\n\t * from the given context.\r\n\t *\r\n\t * @param array|Element|string\t\tels\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonPresenceChange(els, callback, params = {}) {\r\n\t\tels = _arrFrom(els, false/*castObject*/);\r\n\t\tvar search = (el, nodeListArray) => {\r\n\t\t\t// Filter out text nodes\r\n\t\t\tnodeListArray = nodeListArray.filter(node => node.matches);\r\n\t\t\tif (_isString(el)) {\r\n\t\t\t\t// Is directly mutated...\r\n\t\t\t\tvar matches = nodeListArray.filter(node => node.matches(el));\r\n\t\t\t\t// Is contextly mutated...\r\n\t\t\t\tif (params.observeIndirectMutation !== false) {\r\n\t\t\t\t\tmatches = nodeListArray\r\n\t\t\t\t\t\t.reduce((collection, node) => collection.concat(_arrFrom(node.querySelectorAll(el))), matches);\r\n\t\t\t\t\tif (matches.length) {\r\n\t\t\t\t\t\treturn matches;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Is directly mutated...\r\n\t\t\t\tif (nodeListArray.includes(el)) {\r\n\t\t\t\t\treturn [el];\r\n\t\t\t\t}\r\n\t\t\t\t// Is contextly mutated...\r\n\t\t\t\tif (params.observeIndirectMutation !== false && nodeListArray.length) {\r\n\t\t\t\t\tvar parentNode = el;\r\n\t\t\t\t\twhile(parentNode = parentNode.parentNode) {\r\n\t\t\t\t\t\tif (nodeListArray.includes(parentNode)) {\r\n\t\t\t\t\t\t\treturn [el];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar added = [], removed = [];\r\n\t\tvar subject = params.context || this.Ctxt.window.document.documentElement;\r\n\t\tvar mo = new this.Ctxt.window.MutationObserver(mutations => {\r\n\t\t\tif (!params.on || params.on === 'added') {\r\n\t\t\t\tvar matchedAddedNodes = [];\r\n\t\t\t\tels.forEach(el => {\r\n\t\t\t\t\tif (_isString(el)) {\r\n\t\t\t\t\t\tmatchedAddedNodes = mutations\r\n\t\t\t\t\t\t\t.reduce((matches, mut) => matches.concat(search(el, _arrFrom(mut.addedNodes)) || []), matchedAddedNodes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar matchedAsAddedNode = mutations\r\n\t\t\t\t\t\t\t.reduce((match, mut) => match || (search(el, _arrFrom(mut.addedNodes)) || [])[0], null);\r\n\t\t\t\t\t\tif (matchedAsAddedNode) {\r\n\t\t\t\t\t\t\tmatchedAddedNodes.push(matchedAsAddedNode);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (matchedAddedNodes.length) {\r\n\t\t\t\t\tif (params.onceEach) {\r\n\t\t\t\t\t\tvar newlyadded = _difference(matchedAddedNodes, added);\r\n\t\t\t\t\t\tif (newlyadded.length) {\r\n\t\t\t\t\t\t\tadded.push(...newlyadded);\r\n\t\t\t\t\t\t\tcallback(newlyadded, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (params.once) {\r\n\t\t\t\t\t\t\tmo.disconnect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcallback(matchedAddedNodes, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!params.on || params.on === 'removed') {\r\n\t\t\t\tvar matchedRemovedNodes = [];\r\n\t\t\t\tels.forEach(el => {\r\n\t\t\t\t\tif (_isString(el)) {\r\n\t\t\t\t\t\tmatchedRemovedNodes = mutations\r\n\t\t\t\t\t\t\t.reduce((matches, mut) => matches.concat(search(el, _arrFrom(mut.removedNodes)) || []), matchedRemovedNodes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar matchedAsRemovedNode = mutations\r\n\t\t\t\t\t\t\t.reduce((match, mut) => match || (search(el, _arrFrom(mut.removedNodes)) || [])[0], null);\r\n\t\t\t\t\t\tif (matchedAsRemovedNode) {\r\n\t\t\t\t\t\t\tmatchedRemovedNodes.push(matchedAsRemovedNode);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (matchedRemovedNodes.length) {\r\n\t\t\t\t\tif (params.onceEach) {\r\n\t\t\t\t\t\tvar newlyremoved = _difference(matchedRemovedNodes, removed);\r\n\t\t\t\t\t\tif (newlyremoved.length) {\r\n\t\t\t\t\t\t\tremoved.push(...newlyremoved);\r\n\t\t\t\t\t\t\tcallback(newlyremoved, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (params.once) {\r\n\t\t\t\t\t\t\tmo.disconnect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcallback(matchedRemovedNodes, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tmo.observe(subject, {childList:true, subtree:true});\r\n\t\treturn mo;\r\n\t}\r\n\r\n\t/**\r\n\t * ---------------------\r\n\t * MUTATIONS\r\n\t * ---------------------\r\n\t */\r\n\r\n\t/**\r\n\t * Observes changes in attributes of the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param array\t\t\t\t\t\tfilter\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonAttrChange(el, callback, filter = []) {\r\n\t\tvar observer = new this.Ctxt.window.MutationObserver(callback);\r\n\t\tvar params = {attributes:true, attributeOldValue:true};\r\n\t\tif (filter) {\r\n\t\t\tparams.attributeFilter = filter;\r\n\t\t}\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * Observes changes in tree/subtree of the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param bool\t\t\t\t\t\tsubtree\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonTreeChange(el, callback, subtree = false) {\r\n\t\tvar observer = new this.Ctxt.window.MutationObserver(callback);\r\n\t\tvar params = {childList:true, subtree};\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n\r\n\t/**\r\n\t * Observes mutations on the given element.\r\n\t *\r\n\t * @param Element\t\t\t\t\tel\r\n\t * @param function\t\t\t\t\tcallback\r\n\t * @param object\t\t\t\t\tparams\r\n\t *\r\n\t * @return MutationObserver\r\n\t */\r\n\tonMutation(el, callback, params) {\r\n\t\tvar observer = new this.Ctxt.window.MutationObserver(callback);\r\n\t\tobserver.observe(el, params);\r\n\t\treturn observer;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IfInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'IfConstruct'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Parser class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class Parser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, grammar, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !grammar && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _grammar = Object.values(grammar || this.grammar);\r\n\t\t\tfor (var i = 0; i < _grammar.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, _grammar[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!grammar && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = _grammar[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Expr, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar vars = [], deepVars = [], varsUnlodged = [], deepVarsUnlodged = [];\r\n\t\tvar parsed = Expr.parse(expr, (_expr, _grammar, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _grammar, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (subStmt instanceof ReferenceInterface) {\r\n\t\t\t\tvar hasCallHead, _context = subStmt;\r\n\t\t\t\twhile(_context = _context.context) {\r\n\t\t\t\t\tif (_context instanceof CallInterface) {\r\n\t\t\t\t\t\thasCallHead = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!hasCallHead && subStmt.role !== 'CONTEXT') {\r\n\t\t\t\t\tif (_params.lodge) {\r\n\t\t\t\t\t\tvarsUnlodged.push(subStmt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvars.push(subStmt);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (subStmt instanceof CallInterface) {\r\n\t\t\t\tvarsUnlodged.push(subStmt);\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tsubStmt.meta.vars.forEach(_var => vars.push(_var));\r\n\t\t\t\tsubStmt.meta.deepVars.forEach(_var => deepVars.push(_var));\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (parsed instanceof IndependentExprInterface) {\r\n\t\t\t\tparsed.meta = {\r\n\t\t\t\t\tvars: [], deepVars: [], varsUnlodged: [], deepVarsUnlodged: [], \r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta = {\r\n\t\t\t\t\tvars, deepVars, varsUnlodged, deepVarsUnlodged,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif ((parsed instanceof CallInterface)) {\r\n\t\t\t\tif (parsed.reference.context && !(parsed.reference.context instanceof CallInterface)) {\r\n\t\t\t\t\tparsed.meta.vars.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t} else if ((parsed instanceof IfInterface)) {\r\n\t\t\t\tif (parsed.onTrue) {\r\n\t\t\t\t\tparsed.onTrue.meta.vars.concat(parsed.onTrue.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onTrue.meta.varsUnlodged.concat(parsed.onTrue.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed.onFalse) {\r\n\t\t\t\t\tparsed.onFalse.meta.vars.concat(parsed.onFalse.meta.deepVars).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVars.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tparsed.onFalse.meta.varsUnlodged.concat(parsed.onFalse.meta.deepVarsUnlodged).forEach(_var => {\r\n\t\t\t\t\t\t_remove(parsed.meta.varsUnlodged, _var);\r\n\t\t\t\t\t\tparsed.meta.deepVarsUnlodged.push(_var);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.stringify(params)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new this(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.negation = '!';\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator, this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {lodge: false})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'ASSIGNMENT_SPECIFIER';\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BlockInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Block'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","/**\r\n * @imports\r\n */\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\n\r\n\r\n/**\r\n * UTILS\r\n */\r\nexport function pathStartsWith(a, b) {\r\n\treturn b.reduce((prev, value, i) => prev && value === a[i], true);\r\n};\r\nexport function pathAfter(a, b) {\r\n\treturn a.slice(b.length);\r\n};\r\nexport function pathIsSame(a, b) {\r\n\treturn a.length === b.length && a.reduce((prev, value, i) => prev && value === b[i], true);\r\n};\r\nexport function referencesToPaths(references) {\r\n    return references.map(expr => {\r\n        var seg = expr, pathArray = [];\r\n        do {\r\n            if (seg instanceof CallInterface) {\r\n                pathArray.splice(0);\r\n                seg = seg.reference;\r\n            }\r\n            if (_isString(seg.name)) {\r\n                pathArray.unshift(seg.name);\r\n            } else if (seg.name instanceof NumInterface) {\r\n                pathArray.unshift(seg.name.int);\r\n            } else if (seg.name instanceof StrInterface) {\r\n                pathArray.unshift(seg.name.expr);\r\n            } else {\r\n                pathArray.splice(0);\r\n            }\r\n        } while(seg = seg.context);\r\n        return pathArray;\r\n    });\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tthis.stack = stack;\r\n\t\tthis.params = params;\r\n\t\tif (!('main' in this.stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super = Scope.create(this.stack.super, {errorLevel: params.errorLevel});\r\n\t\t}\r\n\t\tthis.stack.local = this.stack.local || {};\r\n\t\tthis.stack.$local = this.stack.$local || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = true;\r\n\t\t_params.tags = [this, 'jsen-context',];\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\tchanges = changes.filter(delta => delta.name === 'main');\r\n\t\t\tvar references = changes.map(delta => delta.path.slice(1)).filter(path => path.length);\r\n\t\t\tvar props = references.map(path => path[0]);\r\n\t\t\tif (!references.length && changes.length && changes[0].value) {\r\n\t\t\t\tprops = _unique((\r\n\t\t\t\t\t\t_isTypeObject(changes[0].value) ? Object.keys(changes[0].value) : []\r\n\t\t\t\t\t).concat(changes[0].oldValue && _isTypeObject(changes[0].oldValue) ? Object.keys(changes[0].oldValue) : [])\r\n\t\t\t\t);\r\n\t\t\t\treferences = props.map(prop => [prop]);\r\n\t\t\t}\r\n\t\t\tif (props.filter(prop => !_has(this.stack.local, prop, trap)).length) {\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope:'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, callback) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, callback);\r\n\t\t}\r\n\t\ttrap.unobserve(this.stack, callback, {\r\n\t\t\tsubtree:true,\r\n\t\t\ttags:[this, 'jsen-context',],\r\n\t\t});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}) {\r\n\t\treturn cntxt instanceof Scope ? cntxt : new Scope({\r\n\t\t\tmain: cntxt,\r\n\t\t}, params);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport BlockInterface from './BlockInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport { referencesToPaths, pathStartsWith } from '../util.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Block class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Block extends BlockInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = stmts || [];\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\r\n\t\tvar returned, returnCallback = params.returnCallback;\r\n\t\tparams = {...params};\r\n\t\tparams.returnCallback = () => {\r\n\t\t\treturned = true;\r\n\t\t};\r\n\r\n\t\t// Current!\r\n\t\tcontext = Scope.create(context);\r\n\t\tvar callEval = (stmt, context, _params) => {\r\n\t\t\ttry {\r\n\t\t\t\treturn stmt.eval(context, _params);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (_params.catch) {\r\n\t\t\t\t\t_params.catch(e);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tvar results = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tvar stmt = this.stmts[i];\r\n\t\t\t// Lets be called...\r\n\t\t\tvar vars = referencesToPaths(stmt.meta.vars);\r\n\t\t\tvar deepVars = referencesToPaths(stmt.meta.deepVars || []);\r\n\t\t\tvar isDirectEventTarget = (params.references || []).filter(f => vars.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tvar isIndirectEventTarget = (params.references || []).filter(f => deepVars.filter(v => pathStartsWith(v, f)).length);\r\n\t\t\tif (!params.references || !params.references.length \r\n\t\t\t|| (isDirectEventTarget = isDirectEventTarget.length)\r\n\t\t\t|| (isIndirectEventTarget = isIndirectEventTarget.length)) {\r\n\t\t\t\tvar _params = params;\r\n\t\t\t\tif (isDirectEventTarget) {\r\n\t\t\t\t\t_params = {...params};\r\n\t\t\t\t\tdelete _params.references;\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = callEval(stmt, context, _params);\r\n\t\t\t\tif (stmt instanceof ReturnInterface || returned) {\r\n\t\t\t\t\tif (returnCallback) {\r\n\t\t\t\t\t\treturnCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn results[i];\r\n\t\t\t\t}\r\n\t\t\t\t// Add this change for subsequent statements\r\n\t\t\t\t// This is a local change!\r\n\t\t\t\tif (params.references && ((stmt instanceof AssignmentInterface) || (stmt instanceof DeletionInterface))) {\r\n\t\t\t\t\tparams.references = params.references.concat(referencesToPaths([stmt.reference]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.stmts.map(stmt => stmt.stringify(params)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr + ';', _flatten(this.operators).concat([Block.testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(stmt => parseCallback(stmt.trim())).filter(a => a),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic testBlockEnd(a, b) {\r\n\t\t// Cases of code blocks that won't end in \";\"\r\n\t\tif (a.endsWith('}') && !b.trim().startsWith('else')) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nBlock.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''))) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'CALL_SPECIFIER';\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tstrictlyNotEqualsTo: '!==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.constructor.operators[0], \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.constructor.operators[1], \r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar splits = Lexer.split(expr, this.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = [\r\n\t'?', \r\n\t':',\r\n];","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).del();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.operator + ' ' + this.reference.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(this.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim(), null, {lodge: false})) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treference.role = 'DELETION_SPECIFIER';\r\n\t\t\treturn new this(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport IndependentExprInterface from '../IndependentExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends IndependentExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@webqit/util/obj/copy.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar instance = this;\r\n\t\tparams = {...params};\r\n\t\tdelete params.returnCallback;\r\n\t\treturn function(...args) {\r\n\t\t\tvar newMainContext = {};\r\n\t\t\t_each(Object.keys(instance.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = instance.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tnewMainContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (instance.paramters[name] \r\n\t\t\t\t\t\t? instance.paramters[name].eval(context, params) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tif (!instance.arrowFunctionFormatting) {\r\n\t\t\t\tnewMainContext['this'] = this;\r\n\t\t\t}\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n\t\t\tvar nestedContext = new Scope({main:newMainContext, super:context}, {errorLevel});\r\n\t\t\tvar retrn = instance.statements.eval(nestedContext, params);\r\n\t\t\tif (instance.arrowFunctionFormatting.body === false) {\r\n\t\t\t\treturn retrn[0];\r\n\t\t\t}\r\n\t\t\treturn retrn;\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.stringify(params) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.stringify(params) : '{' + this.statements.stringify(params) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.stringify(params) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim(), null, {\r\n\t\t\t\t\t// Any varaibles should be added to public vars\r\n\t\t\t\t\tmeta: null,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar block = parseCallback(funcBody, [Block], {assert:false}) || parseCallback(funcBody, null, {\r\n\t\t\t// Any varaibles should be added to public vars\r\n\t\t\tmeta: null,\r\n\t\t});\r\n\t\treturn new this(\r\n\t\t\tparamters,\r\n\t\t\tblock.jsenType === 'Block' ? block : new Block([block]),\r\n\t\t\tarrowFunctionFormatting,\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport IfInterface from './IfInterface.js';\r\nimport Block from './Block.js';\r\nimport Scope from '../Scope.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst If = class extends IfInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse, params = {}) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t\tthis.params = params;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n        var errorLevel = context instanceof Scope ? context.params.errorLevel : undefined;\r\n        var _context = new Scope({\r\n            main:{}, \r\n            super:context,\r\n        }, {type: 2, errorLevel});\r\n\t\treturn  this.assertion.eval(context/** original context */, params)\r\n\t\t\t? (this.onTrue ? this.onTrue.eval(_context, params) : undefined)\r\n            : (this.onFalse ? this.onFalse.eval(_context, params) : undefined);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n        var onTrue = this.onTrue && this.params.onTrueIsBlock \r\n            ? '{' + this.onTrue.stringify(params) + '}' \r\n            : (this.onTrue ? this.onTrue.stringify(params) : '');\r\n        var onFalse = this.onFalse && this.params.onFalseIsBlock \r\n            ? '{' + this.onFalse.stringify(params) + '}' \r\n            : (this.onFalse ? this.onFalse.stringify(params) : '');\r\n\t\treturn 'if (' + this.assertion.stringify(params) + ')' + onTrue + (onFalse ? ' else ' + onFalse : '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n        expr = expr.trim();\r\n        var splits;\r\n        if (expr.startsWith('if') \r\n\t\t&& (splits = Lexer.split(expr, [], {limit:2}/*IMPORTANT*/).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n            var assertion = parseCallback(_unwrap(splits.shift().trim(), '(', ')').trim());\r\n            var rest = Lexer.split(splits.shift().trim(), ['else'], {limit:1}/*IMPORTANT*/);\r\n            var onTrue = rest.shift().trim(), onTrueIsBlock, onFalse = (rest.shift() || '').trim(), onFalseIsBlock;\r\n            if (_wrapped(onTrue, '{', '}')) {\r\n                // The braces gives us the onTrue block\r\n                onTrueIsBlock = true;\r\n                onTrue = _unwrap(onTrue, '{', '}').trim();\r\n            }\r\n            onTrue = parseCallback(onTrue, [Block], {assert:false, meta:null}) || parseCallback(onTrue, null, {meta:null});\r\n            if (onFalse) {\r\n                if (_wrapped(onFalse, '{', '}')) {\r\n                    // The braces gives us the onTrue block\r\n                    onFalseIsBlock = true;\r\n                    onFalse = _unwrap(onFalse, '{', '}').trim();\r\n                }\r\n                onFalse = parseCallback(onFalse, [Block], {assert:false, meta:null}) || parseCallback(onFalse, null, {meta:null});\r\n            }\r\n\t\t\treturn new this(assertion, onTrue, onFalse, {\r\n                    onTrueIsBlock,\r\n                    onFalseIsBlock,\r\n                }\r\n            );\r\n         }\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default If;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, params);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.stringify(params));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new this(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * PresenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'PresenceOperator'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport PresenceInterface from './PresenceInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Presence class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Presence = class extends PresenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(prop, reference, operator = 'in') {\r\n\t\tsuper();\r\n\t\tthis.prop = prop;\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar prop = this.prop.eval(context, params);\r\n\t\ttry {\r\n\t\t\treturn this.reference.getEval(context, params).has(prop);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.prop.stringify(params), this.operator, this.reference.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar prop, reference;\r\n\t\t\tif (!(prop = parseCallback(parse.tokens.shift().trim()))\r\n\t\t\t|| !((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(prop, reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nPresence.operators = [' in '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Presence;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, params = {}) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, params);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, params);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name, args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\treturn this.getEval(context, params).get();\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.role = 'CONTEXT';\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr ? this.expr.eval(context, params) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.expr ? 'return ' + this.expr.stringify(params) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport Abstraction from './grammar/Abstraction.js';\r\nimport AbstractionInterface from './grammar/AbstractionInterface.js';\r\nimport Arr from './grammar/Arr.js';\r\nimport ArrInterface from './grammar/ArrInterface.js';\r\nimport Arguments from './grammar/Arguments.js';\r\nimport ArgumentsInterface from './grammar/ArgumentsInterface.js';\r\nimport Assertion from './grammar/Assertion.js';\r\nimport AssertionInterface from './grammar/AssertionInterface.js';\r\nimport Assignment from './grammar/Assignment.js';\r\nimport AssignmentInterface from './grammar/AssignmentInterface.js';\r\nimport Block from './grammar/Block.js';\r\nimport BlockInterface from './grammar/BlockInterface.js';\r\nimport Bool from './grammar/Bool.js';\r\nimport BoolInterface from './grammar/BoolInterface.js';\r\nimport Call from './grammar/Call.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport Comparison from './grammar/Comparison.js';\r\nimport ComparisonInterface from './grammar/ComparisonInterface.js';\r\nimport Condition from './grammar/Condition.js';\r\nimport ConditionInterface from './grammar/ConditionInterface.js';\r\nimport Deletion from './grammar/Deletion.js';\r\nimport DeletionInterface from './grammar/DeletionInterface.js';\r\nimport Func from './grammar/Func.js';\r\nimport FuncInterface from './grammar/FuncInterface.js';\r\nimport If from './grammar/If.js';\r\nimport IfInterface from './grammar/IfInterface.js';\r\nimport Math from './grammar/Math.js';\r\nimport MathInterface from './grammar/MathInterface.js';\r\nimport Num from './grammar/Num.js';\r\nimport NumInterface from './grammar/NumInterface.js';\r\nimport Obj from './grammar/Obj.js';\r\nimport ObjInterface from './grammar/ObjInterface.js';\r\nimport Presence from './grammar/Presence.js';\r\nimport PresenceInterface from './grammar/PresenceInterface.js';\r\nimport Reference from './grammar/Reference.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport Return from './grammar/Return.js';\r\nimport ReturnInterface from './grammar/ReturnInterface.js';\r\nimport Str from './grammar/Str.js';\r\nimport StrInterface from './grammar/StrInterface.js';\r\nimport Void from './grammar/Void.js';\r\nimport VoidInterface from './grammar/VoidInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nexport default {\r\n\tIf: If,\t\t\t\t\t\t// if (condition) expr1 else expre2\r\n\t//Block: Block,\t\t\t\t// field1 = 3; field2 = val2\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tPresence: Presence,\t\t\t// key1 in field1\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tVoid: Void,\t\t\t\t\t// null|undefined\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tIndependentExprInterface,\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBlock,\r\n\tBool,\r\n\tCall,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tIf,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tPresence,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tVoid,\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBlockInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tIfInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tPresenceInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tVoidInterface,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Parser from './Parser.js';\r\nimport grammar from './grammar.js';\r\nimport Scope from './Scope.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nParser.grammar = grammar;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Parser;\r\nexport {\r\n\tScope,\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport { Scope } from '@webqit/subscript';\r\n\r\n/**\r\n * ---------------------------\r\n * The Contexts class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default Scope;\r\n","\r\n/**\r\n * @ENV\r\n */\r\nexport default {\r\n    SCRIPT_ELEMENT: 'script[type=\"scoped\"]',\r\n    GLOBAL_BINDING_METHOD: 'bind',\r\n    LOCAL_BINDING_METHOD: 'bind',\r\n    SCRIPT_INERT_CONTEXTS: [],\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport Subscript from '@webqit/subscript';\r\nimport { Block } from '@webqit/subscript/src/grammar.js';\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _arrFrom from '@webqit/util/arr/from.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _any from '@webqit/util/arr/any.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport meta from '../meta.js';\r\nimport Scope from './Scope.js';\r\nimport params from './params.js';\r\n\r\n/**\r\n * ---------------------------\r\n * The ScopedJS class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default function init(Ctxt) {\r\n\r\n    var globalRuntimeInitializationWaitlist = [],\r\n        globalRuntimeInitialized = false,\r\n        globalAutorun = false;\r\n    Ctxt.ready.then(window => {\r\n        globalAutorun = meta.call(Ctxt, 'script-autorun');\r\n    });\r\n\r\n    // ----------------------\r\n    // Helpers\r\n    // ----------------------\r\n\r\n    const getVal = (target, key) => {\r\n        if (Ctxt.Observer) {\r\n            return Ctxt.Observer.get(target, key);\r\n        }\r\n        return target[key];\r\n    };\r\n\r\n    const delVal = (target, key) => {\r\n        if (Ctxt.Observer) {\r\n            return Ctxt.Observer.deleteProperty(target, key);\r\n        }\r\n        delete target[key];\r\n        return true;\r\n    };\r\n\r\n    const setVal = (target, key, value) => {\r\n        if (Ctxt.Observer) {\r\n            Ctxt.Observer.set(target, key, value);\r\n        } else {\r\n            target[key] = value;\r\n        }\r\n        return target;\r\n    };\r\n\r\n    const mergeVal = (target, value) => {\r\n        if (Ctxt.Observer) {\r\n            Ctxt.Observer.set(target, value);\r\n        } else {\r\n            Object.keys(value).forEach(key => {\r\n                target[key] = value[key];\r\n            });\r\n        }\r\n        return target;\r\n    };\r\n\r\n    const getScriptBase = function(target) {\r\n        if (!target['.oohtml']) {\r\n            target['.oohtml'] = {};\r\n        }\r\n        if (!target['.oohtml'].scopedJS) {\r\n            // Create scope\r\n            target['.oohtml'].scopedJS = {\r\n                scope: new Scope(setVal({\r\n                    super: new Scope(setVal({\r\n                        super: globalScopeInstance,\r\n                    }, 'main', setVal({}, 'this', target))),\r\n                }, 'main', {})),\r\n            };\r\n            // Watch scope\r\n            target['.oohtml'].scopedJS.scope.observe(Ctxt.Observer, e => {\r\n                if (target.isConnected && !target['.oohtml'].scopedJS.inWaitlist) {\r\n                    applyBinding(target, e);\r\n                }\r\n            }, {diff: true});\r\n        }\r\n        return target['.oohtml'].scopedJS;\r\n    };\r\n\r\n    const applyBinding = function(target, event) {\r\n        var targetScriptBase = getScriptBase(target);\r\n        targetScriptBase.inWaitlist = false;\r\n        var params = {\r\n            references: (event || {}).references, \r\n            catch: e => {\r\n                if (targetScriptBase.errorLevel === 2) {\r\n                    console.error(target, e);\r\n                } else if (targetScriptBase.errorLevel !== 0) {\r\n                    console.warn(target, e.message);\r\n                }\r\n            },\r\n            trap: Ctxt.Observer,\r\n        };\r\n        if (targetScriptBase.AST) {\r\n            var returnValue = targetScriptBase.AST.eval(targetScriptBase.scope, params);\r\n            if (_isFunction(returnValue)) {\r\n                returnValue(targetScriptBase.scope.stack.main);\r\n            }\r\n        }\r\n    };\r\n\r\n    const globalScopeInstance = new Scope(setVal({\r\n        super: new Scope({main: Ctxt.window})\r\n    }, 'main', {}), {\r\n        errorLevel:params.errorLevel,\r\n    });\r\n\r\n    // ----------------------\r\n    // Capture scripts\r\n    // ----------------------\r\n\r\n    Ctxt.Mutation.onPresent(params.SCRIPT_ELEMENT, (scriptElement, p) => {\r\n        if (_any(params.SCRIPT_INERT_CONTEXTS, inertContext => scriptElement.closest(inertContext)) || !scriptElement.parentNode) {\r\n            return;\r\n        }\r\n        // Remove\r\n        var srcCode, parentNode = scriptElement.parentNode, scriptBase = getScriptBase(parentNode);\r\n        if (!meta.call(Ctxt, 'isomorphic')) {\r\n            scriptElement.remove();\r\n        }\r\n        if (scriptBase.scriptElement === scriptElement) {\r\n            return;\r\n        }\r\n        if (scriptBase.scriptElement) {\r\n            throw new Error('An element must only have one scopedJS instance!');\r\n        }\r\n        scriptBase.scriptElement = scriptElement;\r\n        if (!(srcCode = (scriptElement.textContent || '').trim())) {\r\n            return;\r\n        }\r\n        // ------\r\n        // Parse\r\n        // ------\r\n        var explain = [], shouldExplain = scriptElement.hasAttribute('explain') || meta.call(Ctxt, 'script-explain');\r\n        scriptBase.AST = parse(srcCode, {\r\n            explain: shouldExplain ? explain : null,\r\n        });\r\n        if (shouldExplain) {\r\n            console.log(parentNode, explain);\r\n        }\r\n        // ------\r\n        // Eval\r\n        // ------\r\n        scriptBase.errorLevel = scriptElement.getAttribute('errors') \r\n            ? parseInt(scriptElement.getAttribute('errors'))\r\n            : meta.call(Ctxt, 'script-errors');\r\n        if (globalRuntimeInitialized || scriptBase.hasBindings || globalAutorun || scriptElement.hasAttribute('autorun')) {\r\n            applyBinding(parentNode);\r\n        } else {\r\n            scriptBase.inWaitlist = true;\r\n            globalRuntimeInitializationWaitlist.push(parentNode);\r\n        }\r\n    });\r\n\r\n    // ----------------------\r\n    // Define the \"local\" binding method on Element.prototype\r\n    // ----------------------\r\n\r\n    if (params.LOCAL_BINDING_METHOD in Ctxt.window.Element.prototype) {\r\n        throw new Error('The \"Element\" class already has a \"' + params.LOCAL_BINDING_METHOD + '\" property!');\r\n    }\r\n    Object.defineProperty(Ctxt.window.Element.prototype, params.LOCAL_BINDING_METHOD, {\r\n        value: function(binding, params = {}) {\r\n            let scriptBase = getScriptBase(this);\r\n            // NOTE that this element if in waitlist won't be called by this mergeVal()/setVal()\r\n            if (params.update) {\r\n                mergeVal(scriptBase.scope.stack.main, binding);\r\n            } else {\r\n                setVal(scriptBase.scope.stack, 'main', binding);\r\n            }\r\n            scriptBase.hasBindings = true;\r\n            // Explicitly remove from waitlist\r\n            if (globalRuntimeInitializationWaitlist.includes(this)) {\r\n                _remove(globalRuntimeInitializationWaitlist, this);\r\n                applyBinding(this);\r\n            }\r\n        }\r\n    });\r\n\r\n    if ('bindings' in Ctxt.window.Element.prototype) {\r\n        throw new Error('The \"Element\" class already has a \"bindings\" property!');\r\n    }\r\n    Object.defineProperty(Ctxt.window.Element.prototype, 'bindings', {\r\n        get: function() {\r\n            var $this = this,\r\n                scriptBase = getScriptBase($this);\r\n            if (!scriptBase.scopeInstanceProxy) {\r\n                // Same proxy instance, even if scriptBase.scope.stack.main\r\n                // is later changed\r\n                scriptBase.scopeInstanceProxy = new Proxy(scriptBase.scope.stack.main, {\r\n                    set: (target, key, value) => {\r\n                        // NOTE that this element if in waitlist won't be called by this setVal()\r\n                        setVal(scriptBase.scope.stack.main, key, value);\r\n                        scriptBase.hasBindings = true;\r\n                        // Explicitly remove from waitlist\r\n                        if (globalRuntimeInitializationWaitlist.includes($this)) {\r\n                            _remove(globalRuntimeInitializationWaitlist, $this);\r\n                            applyBinding($this);\r\n                        }\r\n                        return true;\r\n                    },\r\n                    get: (target, key) => {\r\n                        return getVal(scriptBase.scope.stack.main, key);\r\n                    },\r\n                    deleteProperty: (target, key) => {\r\n                        return delVal(scriptBase.scope.stack.main, key);\r\n                    },\r\n                });\r\n            }\r\n            return scriptBase.scopeInstanceProxy;\r\n        },\r\n    });\r\n\r\n    // ----------------------\r\n    // Define the global \"scopedJS\" object\r\n    // ----------------------\r\n\r\n    if (params.GLOBAL_BINDING_METHOD in Ctxt.window.document) {\r\n        throw new Error('document already has a \"' + params.GLOBAL_BINDING_METHOD + '\" property!');\r\n    }\r\n    Object.defineProperty(Ctxt.window.document, params.GLOBAL_BINDING_METHOD, {\r\n        value: function(binding, params = {}) {\r\n            // NOTE that elements in waitlist won't be called by this mergeVal()/setVal()\r\n            if (params.update) {\r\n                mergeVal(globalScopeInstance.stack.main, binding);\r\n            } else {\r\n                setVal(globalScopeInstance.stack, 'main', binding);\r\n            }\r\n            // Explicitly empty waitlist\r\n            var waitingElement;\r\n            while(waitingElement = globalRuntimeInitializationWaitlist.shift()) {\r\n                applyBinding(waitingElement);\r\n            }\r\n            globalRuntimeInitialized = true;\r\n        },\r\n    });\r\n\r\n    if ('bindings' in Ctxt.window.document) {\r\n        throw new Error('document already has a \"bindings\" property!');\r\n    }\r\n    var globalScopeInstanceProxy;\r\n    Object.defineProperty(Ctxt.window.document, 'bindings', {\r\n        get: function() {\r\n            if (!globalScopeInstanceProxy) {\r\n                // Same proxy instance, even if globalScopeInstance.stack.main\r\n                // is later changed\r\n                globalScopeInstanceProxy = new Proxy(globalScopeInstance.stack.main, {\r\n                    set: (target, key, value) => {\r\n                        // NOTE that elements in waitlist won't be called by this setVal()\r\n                        setVal(globalScopeInstance.stack.main, key, value);\r\n                        // Explicitly empty waitlist\r\n                        var waitingElement;\r\n                        while(waitingElement = globalRuntimeInitializationWaitlist.shift()) {\r\n                            applyBinding(waitingElement);\r\n                        }\r\n                        globalRuntimeInitialized = true;\r\n                        return true;\r\n                    },\r\n                    get: (target, key) => {\r\n                        return getVal(globalScopeInstance.stack.main, key);\r\n                    },\r\n                    deleteProperty: (target, key) => {\r\n                        return delVal(globalScopeInstance.stack.main, key);\r\n                    },\r\n                });\r\n            }\r\n            return globalScopeInstanceProxy;\r\n        },\r\n    });\r\n};\r\n\r\n/**\r\n * @parse\r\n */\r\nfunction parse(script, params = {}) {\r\n    var AST;\r\n    if (!(AST = Subscript.parse(script, [Block], _merge({assert:false}, params)))) {\r\n        AST = new Block([Subscript.parse(script, null, params)]);\r\n    }\r\n    return AST;\r\n}\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport DOMInit from '@webqit/browser-pie/src/dom/index.js';\r\nimport ScopedJS from './index.js';\r\n\r\n/**\r\n * @init\r\n */\r\nScopedJS(DOMInit(window));"],"sourceRoot":""}