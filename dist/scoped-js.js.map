{
  "version": 3,
  "sources": ["../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/js/isNumber.js", "../node_modules/@webqit/util/js/isNumeric.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/arr/pushUnique.js", "../node_modules/@webqit/util/obj/getPrototypeChain.js", "../node_modules/@webqit/util/obj/getAllPropertyNames.js", "../node_modules/@webqit/util/obj/mergeCallback.js", "../node_modules/@webqit/util/obj/merge.js", "../node_modules/@webqit/util/arr/from.js", "../node_modules/@webqit/util/obj/get.js", "../node_modules/@webqit/util/obj/set.js", "../node_modules/@webqit/dom/src/Realtime.js", "../node_modules/@webqit/dom/src/Reflow.js", "../node_modules/@webqit/dom/src/polyfills.js", "../node_modules/@webqit/dom/src/index.js", "../../subscript/src/params.js", "../../subscript/src/util.js", "../../subscript/src/runtime/inspect.js", "../../subscript/src/runtime/Contract.js", "../../subscript/src/runtime/Runtime.js", "../../subscript/src/SubscriptFunctionLite.js", "../src/scoped-js/index.js", "../src/scoped-js/targets.browser.js"],
  "sourcesContent": ["\n/**\n * Tells if val is pure object.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\n};\n", "\n/**\n * Tells if val is of type \"array\".\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val);\n};\n", "\n/**\n * Tells if val is of type \"function\".\n * This holds true for both regular functions and classes.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn typeof val === 'function';\n};\n", "\n/**\n * Tells if val is undefined or is null.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val === null || val === '';\n};\n", "\n/**\n * Tells if val is undefined or is of type \"undefined\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"object\".\n * This holds true for anything object, including built-ins.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\n};\n", "\n/**\n * @imports\n */\nimport _isNull from './isNull.js';\nimport _isUndefined from './isUndefined.js';\nimport _isTypeObject from './isTypeObject.js';\n\n/**\n * Tells if val is empty in its own type.\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\n * objects without keys, empty arrays.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"function\".\n *\n * @param object \t\tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\n};\n", "\n/**\n * Tells if val is of type \"number\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val instanceof Number || (typeof val === 'number');\n};\n", "\n/**\n * @imports\n */\nimport _isNumber from './isNumber.js';\n/**\n * Tells if val is of type \"string\" or a numeric string.\n * This holds true for both numbers and numeric strings.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\n};\n", "\n/**\n * Tells if val is of type \"string\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\n};\n", "\n/**\n * @imports\n */\nimport _isString from './isString.js';\nimport _isUndefined from './isUndefined.js';\n\n/**\n * Tells if val is \"array-like\".\n * This holds true for anything that has a length property.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !_isString(val) && !_isUndefined(val.length);\n};\n", "\n/**\n * Adds an item if not already exist.\n *\n * @param array \tarr\n * @param array\t \t...itms\n *\n * @return array\n */\nexport default function(arr, ...items) {\n\titems.forEach(itm => {\n\t\tif (arr.indexOf(itm) < 0) {\n\t\t\tarr.push(itm);\n\t\t}\n\t});\n\treturn arr;\n};\n", "\n/**\n * @imports\n */\nimport _isArray from '../js/isArray.js';\n\n/**\n * Returns the prototype chain.\n *\n * @param object \t\tobj\n * @param object\t \tuntil\n *\n * @return bool\n */\nexport default function(obj, until) {\n\tuntil = until || Object.prototype;\n\tuntil = until && !_isArray(until) ? [until] : until;\n\t// We get the chain of inheritance\n\tvar prototypalChain = [];\n\tvar obj = obj;\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\n\t\tprototypalChain.push(obj);\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\n\t}\n\treturn prototypalChain;\n};\n", "\n/**\n * @imports\n */\nimport _pushUnique from '../arr/pushUnique.js';\nimport _getPrototypeChain from './getPrototypeChain.js';\n\n/**\n * Eagerly retrieves object members all down the prototype chain.\n *\n * @param object\t \tobj\n * @param object\t \tuntil\n *\n * @return array\n */\nexport default function(obj, until) {\n\tvar keysAll = [];\n\t_getPrototypeChain(obj, until).forEach(obj => {\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\n\t});\n\treturn keysAll;\n};\n", "\n/**\n * @imports\n */\nimport _isArray from '../js/isArray.js';\nimport _isFunction from '../js/isFunction.js';\nimport _isObject from '../js/isObject.js';\nimport _isTypeObject from '../js/isTypeObject.js';\nimport _isNumeric from '../js/isNumeric.js';\nimport _getAllPropertyNames from './getAllPropertyNames.js';\n\n/**\n  * Merges values from subsequent arrays/objects first array/object;\n  * optionally recursive\n  *\n  * @param array ...objs\n  *\n  * @return void\n  */\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\n\tvar depth = 0;\n\tvar obj1 = objs.shift();\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\n\t\tdepth = obj1;\n\t\tobj1 = objs.shift();\n\t}\n\tif (!objs.length) {\n\t\tthrow new Error('_merge() requires two or more array/objects.');\n\t}\n\tobjs.forEach((obj2, i) => {\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\n\t\t\treturn;\n\t\t}\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\n\t\t\tif (!callback(key, obj1, obj2, i)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar valAtObj1 = obj1[key];\n\t\t\tvar valAtObj2 = obj2[key];\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \n\t\t\t&& (depth === true || depth > 0)) {\n\t\t\t\t// RECURSE...\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\n\t\t\t} else {\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\n\t\t\t\t\tif (isReplace) {\n\t\t\t\t\t\tobj1[key] = valAtObj2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobj1.push(valAtObj2);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// In case we're setting a read-only property\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (withSymbols) {\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\treturn obj1;\n};\n", "\n/**\n * @imports\n */\nimport _mergeCallback from './mergeCallback.js';\n\n/**\n  * Merges values from subsequent arrays/objects first array/object;\n  * optionally recursive\n  *\n  * @param array ...objs\n  *\n  * @return void\n  */\nexport default function(...objs) {\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\n\t\treturn true;\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\n};\n", "\n/**\n * @imports\n */\nimport _isArray from '../js/isArray.js';\nimport _isTypeArray from '../js/isTypeArray.js';\nimport _isEmpty from '../js/isEmpty.js';\nimport _isObject from '../js/isObject.js';\n\n/**\n * Casts an array-like object to an array.\n *\n * @param mixed \tval\n * @param bool\t \tcastObject\n *\n * @return array\n */\nexport default function(val, castObject = true) {\n\tif (_isArray(val)) {\n\t\treturn val;\n\t};\n\tif (!castObject && _isObject(val)) {\n\t\treturn [val];\n\t};\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\n\t\treturn [];\n\t};\n\tif (_isTypeArray(val)) {\n\t\treturn Array.prototype.slice.call(val);\n\t};\n\tif (_isObject(val)) {\n\t\treturn Object.values(val);\n\t};\n\treturn [val];\n};\n", "\n/**\n * @imports\n */\nimport _isTypeObject from '../js/isTypeObject.js';\nimport _isUndefined from '../js/isUndefined.js';\nimport _isNull from '../js/isNull.js';\nimport _arrFrom from '../arr/from.js';\n\n/**\n * Retrieves the value at the given path.\n *\n * A return value of undefined is ambiguous, and can mean either that the\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\n * know whether the path actually exists, pass an object as a third argument.\n * This object will have an \"exists\" key set to true/false.\n *\n * @param object \t\t\t\tctxt\n * @param array \t\t\t\tpath\n * @param object \t\t\t\ttrap\n * @param object \t\t\t\treciever\n *\n * @return mixed\n */\nexport default function(ctxt, path, trap = {}, reciever = {}) {\n\tpath = _arrFrom(path).slice();\n\tvar _ctxt = ctxt;\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\n\t\tvar _key = path.shift();\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\n\t\t\treciever.exists = false;\n\t\t\treturn;\n\t\t}\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\n\t}\n\treciever.exists = true;\n\treturn _ctxt;\n};\n", "\n/**\n * @imports\n */\nimport _isTypeObject from '../js/isTypeObject.js';\nimport _isFunction from '../js/isFunction.js';\nimport _isNumeric from '../js/isNumeric.js';\nimport _isArray from '../js/isArray.js';\nimport _arrFrom from '../arr/from.js';\nimport _get from './get.js';\n\n/**\n * Sets a value to the given path.\n *\n * @param object \t\t\t\tobj\n * @param array \t\t\t\tpath\n * @param mixed \t\t\t\tval\n * @param object|function \t\tbuildTree\n * @param object \t\t\t\ttrap\n *\n * @return bool\n */\nexport default function(obj, path, val, buildTree = {}, trap = {}) {\n\tconst _set = (target, key, val) => {\n\t\tif (trap.set) {\n\t\t\treturn trap.set(target, key, val);\n\t\t} else {\n\t\t\tif (_isNumeric(path[i]) && _isArray(target)) {\n\t\t\t\ttarget.push(val);\n\t\t\t} else {\n\t\t\t\ttarget[key] = val;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n\tpath = _arrFrom(path);\n\tvar target = obj;\n\tfor(var i = 0; i < path.length; i ++) {\n\t\tif (i < path.length - 1) {\n\t\t\tif (!target || (!_isTypeObject(target) && !_isFunction(target))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar branch = _get(target, path[i], trap);\n\t\t\tif (!_isTypeObject(branch)) {\n\t\t\t\tif (trap.buildTree === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tbranch = _isFunction(trap.buildTree) ? trap.buildTree(i) : (_isNumeric(path[i + 1]) ? [] : {});\n\t\t\t\tvar branchSuccess = _set(target, path[i], branch);\n\t\t\t\tif (!branchSuccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget = branch;\n\t\t} else {\n\t\t\treturn _set(target, path[i], val);\n\t\t}\n\t}\n};\n", "\r\n/**\r\n * @imports\r\n */\r\nimport { _isFunction, _isString, _isObject } from '@webqit/util/js/index.js';\r\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\r\n\r\n/**\r\n * ---------------------\r\n * Ctxt Mutations Utilities\r\n * ---------------------\r\n */\r\n\r\n/**\r\n *\r\n * @var Map\r\n */\r\nexport default window => {\r\n\tconst wq = window.wq;\r\n\twq.apiMutationsBindings = [ new Map, new Map, ];\r\n\twq.apiMutationsBindings.hasListeners = () => wq.apiMutationsBindings.some( x => x.size );\r\n\twq.apiMutationsHooks = new Set;\r\n\treturn class Realtime {\r\n\r\n\t\t/**\r\n\t\t * Observes changes in attributes of the given element.\r\n\t\t *\r\n\t\t * @param Element\t\t\t\t\tcontext\r\n\t\t * @param array\t\t\t\t\t\tfilter\r\n\t\t * @param function\t\t\t\t\tcallback\r\n\t\t *\r\n\t\t * @return Realtime\r\n\t\t */\r\n\t\tattr( context, filter, callback ) {\r\n\t\t\t[ context, filter, callback ] = resolveArgs( arguments );\r\n\t\t\tconst mo = new window.MutationObserver( records => {\r\n\t\t\t\trecords.forEach( record => callback( {\r\n\t\t\t\t\ttarget: record.target,\r\n\t\t\t\t\tname: record.attributeName,\r\n\t\t\t\t\toldValue: record.oldValue,\r\n\t\t\t\t\ttype: 'attribute-record',\r\n\t\t\t\t}, context ) );\r\n\t\t\t} );\r\n\t\t\tconst params = { attributes: true, attributeOldValue: true };\r\n\t\t\tif ( filter.length ) { params.attributeFilter = filter; }\r\n\t\t\tmo.observe( context, params );\r\n\t\t\treturn mo;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Mutation matching\r\n\t\t *\r\n\t\t * @param document|Element\t\t\tcallback\r\n\t\t * @param array|Element|string\t\tselectors\r\n\t\t * @param function\t\t\t\t\tcallback\r\n\t\t * @param object\t\t\t\t\tparams\r\n\t\t *\r\n\t\t * @return void\r\n\t\t */\r\n\t\tmatch( context, selectors, callback, params = {} ) {\r\n\t\t\t[ context, selectors, callback, params = {} ] = resolveArgs( arguments );\r\n\t\t\t// ------------------\r\n\t\t\tconst records = new Set, getRecord = target => {\r\n\t\t\t\tif ( !records.has( target ) ) {\r\n\t\t\t\t\trecords.set( target, {\r\n\t\t\t\t\t\ttarget, \r\n\t\t\t\t\t\tconnectedNodes: [], \r\n\t\t\t\t\t\tdisconnectedNodes: [],\r\n\t\t\t\t\t\ttype: 'query-record',\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t\treturn records.get( target );\r\n\t\t\t};\r\n\t\t\t// ------------------\r\n\t\t\tif ( selectors.every( selector => _isString( selector ) ) && ( selectors = selectors.join( ',' ) ) ) {\r\n\t\t\t\tif ( !params.on || params.on === 'connected' ) {\r\n\t\t\t\t\t( params.subtree ? context.querySelectorAll( selectors ) : context.children || [] ).forEach( node => {\r\n\t\t\t\t\t\tgetRecord( node.parentNode ).connectedNodes.push( node );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else if ( selectors.every( selector => _isObject( selector ) ) ) {\r\n\t\t\t\tif ( context !== document || params.subtree ) {\r\n\t\t\t\t\tselectors.forEach( node => {\r\n\t\t\t\t\t\tconst isConnected = context === document ? node.isConnected : (\r\n\t\t\t\t\t\t\tnode.parentNode === context || ( params.subtree && context.contains( node ) )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( ( ( !params.on || params.on === 'connected' ) && isConnected ) || ( params.on === 'disconnected' && !isConnected ) ) {\r\n\t\t\t\t\t\t\tgetRecord( node.parentNode )[ isConnected ? 'connectedNodes' : 'disconnectedNodes' ].push( node );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ------------------\r\n\t\t\trecords.forEach( record => callback( record, context ) );\r\n\t\t\t// ------------------\r\n\t\t\treturn this.observe( ...arguments );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Mutation Observer\r\n\t\t * \r\n\t\t * @param document|Element\t\t\tcallback\r\n\t\t * @param array|Element|string\t\tselectors\r\n\t\t * @param function\t\t\t\t\tcallback\r\n\t\t * @param object\t\t\t\t\tparams\r\n\t\t * \r\n\t\t * @returns Object\r\n\t\t */\r\n\t\tobserve( context,  selectors, callback, params = {} ) {\r\n\t\t\t// ------------------------\r\n\t\t\t// If the document is still parsing, we need to detect\r\n\t\t\t// API-based DOM mutations so as for them to be treated differently\r\n\t\t\tconst { document } = window;\r\n\t\t\tif ( document.readyState === 'loading' && !wq.parsetimeApiMutations ) {\r\n\t\t\t\twq.parsetimeApiMutations = new Set;\r\n\t\t\t\tbindToApiMutations( window, record => {\r\n\t\t\t\t\tif ( !wq.parsetimeApiMutations ) return;\r\n\t\t\t\t\trecord.incomingNodes.concat( record.outgoingNodes ).forEach( node => {\r\n\t\t\t\t\t\twq.parsetimeApiMutations.add( node );\r\n\t\t\t\t\t} );\r\n\t\t\t\t} );\r\n\t\t\t\tdocument.addEventListener( 'readystatechange', () => {\r\n\t\t\t\t\twq.parsetimeApiMutations?.clear();\r\n\t\t\t\t\twq.parsetimeApiMutations = null;\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t[ context, selectors, callback, params = {} ] = resolveArgs( arguments );\r\n\t\t\tconst mo = new window.MutationObserver( records => {\r\n\t\t\t\trecords.forEach( ( { target, addedNodes, removedNodes } ) => {\r\n\t\t\t\t\temit.call( this, context, {\r\n\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\taddedNodes,\r\n\t\t\t\t\t\tremovedNodes,\r\n\t\t\t\t\t\ttype: 'mutation-record',\r\n\t\t\t\t\t}/*!important*/, {\r\n\t\t\t\t\t\tselectors,\r\n\t\t\t\t\t\tcallback,\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t// deepIntersect after document is done parsing OR for mutations done while still parsing\r\n\t\t\t\t\t\t\tdeepIntersect: node => document.readyState !== 'loading' || wq.parsetimeApiMutations?.has( node ),\r\n\t\t\t\t\t\t\t// deepIntersect may be overridden below\r\n\t\t\t\t\t\t\t...params,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t} );\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t\tconst connect = () => mo.observe( context, { childList: true, subtree: params.subtree, } );\r\n\t\t\tconnect();\r\n\t\t\tconst controller = {\r\n\t\t\t\tdisconnect() {\r\n\t\t\t\t\tmo.disconnect();\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\treconnect() {\r\n\t\t\t\t\t\t\tconnect();\r\n\t\t\t\t\t\t\treturn controller;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\t// ------------------------\r\n\t\t\treturn controller;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * Mutation Interceptor\r\n\t\t * \r\n\t\t * @param document|Element\t\t\tcallback\r\n\t\t * @param array|Element|string\t\tselectors\r\n\t\t * @param function\t\t\t\t\tcallback\r\n\t\t * @param object\t\t\t\t\tparams\r\n\t\t * \r\n\t\t * @returns Object\r\n\t\t */\r\n\t\tintercept( context, selectors, callback, params = {} ) {\r\n\t\t\t[ context, selectors, callback, params = {} ] = resolveArgs( arguments );\r\n\t\t\t// -------------\r\n\t\t\tif ( !wq.apiMutationsBindings.intercepting ) {\r\n\t\t\t\tconst { document } = window;\r\n\t\t\t\twq.apiMutationsBindings.intercepting = true;\r\n\t\t\t\t// -----------\r\n\t\t\t\t// Interception handler\r\n\t\t\t\t// -----------\r\n\t\t\t\tconst intercept = record => {\r\n\t\t\t\t\twq.apiMutationsBindings.forEach( ( contexts, index ) => {\r\n\t\t\t\t\t\tcontexts.forEach( ( traps, context ) => {\r\n\t\t\t\t\t\t\tif ( !( record.target === context || ( index && ( context === document && record.target.isConnected || context.contains( record.target ) ) ) ) ) return;\r\n\t\t\t\t\t\t\ttraps.forEach( trap => {\r\n\t\t\t\t\t\t\t\tif ( record.type === 'mutation-record' ) {\r\n\t\t\t\t\t\t\t\t\t// Parse-based events are finegrained and should not be deep-intersected\r\n\t\t\t\t\t\t\t\t\ttrap = { ...trap, params: { ...trap.params, deepIntersect: false/* non-overridable */ } };\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// API-based events aren't finegrained and should be deep-intersected\r\n\t\t\t\t\t\t\t\t\ttrap = { ...trap, params: { deepIntersect: true/* overridable */, ...trap.params } };\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\temit.call( this, context, record, trap );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\t\t\t\t};\r\n\t\t\t\tbindToApiMutations( window, intercept );\r\n\t\t\t\t// -----------\r\n\t\t\t\t// If the document is still loading, catch parser-based events\r\n\t\t\t\t// -----------\r\n\t\t\t\tif ( document.readyState === 'loading' ) {\r\n\t\t\t\t\tconst controller = this.observe( document, record => {\r\n\t\t\t\t\t\trecord = {\r\n\t\t\t\t\t\t\ttarget: record.target,\r\n\t\t\t\t\t\t\tincomingNodes: record.addedNodes.filter( node => !wq.parsetimeApiMutations?.has( node ) ),\r\n\t\t\t\t\t\t\toutgoingNodes: record.removedNodes.filter( node => !wq.parsetimeApiMutations?.has( node ) ),\r\n\t\t\t\t\t\t\ttype: record.type,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif ( !record.incomingNodes.length && !record.outgoingNodes.length ) return;\r\n\t\t\t\t\t\tintercept( record );\r\n\t\t\t\t\t}, { subtree: true } );\r\n\t\t\t\t\tdocument.addEventListener( 'readystatechange', () => controller.disconnect() );\r\n\t\t\t\t}\r\n\t\t\t\t// -----------\r\n\t\t\t}\r\n\t\t\t// -------------\r\n\t\t\tconst contexts = wq.apiMutationsBindings[ params.subtree ? 1 : 0 ];\r\n\t\t\tif ( !contexts.has( context ) ) { contexts.set( context, new Set ); }\r\n\t\t\t// -------------\r\n\t\t\tconst traps = contexts.get( context );\r\n\t\t\tconst trap = { selectors, callback, params };\r\n\t\t\ttraps.add( trap );\r\n\t\t\t// -------------\r\n\t\t\tconst controller = {\r\n\t\t\t\tdisconnect() {\r\n\t\t\t\t\ttraps.delete( trap );\r\n\t\t\t\t\tif ( !traps.size ) { contexts.delete( context ); }\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\treconnect() {\r\n\t\t\t\t\t\t\tif ( !traps.size ) {\r\n\t\t\t\t\t\t\t\treturn this.intercept( context, selectors, callback, params );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttraps.add( trap );\r\n\t\t\t\t\t\t\treturn controller;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\t// -------------\r\n\t\t\treturn controller;\r\n\t\t}\r\n\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n * Resolves arguments\r\n * \r\n * @param Array \t\t\targs \r\n * \r\n * @returns Array\r\n */\r\nfunction resolveArgs( args ) {\r\n\tif ( _isFunction( args[ 1 ] ) ) {\r\n\t\targs = [ args[ 0 ], [], ...[ ...args ].slice( 1 ) ];\r\n\t} else {\r\n\t\targs[ 1 ] = _arrFrom( args[ 1 ], false/*castObject*/ );\r\n\t}\r\n\treturn args;\r\n}\r\n\r\n/**\r\n * Resolves arguments\r\n * \r\n * @param Document|Element \tcontext \r\n * @param Object \t\t\trecord \r\n * @param Object \t\t\ttrap \r\n * \r\n * @returns Array\r\n */\r\nfunction emit( context, record, trap ) {\r\n\tlet matches, _record = { ...record };\r\n\t[ 'addedNodes', 'incomingNodes', 'removedNodes', 'outgoingNodes' ].forEach( prop => {\r\n\t\tif ( !( prop in _record ) ) return;\r\n\t\tconst isExit = [ 'removedNodes', 'outgoingNodes' ].includes( prop );\r\n\t\tif ( ( isExit && trap.params.on === 'connected' ) || ( !isExit && trap.params.on === 'disconnected' ) ) {\r\n\t\t\t_record[ prop ] = [];\r\n\t\t} else if ( !trap.selectors.length ) {\r\n\t\t\t_record[ prop ] = [ ..._record[ prop ] ];\r\n\t\t\tmatches = true;\r\n\t\t} else if ( ( _record[ prop ] = intersectNodes.call(\r\n\t\t\tthis,\r\n\t\t\ttrap.selectors,\r\n\t\t\t_record[ prop ],\r\n\t\t\ttrap.params.deepIntersect,\r\n\t\t) ).length ) {\r\n\t\t\tmatches = true;\r\n\t\t}\r\n\t} );\r\n\tif ( matches ) {\r\n\t\ttrap.callback( _record, context );\r\n\t}\r\n}\r\n\r\n/**\r\n * Aggregates instances of els in sources\r\n * \r\n * @param Array \t\t\ttargets \r\n * @param Array \t\t\tsources \r\n * @param Bool|Function \tdeepIntersect \r\n * \r\n * @returns \r\n */\r\nfunction intersectNodes( targets, sources, deepIntersect ) {\r\n\tsources = Array.isArray( sources ) ? sources : [ ...sources ];\r\n\tconst match = ( sources, target ) => {\r\n\t\t// Filter out text nodes\r\n\t\tsources = sources.filter( source => source.matches );\r\n\t\tif ( _isString( target ) ) {\r\n\t\t\t// Is directly mutated...\r\n\t\t\tlet matches = sources.filter( source => source.matches( target ) );\r\n\t\t\t// Is contextly mutated...\r\n\t\t\tif ( deepIntersect === true || _isFunction( deepIntersect ) ) {\r\n\t\t\t\tmatches = sources\r\n\t\t\t\t\t.reduce( ( collection, source ) => {\r\n\t\t\t\t\t\tlet result = _isFunction( deepIntersect ) && !deepIntersect( source ) ? [] : source.querySelectorAll( target );\r\n\t\t\t\t\t\treturn [ ...collection, ...result ];\r\n\t\t\t\t\t}, matches );\r\n\t\t\t}\r\n\t\t\tif ( matches.length ) {\r\n\t\t\t\treturn matches;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Is directly mutated...\r\n\t\t\tif ( sources.includes( target ) || (\r\n\t\t\t\t( deepIntersect === true || _isFunction( deepIntersect ) ) && sources.some( source => _isFunction( deepIntersect ) && !deepIntersect( source ) ? false : source.contains( target ) )\r\n\t\t\t) ) {\r\n\t\t\t\treturn [ target ];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t// -------------------------------\r\n\t// Search can be expensive...\r\n\t// Multiple listeners searching the same thing in the same list?\r\n\tif ( !sources.$$searchCache ) { sources.$$searchCache = new Map; }\r\n\treturn targets.reduce( ( matches, target ) => {\r\n\t\tlet _matches;\r\n\t\tif ( sources.$$searchCache.has( target ) ) {\r\n\t\t\t_matches = sources.$$searchCache.get( target );\r\n\t\t} else {\r\n\t\t\t_matches = match( sources, target ) || [];\r\n\t\t\tif ( _isObject( target ) ) {\r\n\t\t\t\tsources.$$searchCache.set( target, _matches );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn matches.concat( _matches );\r\n\t}, [] );\r\n}\r\n\r\n/**\r\n * Aggregates instances of els in sources\r\n * \r\n * @param window \t\t\twindow \r\n * @param Function \t\t\tcallback \r\n * \r\n * @returns \r\n */\r\nfunction bindToApiMutations( window, callback ) {\r\n\tconst wq = window.wq;\r\n\twq.apiMutationsHooks.add( callback );\r\n\tif ( wq.apiMutationsHooks.intercepting ) return;\r\n\twq.apiMutationsHooks.intercepting = true;\r\n\tconsole.warn( `DOM mutation APIs are now being intercepted.` )\r\n\tconst { document, Node, Element, HTMLElement } = window;\r\n\t// -----------\r\n\t// Interception handlers\r\n\t// -----------\r\n\tconst intercept = record => {\r\n\t\twq.apiMutationsHooks.forEach( callback => callback( record ) );\r\n\t};\r\n\t// -----------\r\n\t// Intercept DOM mutation methods\r\n\t// -----------\r\n\tconst originalApis = Object.create( null );\r\n\t// -----------\r\n\t[\r\n\t\t'insertBefore'/*Node*/, 'insertAdjacentElement', 'insertAdjacentHTML', 'setHTML',\r\n\t\t'replaceChildren', 'replaceWith', 'remove', 'replaceChild'/*Node*/, 'removeChild'/*Node*/, \r\n\t\t'before', 'after', 'append', 'prepend', 'appendChild'/*Node*/, \r\n\t].forEach( apiName => {\r\n\t\t// We'll be sure to monkey the correct interface\r\n\t\tconst Interface = [ 'insertBefore', 'replaceChild', 'removeChild', 'appendChild' ].includes( apiName ) ? Node : Element;\r\n\t\toriginalApis[ apiName ] = Interface.prototype[ apiName ];\r\n\t\t// In case newer methods like setHTML() are not supported\r\n\t\tif ( !originalApis[ apiName ] ) return;\r\n\t\t// Monkey now...\r\n\t\tInterface.prototype[ apiName ] = function( ...args ) {\r\n\t\t\t// Instance of Node interface? Abort!\r\n\t\t\tconst exec = () => originalApis[ apiName ].call( this, ...args );\r\n\t\t\tif ( !( this instanceof Element ) ) return exec();\r\n\t\t\t// Bail out early\r\n\t\t\t//if ( !wq.apiMutationsBindings.hasListeners() ) return exec();\r\n\t\t\t// --------------\r\n\t\t\t// Obtain outgoingNodes and incomingNodes\r\n\t\t\tlet outgoingNodes = [], incomingNodes = [], target = this;\r\n\t\t\tif ( [ 'insertBefore' ].includes( apiName ) ) {\r\n\t\t\t\tincomingNodes = [ args[ 0 ] ];\r\n\t\t\t} else if ( [ 'insertAdjacentElement', 'insertAdjacentHTML' ].includes( apiName ) ) {\r\n\t\t\t\tincomingNodes = [ args[ 1 ] ];\r\n\t\t\t\tif ( [ 'beforebegin', 'afterend' ].includes( args[ 0 ] ) ) {\r\n\t\t\t\t\ttarget = this.parentNode;\r\n\t\t\t\t}\r\n\t\t\t} else if ( [ 'setHTML', 'replaceChildren' ].includes( apiName ) ) {\r\n\t\t\t\toutgoingNodes = [ ...this.childNodes ];\r\n\t\t\t\tincomingNodes = apiName === 'replaceChildren' ? [ ...args ] : [ args[ 0 ] ];\r\n\t\t\t} else if ( [ 'replaceWith', 'remove' ].includes( apiName ) ) {\r\n\t\t\t\toutgoingNodes = [ this ];\r\n\t\t\t\tincomingNodes = apiName === 'replaceWith' ? [ ...args ] : [];\r\n\t\t\t\ttarget = this.parentNode;\r\n\t\t\t} else if ( ['replaceChild' ].includes( apiName ) ) {\r\n\t\t\t\toutgoingNodes = [ args[ 1 ] ];\r\n\t\t\t\tincomingNodes = [ args[ 0 ] ];\r\n\t\t\t} else if ( ['removeChild' ].includes( apiName ) ) {\r\n\t\t\t\toutgoingNodes = [ ...args ];\r\n\t\t\t} else {\r\n\t\t\t\t// 'before', 'after', 'append', 'prepend', 'appendChild'\r\n\t\t\t\tincomingNodes = [ ...args ];\r\n\t\t\t\tif ( [ 'before', 'after' ].includes( apiName ) ) {\r\n\t\t\t\t\ttarget = this.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// --------------\r\n\t\t\t// Parse HTML to incomingNodes\r\n\t\t\tlet apiNameFinal = apiName;\r\n\t\t\tif ( [ 'insertAdjacentHTML', 'setHTML' ].includes( apiName ) ) {\r\n\t\t\t\tlet tempNodeName = this.nodeName;\r\n\t\t\t\tif ( apiName === 'insertAdjacentHTML' && [ 'beforebegin', 'afterend' ].includes( args[ 0 ] ) ) {\r\n\t\t\t\t\t// We can't handle this... and this is going to throw afterall\r\n\t\t\t\t\tif ( !this.parentNode ) return originalApis[ apiName ].call( this, ...args );\r\n\t\t\t\t\ttempNodeName = this.parentNode.nodeName;\r\n\t\t\t\t}\r\n\t\t\t\tconst temp = document.createElement( tempNodeName );\r\n\t\t\t\toriginalApis.setHTML.call( temp, incomingNodes[ 0 ], apiName === 'setHTML' ? args[ 1 ] : {} );\r\n\t\t\t\tincomingNodes = [ ...temp.childNodes ];\r\n\t\t\t\t// --------------  \r\n\t\t\t\tif ( apiName === 'insertAdjacentHTML' ) {\r\n\t\t\t\t\tapiNameFinal = 'insertAdjacentElement';\r\n\t\t\t\t\targs[ 1 ] = new DocumentFragment;\r\n\t\t\t\t\targs[ 1 ].append( ...temp.childNodes );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapiNameFinal = 'replaceChildren';\r\n\t\t\t\t\targs = [ ...temp.childNodes ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// --------------\r\n\t\t\tintercept( { target, incomingNodes, outgoingNodes, type: 'interception-record', event: [ this, apiName ] } );\r\n\t\t\t// --------------\r\n\t\t\treturn originalApis[ apiNameFinal ].call( this, ...args );\r\n\t\t}\r\n\t} );\r\n\t// -----------\r\n\t// Intercept DOM mutation properties\r\n\t// -----------\r\n\t[\r\n\t\t'outerHTML', 'outerText'/*HTMLElement*/, 'innerHTML', \r\n\t\t'innerText'/*HTMLElement*/,'textContent'/*Node*/, 'nodeValue'/*Node*/\r\n\t].forEach( apiName => {\r\n\t\t// We'll be sure to monkey the correct interface\r\n\t\tconst Interface = [ 'textContent', 'nodeValue' ].includes( apiName ) ? Node : (\r\n\t\t\t[ 'outerText', 'innerText' ].includes( apiName ) ? HTMLElement : Element\r\n\t\t);\r\n\t\toriginalApis[ apiName ] = Object.getOwnPropertyDescriptor( Interface.prototype, apiName );\r\n\t\tObject.defineProperty( Interface.prototype, apiName, { ...originalApis[ apiName ], set: function( value ) {\r\n\t\t\tlet exec = () => originalApis[ apiName ].set.call( this, value );\r\n\t\t\t// Instance of Node interface? Abort!\r\n\t\t\tif ( !( this instanceof Element ) ) return exec();\r\n\t\t\t// Bail out early\r\n\t\t\t//if ( !wq.apiMutationsBindings.hasListeners() ) return exec();\r\n\t\t\t// --------------\r\n\t\t\t// Obtain outgoingNodes and incomingNodes\r\n\t\t\tlet outgoingNodes = [], incomingNodes = [], target = this;\r\n\t\t\tif ( [ 'outerHTML', 'outerText' ].includes( apiName ) ) {\r\n\t\t\t\toutgoingNodes = [ this ];\r\n\t\t\t\ttarget = this.parentNode;\r\n\t\t\t} else {\r\n\t\t\t\t// 'innerHTML', 'innerText', 'textContent', 'nodeValue'\r\n\t\t\t\toutgoingNodes = [ ...this.childNodes ];\r\n\t\t\t}\r\n\t\t\t// --------------\r\n\t\t\t// Parse HTML to nodes\r\n\t\t\tif ( [ 'outerHTML', 'innerHTML' ].includes( apiName ) ) {\r\n\t\t\t\tlet tempNodeName = this.nodeName;\r\n\t\t\t\tif ( apiName === 'outerHTML' ) {\r\n\t\t\t\t\t// We can't handle this... and this is going to throw afterall\r\n\t\t\t\t\tif ( !this.parentNode ) return exec();\r\n\t\t\t\t\ttempNodeName = this.parentNode.nodeName;\r\n\t\t\t\t}\r\n\t\t\t\tconst temp = document.createElement( tempNodeName );\r\n\t\t\t\toriginalApis[ apiName ].set.call( temp, value );\r\n\t\t\t\tincomingNodes = [ ...temp.childNodes ];\r\n\t\t\t\t// -------------- \r\n\t\t\t\tif ( apiName === 'outerHTML' ) {\r\n\t\t\t\t\tvalue = new DocumentFragment;\r\n\t\t\t\t\tvalue.append( ...temp.childNodes );\r\n\t\t\t\t\texec = () => originalApis.replaceWith.call( this, value );\r\n\t\t\t\t} else {\r\n\t\t\t\t\texec = () => originalApis.replaceChildren.call( this, ...temp.childNodes );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -------------- \r\n\t\t\tintercept( { target, incomingNodes, outgoingNodes, type: 'interception-record', event: [ this, apiName ] } );\r\n\t\t\t// -------------- \r\n\t\t\treturn exec();\r\n\t\t} } );\r\n\t} );\r\n\t// -----------\r\n\t// Intercept document mutation methods\r\n\t// -----------\r\n\t[ 'append', 'prepend' ].forEach( apiName => {\r\n\t\tconst originalApi = document[ apiName ];\r\n\t\tdocument[ apiName ] = function( ...args ) {\r\n\t\t\tintercept( {\r\n\t\t\t\ttarget: document,\r\n\t\t\t\tincomingNodes: args,\r\n\t\t\t\toutgoingNodes: [],\r\n\t\t\t\ttype: 'interception-record', \r\n\t\t\t\tevent: [ document, apiName ]\r\n\t\t\t} );\r\n\t\t\treturn originalApi.call( this || document, ...args );\r\n\t\t}\r\n\t} );\r\n}\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _each from '@webqit/util/obj/each.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Binds callbacks to requestAnimationFrame()\r\n * to create a central \"read/write\" phases for Ctxt access.\r\n * ---------------------------\r\n */\r\n\t\t\t\r\nexport default window => class Reflow {\r\n\r\n\t/**\r\n\t * Starts the loop.\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tconstructor( asyncDOM = true ) {\r\n\t\tObject.defineProperty( this, 'window', { value: window } );\r\n\t\tObject.defineProperty( this, 'readCallbacks', { value: new Set } );\r\n\t\tObject.defineProperty( this, 'writeCallbacks', { value: new Set } );\r\n\t\tthis.async = asyncDOM;\r\n\t\tif ( this.window.requestAnimationFrame ) {\r\n\t\t\tthis._run();\r\n\t\t} else {\r\n\t\t\tthis.async = false;\r\n\t\t}\r\n\t}\r\n\r\n\t_run() {\r\n\t\tthis.window.requestAnimationFrame( () => {\r\n\t\t\tthis.readCallbacks.forEach( callback => {\r\n\t\t\t\tif ( !callback() ) {\r\n\t\t\t\t\tthis.readCallbacks.delete( callback );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tthis.writeCallbacks.forEach( callback => {\r\n\t\t\t\tif ( !callback() ) {\r\n\t\t\t\t\tthis.writeCallbacks.delete( callback );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tthis._run();\r\n\t\t} );\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"read\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonread( callback, withPromise = false ) {\r\n\t\tif ( withPromise ) {\r\n\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\t\tif ( this.async === false ) {\r\n\t\t\t\t\tcallback( resolve, reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.readCallbacks.add( () => {\r\n\t\t\t\t\t\tcallback( resolve, reject );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\tif ( this.async === false ) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.readCallbacks.add( callback );\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Binds a callback to the \"write\" phase.\r\n\t *\r\n\t * @param function \tcallback\r\n\t * @param bool\t\twithPromise\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tonwrite( callback, withPromise = false ) {\r\n\t\tif ( withPromise ) {\r\n\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\t\tif ( this.async === false ) {\r\n\t\t\t\t\tcallback( resolve, reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.writeCallbacks.add( () => {\r\n\t\t\t\t\t\tcallback( resolve, reject );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\tif ( this.async === false ) {\r\n\t\t\tcallback();\r\n\t\t} else {\r\n\t\t\tthis.writeCallbacks.add( callback );\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * A special construct for Ctxt manipulations that span\r\n\t * one or more read/write cycles.\r\n\t *\r\n\t * @param function \tread\r\n\t * @param function \twrite\r\n\t * @param mixed\t\tprevTransaction\r\n\t *\r\n\t * @return void|mixed\r\n\t */\r\n\tcycle( onread, onwrite, prevTransaction ) {\r\n\t\tthis.onread( () => {\r\n\t\t\t// Record initial values\r\n\t\t\tconst readReturn = onread( prevTransaction );\r\n\t\t\t// Call erite, the transation\r\n\t\t\tconst callWrite = ( readReturn ) => {\r\n\t\t\t\tif ( readReturn === undefined ) return;\r\n\t\t\t\tthis.onwrite( () => {\r\n\t\t\t\t\tconst writeReturn = onwrite( readReturn, prevTransaction );\r\n\t\t\t\t\t// Repeat transaction\r\n\t\t\t\t\tconst repeatTransaction = ( writeReturn ) => {\r\n\t\t\t\t\t\tif ( writeReturn === undefined ) return;\r\n\t\t\t\t\t\tthis.cycle( onread, onwrite, writeReturn );\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\t// If \"write\" returns a promise, we wait until it is resolved\r\n\t\t\t\t\t// ---------------------------------------\r\n\t\t\t\t\tif ( writeReturn instanceof Promise ) {\r\n\t\t\t\t\t\twriteReturn.then( repeatTransaction );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trepeatTransaction( writeReturn );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t};\r\n\t\t\t// ---------------------------------------\r\n\t\t\t// If \"read\" returns a promise, we wait until it is resolved\r\n\t\t\t// ---------------------------------------\r\n\t\t\tif ( readReturn instanceof Promise ) {\r\n\t\t\t\treadReturn.then( callWrite );\r\n\t\t\t} else {\r\n\t\t\t\tcallWrite( readReturn );\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n}", "\r\n/**\r\n * Applies all supported polyfills\r\n */\r\nexport default function() {\r\n    CSS_escape.call( this );\r\n    Node_isConnected.call( this );\r\n    Element_matches.call( this );\r\n}\r\n\r\n/**\r\n * Polyfills the window.CSS object.\r\n *  \r\n * @return void\r\n */\r\nexport function CSS_escape() {\r\n    const window = this;\r\n    if ( !window.CSS ) { window.CSS = {} }\r\n    if ( !window.CSS.escape ) {\r\n        /**\r\n         * Polyfills the window.CSS.escape() function.\r\n         *  \r\n         * @param string str \r\n         * \r\n         * @return string\r\n         */\r\n        window.CSS.escape = str => str.replace( /([\\:@\\~\\$\\&])/g, '\\\\$1' );\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Node.prototype.isConnected property\r\n * \r\n * @see MDN\r\n  *  \r\n * @return bool\r\n*/\r\nexport function Node_isConnected() {\r\n    const window = this;\r\n    if ( !( 'isConnected' in window.Node.prototype ) ) {\r\n        Object.defineProperty( window.Node.prototype, 'isConnected', { get: function() {\r\n            return !this.ownerDocument || !(\r\n                this.ownerDocument.compareDocumentPosition( this )\r\n                & this.DOCUMENT_POSITION_DISCONNECTED);\r\n        } } );\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfills the Element.prototype.matches() method\r\n * \r\n * @see MDN\r\n  *  \r\n * @return void\r\n*/\r\nexport function Element_matches() {\r\n    const window = this;\r\n    if ( !window.Element.prototype.matches ) {\r\n        window.Element.prototype.matches = \r\n        window.Element.prototype.matchesSelector || \r\n        window.Element.prototype.mozMatchesSelector ||\r\n        window.Element.prototype.msMatchesSelector || \r\n        window.Element.prototype.oMatchesSelector || \r\n        window.Element.prototype.webkitMatchesSelector ||\r\n        function( s ) {\r\n            var matches = ( this.document || this.ownerDocument ).querySelectorAll( s ),\r\n                i = matches.length;\r\n            while ( --i >= 0 && matches.item( i ) !== this ) {}\r\n            return i > -1;            \r\n        }\r\n    }\r\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport { _isNumeric } from '@webqit/util/js/index.js';\r\nimport { _set, _get, _merge } from '@webqit/util/obj/index.js';\r\nimport createRealtimeClass from './Realtime.js';\r\nimport createReflowClass from './Reflow.js';\r\nimport polyfill from './polyfills.js';\r\n\r\nexport default function() {\r\n    const window = this;\r\n    if ( !window.wq ) window.wq = {};\r\n    if ( window.wq.dom ) return window.wq.dom;\r\n    window.wq.dom = {};\r\n    polyfill.call( window );\r\n    // ------\r\n    const Reflow = createReflowClass( window );\r\n    window.wq.dom.Reflow = new Reflow;\r\n    // ------\r\n    const Realtime = createRealtimeClass( window );\r\n    window.wq.dom.Realtime = new Realtime;\r\n    // ------\r\n    window.wq.dom.ready = ready.bind( window );\r\n    window.wq.dom.meta = meta.bind( window );\r\n    // ------\r\n    return window.wq.dom;\r\n}\r\n\r\n\r\n/**\r\n * DOM-ready listeners.\r\n * \r\n * @param Function\t    \t\tcallback\r\n * \r\n * @return void\r\n */\r\nfunction ready( callback ) {\r\n\tconst window = this;\r\n\tif ( window.document.readyState === 'complete' ) {\r\n\t\tcallback( window );\r\n\t} else {\r\n\t\tif ( !window.document.domReadyCallbacks ) {\r\n\t\t\twindow.document.domReadyCallbacks = [];\r\n\t\t\twindow.document.addEventListener( 'DOMContentLoaded', () => {\r\n\t\t\t\twindow.document.domReadyCallbacks.splice( 0 ).forEach( cb => cb( window ) );\r\n\t\t\t}, false );\r\n\t\t}\r\n\t\twindow.document.domReadyCallbacks.push( callback );\r\n\t}\r\n}\r\n\r\n/**\r\n * A wq's meta tag props reader.\r\n *  \r\n * @param String name\r\n * @param Bool\t readWrite\r\n * \r\n * @return Object\r\n */\r\nfunction meta( name, readWrite = false ) {\r\n    const window = this;\r\n    const metaInstance = { content: {} };\r\n    // Initialize reader\r\n    if ( !(metaInstance.el = window.document.querySelector( `meta[name=\"${ name }\"]` ) ) && readWrite ) {\r\n        metaInstance.el = window.document.createElement( 'meta' );\r\n        metaInstance.el.setAttribute( 'name', name );\r\n        window.document.head.append( metaInstance.el );\r\n    }\r\n    if ( metaInstance.el ) {\r\n        metaInstance.content = ( metaInstance.el.getAttribute( 'content' ) || '' ).split( ';' ).filter( v => v ).reduce( ( _metaVars, directive ) => {\r\n            const directiveSplit = directive.split( '=' ).map( d => d.trim() );\r\n            _set( _metaVars, directiveSplit[ 0 ].split( '.' ), directiveSplit[ 1 ] === 'true' \r\n                ? true : (directiveSplit[ 1 ] === 'false' ? false : (\r\n                    _isNumeric( directiveSplit[ 1 ] ) ? parseInt( directiveSplit[ 1 ] ) : directiveSplit[ 1 ]\r\n                ) )\r\n            );\r\n            return _metaVars;\r\n        }, {} );\r\n    }\r\n    // Read prop...\r\n    metaInstance.get = function( prop ) { return JSON.parse( JSON.stringify( _get( this.content, prop.split( '.' ) ) ) ); }\r\n    // Copy...\r\n    metaInstance.copy = function() {\r\n\t\treturn JSON.parse( JSON.stringify( this.content ) );\r\n    };\r\n\t// Copy with defaults...\r\n    metaInstance.copyWithDefaults = function( ...defaults ) {\r\n\t\tif ( defaults.length ) return _merge( true, {}, ...defaults.reverse().concat( this.content ) );\r\n\t\treturn this.copy();\r\n    };\r\n    return metaInstance;\r\n}", "\r\n/**\r\n * @exports\r\n */\r\nexport function resolveParams( extensions = {} ) {\r\n    return {\r\n        runtimeParams: { ...runtimeParams, ...( extensions.runtimeParams || {} ) },\r\n        compilerParams: { ...compilerParams, ...( extensions.compilerParams || {} ) },\r\n        parserParams: { ...parserParams, ...( extensions.parserParams || {} ) },\r\n    }\r\n}\r\nexport const parserParams = {\r\n    ecmaVersion: '2020',\r\n    allowReturnOutsideFunction: true,\r\n    allowAwaitOutsideFunction: true,\r\n    allowSuperOutsideMethod: true,\r\n    preserveParens: false,\r\n    locations: false,\r\n};\r\nexport const compilerParams = {\r\n    globalsNoObserve: [ 'globalThis', 'arguments', 'console', ],\r\n    originalSource: true,\r\n    globalsOnlyPaths: false,\r\n    locations: true,\r\n    compact: 2,\r\n};\r\nexport const runtimeParams = {\r\n    apiVersion: 1,\r\n};\r\n", "\r\n/**\r\n * @normalizeTabs\r\n */\r\nexport  function normalizeTabs( rawSource, isFunc = false ) {\r\n    let rawSourceSplit = rawSource.split(/\\n/g);\r\n    if ( rawSourceSplit.length > 1 ) {\r\n        while ( !rawSourceSplit[ 0 ].trim().length ) rawSourceSplit.shift();\r\n        let possibleBodyIndentLevel = rawSourceSplit[ isFunc ? 1 : 0 ].split(/[^\\s]/)[ 0 ].length;\r\n        if ( possibleBodyIndentLevel ) {\r\n            return rawSourceSplit.map( ( line, i ) => {\r\n                let possibleIndent = line.substring( 0, possibleBodyIndentLevel );\r\n                if ( !possibleIndent.trim().length ) {\r\n                    return line.substring( possibleBodyIndentLevel );\r\n                }\r\n                // Last line?\r\n                if ( possibleIndent.trim() === '}' && i === rawSourceSplit.length - 1 ) {\r\n                    return '}';\r\n                }\r\n                return line;\r\n            } ).join( \"\\n\" );\r\n        }\r\n    }\r\n    return rawSource;\r\n}\r\n\r\nexport const _await = ( maybePromise, callback ) => (\r\n    maybePromise instanceof Promise ? maybePromise.then( callback ) : callback( maybePromise )\r\n);\r\n\r\nexport  const _compare = ( a, b ) => {\r\n    if ( typeof a === 'object' && a && typeof b === 'object' && b ) return _deepEql( a, b );\r\n    if ( Array.isArray( a ) && Array.isArray( b ) && a.length === b.length ) return a.every( valueA => b.some( valueB => _compare( valueA, valueB ) ) );\r\n    return a === b;\r\n};\r\n\r\nexport  const _deepEql = function( a, b ) {\r\n    for ( let key in a ) {\r\n        if ( !_compare( a[ key ], b[ key ] ) ) return false;\r\n    }\r\n    return true;\r\n};", "\r\n/**\r\n * @exports\r\n */\r\nconst store = new Map;\r\nexport default function( _function, property, value = undefined ) {\r\n    let insp = store.get( _function );\r\n    if ( arguments.length > 2 ) {\r\n        if ( !insp ) {\r\n            insp = new Map;\r\n            store.set( _function, insp );\r\n        }\r\n        insp.set( property, value );\r\n        return;\r\n    }\r\n    return insp && insp.get( property );\r\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport { _await } from '../util.js';\r\nimport inspection from './inspect.js';\r\n\r\nexport default class Contract {\r\n\r\n    constructor( ownerContract, graph, callee, params = {}, $thread = null, exits = null ) {\r\n        this.ownerContract = ownerContract;\r\n        this.graph = graph;\r\n        this.callee = callee;\r\n        this.params = !ownerContract ? { ...params, isSubscriptFunction: true } : params;\r\n        this.exits = exits || new Map;\r\n        this.$thread = $thread || { entries: new Map, sequence: [], ownerContract: this };\r\n        this.subContracts = new Map;\r\n        this.observers = [];\r\n        this.contract = function( contractId, arg1, arg2 = null, arg3 = null ) {\r\n            if ( !this.graph.subContracts[ contractId ] ) {\r\n                throw new Error( `[${ this.graph.type }:${ this.graph.lineage }]: Graph not found for child contract ${ contractId }.` );\r\n            }\r\n\r\n            let subGraph = this.graph.subContracts[ contractId ];\r\n            let subParams = {\r\n                ...this.params,\r\n                isIterationContract: arguments.length === 3,\r\n                iterationId: arguments.length === 3 && arg1,\r\n                isFunctionContract: arguments.length === 4,\r\n                functionType: arguments.length === 4 && arg1,\r\n                isSubscriptFunction: arguments.length === 4 && arg2,\r\n                functionScope: ( this.params.isFunctionContract && this.graph.lineage ) || this.params.functionScope,\r\n            };\r\n\r\n            if ( subParams.isIterationContract ) {\r\n                // This is an iteration contract\r\n                let callee = arg2;\r\n                // Create iteration\r\n                let iterationInstanceContract = new Contract( this, subGraph, callee, subParams, this.$thread, this.exits );\r\n                // Add iteration\r\n                let iterations = this.subContracts.get( contractId );\r\n                if ( !iterations ) {\r\n                    iterations = new Map;\r\n                    this.subContracts.set( contractId, iterations );\r\n                }\r\n                // Dispose all existing\r\n                if ( iterations.has( subParams.iterationId ) ) {\r\n                    iterations.get( subParams.iterationId ).dispose();\r\n                }\r\n                iterations.set( subParams.iterationId, iterationInstanceContract );\r\n                return iterationInstanceContract.call();\r\n            }\r\n\r\n            let callee, subContract, returnValue;\r\n            // Dispose existing\r\n            if ( this.subContracts.has( contractId ) ) {\r\n                this.subContracts.get( contractId ).dispose();\r\n            }\r\n\r\n            if ( subParams.isFunctionContract ) {\r\n                // Function contracts\r\n                callee = arg3;\r\n                const createCallback = () => new Contract( this, subGraph, callee, subParams );\r\n                if ( subParams.functionType !== 'FunctionDeclaration' ) {\r\n                    returnValue = this.createFunction( createCallback );\r\n                } else {\r\n                    let subContract = createCallback();\r\n                    if ( subParams.apiVersion > 1 ) {\r\n                        returnValue = function( ...args ) {\r\n                            let _returnValue = subContract.call( this, ...args );\r\n                            _returnValue = _await( _returnValue, __returnValue => [ _returnValue, subContract.thread.bind( subContract ), subContract ] );\r\n                            subContract = createCallback();\r\n                            return _returnValue;\r\n                        }\r\n                        returnValue.target = subContract;\r\n                    } else {\r\n                        returnValue = subContract;\r\n                    }\r\n                }\r\n            } else {\r\n                // Regular contracts\r\n                callee = arg1, subContract = new Contract( this, subGraph, callee, subParams, this.$thread, this.exits );\r\n                this.subContracts.set( contractId, subContract );\r\n                returnValue = subContract.call();\r\n            }\r\n\r\n            return returnValue;\r\n        }.bind( this );\r\n        // ---------------------------\r\n        this.contract.memo = Object.create( null );\r\n        if ( this.ownerContract && ![ 'FunctionDeclaration', 'FunctionExpression' ].includes( this.graph.type ) ) {\r\n            this.contract.args = this.ownerContract.contract.args;\r\n        }\r\n        // ---------------------------\r\n        this.contract.exiting = function( keyword, arg ) {\r\n            if ( !arguments.length ) return this.exits.size;\r\n            let exitMatch = this.exits.get( keyword ) === arg;\r\n            if ( exitMatch ) this.exits.clear();\r\n            return exitMatch;\r\n        }.bind( this );\r\n        // ---------------------------\r\n        this.contract.exit = function( keyword, arg ) {\r\n            this.exits.set( keyword, arg );\r\n        }.bind( this );\r\n        // ---------------------------\r\n        this.contract.functions = new Map;\r\n        this.contract.functions.declaration = ( functionDeclaration, callTarget ) => {\r\n            this.contract.functions.set( functionDeclaration, callTarget );\r\n            this.applyReflection( functionDeclaration, typeof callTarget === 'function' ? callTarget.target : callTarget );\r\n        }\r\n    }\r\n\r\n    fire( contractUrl, event, refs ) {\r\n        if ( !this.ownerContract ) return;\r\n        const ret = this.ownerContract.fire( contractUrl, event, refs );\r\n        this.observers.forEach( observer => {\r\n            if ( observer.contractUrl !== contractUrl ) return;\r\n            observer.callback( event, refs );\r\n        } );\r\n        return ret;\r\n    }\r\n\r\n    observe( contractUrl, callback ) {\r\n        if ( !this.params.isFunctionContract ) return;\r\n        this.observers.push( { contractUrl, callback } );\r\n    }\r\n\r\n    call( $this, ...$arguments ) {\r\n        if ( this.disposed ) {\r\n            throw new Error( `[${ this.graph.type }:${ this.graph.lineage }]: Instance not runable after having been disposed.` );\r\n        }\r\n        if ( !this.ownerContract ) {\r\n            this.contract.args = $arguments;\r\n            Object.defineProperty( this.contract.args, Symbol.toStringTag, { value: 'Arguments' } );\r\n        }\r\n        let returnValue = this.callee.call( $this, this.contract, ...$arguments );\r\n        if ( this.graph.$sideEffects ) {\r\n            for ( let referenceId in this.graph.effects ) {\r\n                for ( let effectRef of this.graph.effects[ referenceId ].refs ) {\r\n                    // Build side effects\r\n                    this.buildThread( [], effectRef, [], 0, true );\r\n                }\r\n            }\r\n        }\r\n        return _await( returnValue, () => {\r\n            if ( !this.ownerContract || this.params.isFunctionContract ) {\r\n                let exitReturnValue = this.exits.get( 'return' );\r\n                this.exits.clear();\r\n                if ( exitReturnValue !== undefined ) return exitReturnValue;\r\n            }\r\n            return returnValue;\r\n        } );\r\n    }\r\n\r\n    iterate( keys = [] ) {\r\n        if ( this.disposed ) return false;\r\n        if ( ![ 'ForOfStatement', 'ForInStatement' ].includes( this.graph.type ) || this.subContracts.size !== 1 ) {\r\n            throw new Error( `Contract ${ this.graph.lineage } is not an iterator.` );\r\n        }\r\n        let [ [ /* iterationContractId */, iterationInstances ] ] = this.subContracts;\r\n        let prev\r\n        if ( !keys.length || ( keys.includes( 'length' ) && this.graph.type === 'ForOfStatement' ) ) {\r\n            for ( let [ /* iterationId */, iterationInstance ] of iterationInstances ) {\r\n                prev = _await( prev, () => iterationInstance.call() );\r\n            }\r\n        } else {\r\n            for ( let key of keys ) {\r\n                let instance = iterationInstances.get( key ) || iterationInstances.get( parseInt( key ) );\r\n                if ( !instance ) continue;\r\n                prev = _await( prev, () => instance.call() );\r\n            }\r\n        }\r\n        return prev;\r\n    }\r\n\r\n    thread( ...eventRefs ) {\r\n        if ( this.disposed ) return false;\r\n        this.$thread.active = true;\r\n        for ( let referenceId in this.graph.effects ) {\r\n            for ( let effectRef of this.graph.effects[ referenceId ].refs ) {\r\n                for ( let eventRef of eventRefs ) {\r\n                    let [ isMatch, remainder, computes ] = this.matchRefs( eventRef, effectRef );\r\n                    if ( !isMatch ) continue;\r\n                    this.buildThread( eventRef, effectRef, computes, remainder );\r\n                }\r\n            }\r\n        }\r\n        return this.runThread();\r\n    }\r\n\r\n    runThread() {\r\n        let execute = ( entry, refs ) => {\r\n            if ( [ 'ForOfStatement', 'ForInStatement' ].includes( entry.graph.type ) \r\n            && refs.every( ref => ref.executionPlan.isIterationContractTarget ) ) {\r\n                let targets = refs.map( ref => ref.executionPlan.iterationTarget );\r\n                this.fire( entry.graph.lineage, 'iterating', refs );\r\n                return entry.iterate( targets );\r\n            }\r\n            this.fire( entry.graph.lineage, 'executing', refs );\r\n            return entry.call();\r\n        };\r\n        let prev, entry, refs;\r\n        while ( \r\n            ( entry = this.$thread.sequence.shift() ) \r\n            && ( refs = [ ...this.$thread.entries.get( entry ) ] ) \r\n            && this.$thread.entries.delete( entry ) // Important: to allow re-entry on susequent threads\r\n        ) {\r\n            prev = _await( prev, () => {\r\n                if ( entry.disposed || !entry.filterRefs( refs ).length ) return;\r\n                this.$thread.current = entry;\r\n                let maybePromise = execute( entry, refs );\r\n                _await( maybePromise, () => {\r\n                    for ( let ref of refs ) {\r\n                        [].concat( ref.executionPlan.assigneeRef || ref.executionPlan.assigneeRefs || [] ).forEach( assigneeRef => {\r\n                            entry.buildThread( [], assigneeRef, [], 0 );\r\n                        } );\r\n                    }\r\n                } );\r\n                return maybePromise;\r\n            } );\r\n        }\r\n        return _await( prev, () => {\r\n            let _ret = this.exits.get( 'return' );\r\n            this.exits.clear();\r\n            this.$thread.current = null;\r\n            this.$thread.active = false;\r\n            return _ret;\r\n        } );\r\n    }\r\n\r\n    buildThread( eventRef, effectRef, computes, remainder = 0, isSideEffect = false ) {\r\n        let shouldMatchEventRef = remainder > 0;\r\n        if ( this.ownerContract ) {\r\n            // IMPORTANT: effectRef at global level are not supposed to be checked for computes and condition\r\n            if ( !this.compute( computes ) ) return;\r\n            if ( effectRef.condition !== undefined && !this.assert( effectRef.condition ) ) return;\r\n        } else if ( !shouldMatchEventRef ) {\r\n            shouldMatchEventRef = computes.length || effectRef.condition !== undefined;\r\n        }\r\n        let subscriptionsObject = isSideEffect ? effectRef.$subscriptions : effectRef.subscriptions;\r\n        // First we assert the conditions for the effectRef before moving on\r\n        Object.keys( subscriptionsObject ).forEach( fullReferenceUrl => {\r\n            let [ contractUrl, referenceId ] = fullReferenceUrl.split( ':' );\r\n            let selectRefs = _subscriberInstance => {\r\n                if ( !_subscriberInstance ) return;\r\n                _subscriberInstance.selectRefs( referenceId, subscriptionsObject[ fullReferenceUrl ], shouldMatchEventRef ? eventRef : null );\r\n            }\r\n            // We find the subscriber instance\r\n            let subscriberInstance = this.locate( contractUrl );\r\n            if ( Array.isArray( subscriberInstance ) ) {\r\n                subscriberInstance.forEach( selectRefs );\r\n            } else {\r\n                selectRefs( subscriberInstance );\r\n            }\r\n        } );\r\n    }\r\n\r\n    selectRefs( referenceId, refIds, eventRef = null ) {\r\n        // We'll select refs from within the following reference\r\n        let $thread = this.$thread;\r\n        let reference = this.graph.signals[ referenceId ];\r\n        // -----------------------------------------\r\n        let compare = ( a, b ) => a.graph.lineage.localeCompare( b.graph.lineage, undefined, { numeric: true } );\r\n        let selectRef = ( ref, computes = [], executionPlan = {} ) => {\r\n            // If this addition is by the side effect of a function, \"this\" can sometimes be higher in scope\r\n            if ( !$thread.active ) return;\r\n            if ( $thread.current && compare( this, $thread.current ) < 0 ) return;\r\n            let refs = $thread.entries.get( this );\r\n            if ( !refs ) {\r\n                refs = new Set;\r\n                $thread.entries.set( this, refs );\r\n                $thread.sequence.push( this );\r\n                $thread.sequence.sort( compare );\r\n            }\r\n            refs.add( { ...ref, computes, executionPlan } );\r\n            if ( !executionPlan.assigneeRef && [ 'VariableDeclaration', 'AssignmentExpression' ].includes( this.graph.type ) ) {\r\n                executionPlan.assigneeRefs = [];\r\n                for ( let referenceId in this.graph.effects ) {\r\n                    executionPlan.assigneeRefs.push( ...this.graph.effects[ referenceId ].refs )\r\n                }\r\n            }\r\n        };\r\n        // -----------------------------------------\r\n        for ( let refId of refIds ) {\r\n            // The ref within reference\r\n            let ref = reference.refs[ refId ];\r\n            // First we assert the conditions for the ref before moving on\r\n            if ( !eventRef ) {\r\n                // AffectedRef matched event ref... So we select ALL refs within reference\r\n                selectRef( ref );\r\n                continue;\r\n            }\r\n            // We match ref to decide whether or how to select it\r\n            let [ isMatch_b, remainder_b, computes_b ] = this.matchRefs( eventRef, ref );\r\n            if ( !isMatch_b ) continue;\r\n            if ( remainder_b <= 0 ) {\r\n                // SubscriberRef matches event ref\r\n                selectRef( ref, computes_b );\r\n                continue;\r\n            }\r\n            let eventRef_balance = eventRef.slice( -remainder_b );\r\n            let assigneeReference = 'assignee' in reference ? this.graph.effects[ reference.assignee ] : null;\r\n            if ( assigneeReference ) {\r\n                assigneeReference.refs.forEach( assigneeRef => {\r\n                    if ( assigneeRef.depth.length ) {\r\n                        let [ isMatch_c, remainder_c, computes_c ] = this.matchRefs( eventRef_balance, assigneeRef.depth );\r\n                        let computes_d = computes_b.concat( computes_c );\r\n                        if ( isMatch_c && remainder_c > 0 ) {\r\n                            // We move on passively to effects on the assignee\r\n                            let newEventRef = assigneeRef.path.concat( eventRef_balance.slice( -remainder_c ) );\r\n                            this.buildThread( newEventRef, assigneeRef, computes_d, remainder_c );\r\n                        } else if ( isMatch_c ) {\r\n                            // Match is successful on the destructuring side... so we select\r\n                            selectRef( ref, computes_d, { assigneeRef } );\r\n                        }\r\n                    } else {\r\n                        // We move on passively to effects on the assignee\r\n                        let newEventRef = assigneeRef.path.concat( eventRef_balance );\r\n                        this.buildThread( newEventRef, assigneeRef, computes_b, remainder_b );\r\n                    }\r\n                } );\r\n                continue;\r\n            }\r\n            if ( remainder_b === 1 && this.graph.type === 'ForOfStatement' ) {\r\n                // An iteration item was changed or the length property of the list was changed\r\n                selectRef( ref, computes_b, { isIterationContractTarget: true, iterationTarget: eventRef_balance[ 0 ] } );\r\n                continue;\r\n            }\r\n            if ( remainder_b === 1 && this.graph.type === 'ForInStatement' ) {\r\n                // An iteration property was changed\r\n                selectRef( ref, computes_b, { isIterationContractTarget: true, iterationTarget: eventRef_balance[ 0 ] } );\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    filterRefs( refs ) {\r\n        return refs.filter( ref => {\r\n            if ( !this.compute( ref.computes ) ) return;\r\n            if ( ref.condition !== undefined && !this.assert( ref.condition ) ) return;\r\n            return true;\r\n        } );\r\n    }\r\n\r\n    matchRefs( a, b ) {\r\n        let pathA, $pathA, pathB, $pathB;\r\n        if ( Array.isArray( a ) ) {\r\n            pathA = a, $pathA = a.dotSafe ? a.join( '.' ) : undefined;\r\n        } else {\r\n            pathA = a.path, $pathA = a.$path;\r\n        }\r\n        if ( Array.isArray( b ) ) {\r\n            pathB = b, $pathB = b.dotSafe ? b.join( '.' ) : undefined;\r\n        } else {\r\n            pathB = b.path, $pathB = b.$path;\r\n        }\r\n        let remainder = pathA.length - pathB.length;\r\n        if ( remainder > 0 ) {\r\n            [ pathA, pathB, $pathA, $pathB ] = [ pathB, pathA, $pathB, $pathA ];\r\n        }\r\n        if ( $pathA && $pathB ) {\r\n            return [ `${ $pathB }.`.startsWith( `${ $pathA }.` ), remainder, [] ];\r\n        }\r\n        let computes = [];\r\n        let getVal = element => ( typeof element === 'object' ? element.name : element );\r\n        let compareIdentifiers = ( a, b ) => {\r\n            if ( !a || !b ) return false;\r\n            let isComputeA = typeof a === 'object' && ( 'memoId' in a ),\r\n                isComputeB = typeof b === 'object' && ( 'memoId' in b );\r\n            if ( isComputeA || isComputeB ) {\r\n                computes.push( memo => {\r\n                    return ( isComputeA ? memo[ a.memoId ] : getVal( a ) ) === ( isComputeB ? memo[ b.memoId ] : getVal( b ) ) \r\n                } );\r\n                return true;\r\n            }\r\n            return getVal( a ) === getVal( b );\r\n        };\r\n        return [\r\n            pathA.reduce( ( prev, identifier, i ) => prev && compareIdentifiers( identifier, pathB[ i ] ), true ),\r\n            remainder,\r\n            computes,\r\n        ];\r\n    }\r\n\r\n    locate( contractUrl ) {\r\n        let ownLineage_ = this.graph.lineage + '/';\r\n        let contractUrl_ = contractUrl + '/';\r\n        if ( contractUrl_ === ownLineage_ ) return this;\r\n        if ( contractUrl_.startsWith( ownLineage_ ) ) {\r\n            let postLineage = contractUrl.slice( ownLineage_.length ).split( '/' );\r\n            let subContract = this.subContracts.get( parseInt( postLineage.shift() ) );\r\n            if ( postLineage.length) {\r\n                if ( subContract instanceof Map ) {\r\n                    return Array.from( subContract ).reduce( ( subContracts, [ key, _subContract ] ) => {\r\n                        return subContracts.concat( _subContract.locate( contractUrl ) );\r\n                    }, [] );\r\n                }\r\n                if ( subContract ) {\r\n                    return subContract.locate( contractUrl );\r\n                }\r\n            }\r\n            return subContract;\r\n        }\r\n        if ( this.ownerContract ) {\r\n            return this.ownerContract.locate( contractUrl );\r\n        }\r\n    }\r\n\r\n    compute( computes ) {\r\n        return !computes.some( compute => compute( this.contract.memo ) === false );\r\n    }\r\n\r\n    assert( condition ) {\r\n        if ( typeof condition === 'string' && condition.includes( ':' ) ) {\r\n            let [ contractUrl, _condition ] = condition.split( ':' );\r\n            return this.locate( contractUrl ).assert( _condition );\r\n        }\r\n        let conditionDef = this.graph.conditions[ condition ];\r\n        let memo = this.contract.memo;\r\n        if ( typeof conditionDef.parent !== 'undefined'  && !this.assert( conditionDef.parent ) ) return false;\r\n        if ( typeof conditionDef.switch !== 'undefined' ) {\r\n            return conditionDef.cases.some( _case => memo[ _case ] === memo[ conditionDef.switch ] );\r\n        }\r\n        if ( typeof conditionDef.whenNot !== 'undefined' ) {\r\n            return !memo[ conditionDef.whenNot ];\r\n        }\r\n        if ( typeof conditionDef.when !== 'undefined' ) {\r\n            return memo[ conditionDef.when ];\r\n        }\r\n        return true;\r\n    }\r\n\r\n    dispose() {\r\n        if ( this.params.isFunctionContract ) return;\r\n        this.subContracts.forEach( ( subContract, contractId ) => {\r\n            if ( subContract instanceof Map ) {\r\n                subContract.forEach( subContract => subContract.dispose() );\r\n                subContract.clear();\r\n            } else {\r\n                subContract.dispose();\r\n            }\r\n        } );\r\n        this.subContracts.clear();\r\n        delete this.ownerContract;\r\n        delete this.callee;\r\n        delete this.params;\r\n        delete this.contract.memo;\r\n        this.disposed = true;\r\n    }\r\n    \r\n    createFunction( createCallback, defaultThis = undefined ) {\r\n        let contract = createCallback();\r\n        // -------------\r\n        const execute = function( _contract, ...args ) {\r\n            let _returnValue = _contract.call( this === undefined ? defaultThis : this, ...args );\r\n            if ( _contract.params.isSubscriptFunction && _contract.params.apiVersion > 1 ) {\r\n                _returnValue = _await( _returnValue, __returnValue => [ __returnValue, _contract.thread.bind( _contract ), _contract ] );\r\n                // Replace global for next call\r\n                contract = createCallback( contract );\r\n            }\r\n            return _returnValue;\r\n        };\r\n        // -------------\r\n        const _function = ( contract instanceof Promise ) || ( contract.callee instanceof ( async function() {} ).constructor )\r\n            ? async function() { return _await( contract, _contract => execute.call( this, _contract, ...arguments ) ); } \r\n            : function() { return execute.call( this, contract, ...arguments ); };\r\n        // -------------\r\n        _await( contract, _contract => {\r\n            this.applyReflection( _function, _contract );\r\n        } );\r\n        // -------------\r\n        inspection( _function, 'properties', _await( contract, _contract => {\r\n            const graph = {\r\n                type: _contract.params.functionType || 'Program',\r\n                isSubscriptFunction: _contract.params.isSubscriptFunction,\r\n                sideEffects: _contract.graph.sideEffects || false,\r\n            };\r\n            if ( _contract.params.isSubscriptFunction ) {\r\n                graph.dependencies = [];\r\n                for ( const [ id, effect ] of Object.entries( _contract.graph.effects ) ) {\r\n                    graph.dependencies.push( ...effect.refs.map( ref => ref.path.map( s => s.name ) ) );\r\n                }\r\n            }\r\n            return graph;\r\n        } ) );\r\n        // -------------\r\n        return _function;\r\n    }\r\n\r\n    applyReflection( _function, contract ) {\r\n        // Hide implementation details on callee\r\n        Object.defineProperty( contract.callee, 'length', { configurable: true, value: contract.callee.length - 1 } );\r\n        const compiledSourceNeat = contract.callee.toString()//.replace( /\\(\\$[\\w]+\\,([\\s]*)?/, '(' );\r\n        Object.defineProperty( contract.callee, 'toString', { configurable: true, value: ( compiledSource = false ) => {\r\n            if ( !compiledSource && contract.graph.originalSource ) { return contract.graph.originalSource; }\r\n            return compiledSourceNeat;\r\n        } } );\r\n        // Hide implementation details on main\r\n        let properties = {\r\n            name: contract.callee.name,\r\n            length: contract.callee.length,\r\n            toString: contract.callee.toString,\r\n        };\r\n        if ( contract.params.isSubscriptFunction ) {\r\n            if ( !( contract.params.apiVersion > 1 ) ) {\r\n                properties = {\r\n                    ...properties,\r\n                    thread: contract.thread.bind( contract ),\r\n                    dispose: contract.dispose.bind( contract ),\r\n                    runtime: contract,\r\n                };\r\n            }\r\n        }\r\n        Object.keys( properties ).forEach( name => {\r\n            Object.defineProperty( _function, name, { configurable: true, value: properties[ name ] } );\r\n        } );\r\n    }\r\n\r\n}\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport { _await } from '../util.js';\r\nimport Contract from './Contract.js';\r\nimport inspection from './inspect.js';\r\n\r\nexport default class Runtime extends Contract {\r\n\r\n    static create( compilation, parameters = [], runtimeParams = {} ) {\r\n        const isAsync = runtimeParams.async || compilation.graph.hoistedAwaitKeyword;\r\n        const _Function = isAsync ? Object.getPrototypeOf( async function() {} ).constructor : Function;\r\n        const callee = runtimeParams.compileFunction \r\n            ? runtimeParams.compileFunction( compilation.source, [ compilation.identifier + '' ].concat( parameters ) )\r\n            : new _Function( compilation.identifier + '', ...parameters, compilation.source );\r\n        return new this( null, compilation.graph, callee, runtimeParams );\r\n    }\r\n\r\n    static createFunction( sourceName, compilation, parameters = [], runtimeParams = {}, defaultThis, originalSource = null ) {\r\n        runtimeParams = { ...runtimeParams, functionType: 'Constructor', };\r\n        if ( compilation instanceof Promise ) { runtimeParams = { ...runtimeParams, async: true, }; }\r\n        const createCallback = contract => {\r\n            // Subsequent calls avoid recompilation\r\n            if ( contract ) { return new this( null, contract.graph, contract.callee, runtimeParams ); }\r\n            // Supports lazy compilation. So, input compilation may be a Promise\r\n            return _await( compilation, _compilation => applyReflection( this.create( _compilation, parameters, runtimeParams ) ) );\r\n        };\r\n        const applyReflection = contract => { \r\n            if ( contract.graph.originalSource && !contract.graph.originalSourceModified ) {\r\n                const ownSource = `${ runtimeParams.async || contract.graph.hoistedAwaitKeyword ? 'async ' : '' }function ${ sourceName || 'anonymous' }`;\r\n                const originalSourceIndented = contract.graph.originalSource.split(/\\n/g).map( line => `    ${ line }` ).join( `\\n` );\r\n                contract.graph.originalSource = `${ ownSource }(${ parameters.join( ', ' ) }) {\\n${ originalSourceIndented }\\n}`;\r\n                contract.graph.originalSourceModified = true;\r\n            }\r\n            if ( sourceName ) { Object.defineProperty( contract.callee, 'name', { configurable: true, value: sourceName } ); }\r\n            return contract;\r\n        };\r\n        const _function = this.prototype.createFunction( createCallback, defaultThis );\r\n        inspection( _function, 'locations', _await( compilation, _compilation => ( {\r\n            locations: _compilation.locations,\r\n        } ) ) );\r\n        return _function;\r\n    }\r\n\r\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport { resolveParams } from './params.js';\r\nimport { normalizeTabs } from './util.js';\r\nimport Runtime from './runtime/Runtime.js';\r\nimport inspect from './runtime/inspect.js';\r\n\r\n/**\r\n * @SubscriptFunctionLite\r\n */\r\nexport default function SubscriptFunctionLite( ...args ) {\r\n    if ( typeof window !== 'object' ) throw new Error( `No window in context.` );\r\n    // --------------------\r\n    const params = resolveParams( typeof args[ args.length - 1 ] === 'object' ? args.pop() : {} );\r\n    const source = normalizeTabs( args.pop() || '' );\r\n    const parameters = args;\r\n    const createFunction = compilation => Runtime.createFunction( undefined, compilation, parameters, params.runtimeParams, this, source );\r\n    // --------------------\r\n    // SubscriptCompiler has been loaded sync?\r\n    if ( window.wq?.SubscriptCompiler && !params.runtimeParams.async ) {\r\n        const { parse, compile } = window.wq.SubscriptCompiler;\r\n        const ast = parse( source, params.parserParams );\r\n        return createFunction( compile( ast, params.compilerParams ) );\r\n    }\r\n    // Load and run SubscriptCompiler async - in the background?\r\n    if ( !window.wq?.SubscriptCompilerWorker ) {\r\n        const customUrl = document.querySelector( 'meta[name=\"subscript-compiler-url\"]' );\r\n        const compilerUrl = customUrl?.content || `https://unpkg.com/@webqit/subscript/dist/compiler.js`;\r\n        const workerScriptText = `\r\n        importScripts( '${ compilerUrl }' );\r\n        const { parse, compile } = self.wq.SubscriptCompiler;\r\n        self.onmessage = e => {\r\n            const { source, params } = e.data;\r\n            const ast = parse( source, params.parserParams );\r\n            const compilation = compile( ast, params.compilerParams );\r\n            compilation.identifier = compilation.identifier.toString();\r\n            e.ports[ 0 ]?.postMessage( compilation );\r\n        };`;\r\n        window.wq = window.wq || {};\r\n        window.wq.SubscriptCompilerWorker = new Worker( `data:text/javascript;base64,${ btoa( workerScriptText ) }` );\r\n    }\r\n    return createFunction( new Promise( res => {\r\n        let messageChannel = new MessageChannel;\r\n        wq.SubscriptCompilerWorker.postMessage( { source, params }, [ messageChannel.port2 ] );\r\n        messageChannel.port1.onmessage = e => res( e.data );\r\n    } ) );\r\n}\r\n\r\n/**\r\n * @inspect\r\n */\r\nObject.defineProperty( SubscriptFunctionLite, 'inspect', { value: inspect } );\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport wqDom from '@webqit/dom';\r\nimport SubscriptFunctionLite from '@webqit/subscript/src/SubscriptFunctionLite.js';\r\n\r\n/**\r\n * @init\r\n * \r\n * @param Object $params\r\n */\r\nexport default function init( $params = {} ) {\r\n\tconst window = this, dom = wqDom.call( window );\r\n    // -------\r\n    // params\r\n    const params = dom.meta( 'oohtml' ).copyWithDefaults( $params, {\r\n        selectors: { script: 'script[type=\"subscript\"]', },\r\n        retention: 'retain',\r\n    } );\r\n    // -------\r\n    // realtime?\r\n    realtime.call( this, params );\r\n    // -------\r\n}\r\n\r\n/**\r\n * Performs realtime capture of elements and builds their relationships.\r\n *\r\n * @param Object params\r\n *\r\n * @return Void\r\n */\r\nfunction realtime( params ) {\r\n\tconst window = this, { dom } = window.wq;\r\n    // ---\r\n    window.wq.transformCache = new Map;\r\n    window.wq.compileCache = [ new Map, new Map, ];\r\n    // ---\r\n    const handled = () => {};\r\n\tdom.Realtime.intercept( window.document, 'script[scoped],script[contract]', record => {\r\n        record.incomingNodes.forEach( script => {\r\n            // ---\r\n            if ( 'contract' in script ) return handled( script );\r\n            Object.defineProperty( script, 'contract', { value: script.hasAttribute( 'contract' ) } ); \r\n            if ( 'scoped' in script ) return handled( script );\r\n            Object.defineProperty( script, 'scoped', { value: script.hasAttribute( 'scoped' ) } ); \r\n            // ---\r\n            const thisContext = script.scoped ? record.target : ( script.type === 'module' ? undefined : window );\r\n            compile.call( this, script, thisContext, params );\r\n        } );\r\n\t}, { subtree: true, on: 'connected' } );\r\n    // ---\r\n    window.wq.exec = ( execHash ) => {\r\n        const exec = fromHash( execHash );\r\n        if ( !exec ) throw new Error( `Argument must be a valid exec hash.` );\r\n        const { script, compiledScript, thisContext } = exec;\r\n        if ( thisContext instanceof window.Element && script.scoped ) {\r\n            if ( !thisContext.scripts ) { Object.defineProperty( thisContext, 'scripts', { value: new Set } ); }\r\n            thisContext.scripts.add( script );\r\n        }\r\n        switch ( params.retention ) {\r\n            case 'dispose':\r\n                script.remove();\r\n                break;\r\n            case 'hidden':\r\n                script.textContent = `\"hidden\"`;\r\n                break;\r\n            default:\r\n                script.textContent = compiledScript.function.originalSource;\r\n        }\r\n        return execute.call( this, compiledScript, thisContext, script );\r\n    };\r\n}\r\n\r\n// ------------------\r\n// Script runner\r\nexport function execute( compiledScript, thisContext, script ) {\r\n    if ( !compiledScript.function ) throw new Error( `Input script must already be compiled!` );\r\n    // Execute...\r\n    const returnValue = compiledScript.function.call( thisContext );\r\n    if ( compiledScript.contract ) {\r\n        Object.defineProperty( script, 'sync', { value: ( ...args ) => _await( returnValue, ( [ , sync ] ) => sync( ...args ) ) } );\r\n    }\r\n    // Observe,,,\r\n    const window = this, { dom } = window.wq;\r\n    if ( !( thisContext instanceof window.EventTarget ) ) return returnValue;\r\n    let changeHandler;\r\n    if ( script.contract ) {\r\n        changeHandler = e => { script.sync(); };\r\n        thisContext.addEventListener( 'namespacechange', changeHandler );\r\n        thisContext.addEventListener( 'statechange', changeHandler );\r\n    }\r\n    dom.Realtime.intercept( window.document, thisContext, () => {\r\n        if ( script.contract ) {\r\n            thisContext.removeEventListener( 'namespacechange', changeHandler );\r\n            thisContext.removeEventListener( 'statechange', changeHandler );\r\n        }\r\n        thisContext.dispatchEvent( new window.CustomEvent( 'beforeremove' ) );\r\n        thisContext.scripts.delete( script );\r\n    }, { subtree: true, on: 'disconnected' } );\r\n    return script;\r\n}\r\n\r\n// ------------------\r\n// JAVASCRIPT::[SCOPED|CONTRACT]\r\nexport function compile( script, thisContext, params = {} ) {\r\n    const wq = this.wq, cache = wq.compileCache[ script.contract ? 0 : 1 ];\r\n    const sourceHash = toHash( script.textContent );\r\n    // Script instances are parsed only once\r\n    let source = script.textContent, compiledScript;\r\n    if ( !( compiledScript = cache.get( sourceHash ) ) ) {\r\n        // Are there \"import\" (and \"await\") statements? Then, we need to rewrite that\r\n        let imports = [], meta = {};\r\n        let targetKeywords = [];\r\n        if ( script.type === 'module' ) targetKeywords.push( 'import ' );\r\n        if ( script.type === 'module' && !script.contract ) targetKeywords.push( 'await ' );\r\n        if ( targetKeywords.length && ( new RegExp( targetKeywords.join( '|' ) ) ).test( source ) ) {\r\n            [ imports, source, meta ] = parse( source );\r\n            if ( imports.length ) {\r\n                source = `\\n\\t${ rewriteImportStmts( imports ).join( `\\n\\t` ) }\\n\\t${ source }\\n`;\r\n            }\r\n        }\r\n        // Let's obtain a material functions\r\n        let _Function;\r\n        if ( script.contract ) {\r\n            const parserParams = {\r\n                ...( params.parserParams || {} ),\r\n                allowReturnOutsideFunction: false,\r\n                allowAwaitOutsideFunction: script.type === 'module',\r\n                allowSuperOutsideMethod: false,\r\n            }\r\n            const runtimeParams = {\r\n                ...( params.runtimeParams || {} ),\r\n                async: script.type === 'module',\r\n                apiVersion: 2,\r\n            };\r\n            _Function = SubscriptFunctionLite( source, { ...params, parserParams, runtimeParams, } );\r\n        } else {\r\n            const isAsync = script.type === 'module'//meta.topLevelAwait || imports.length;\r\n            const _FunctionConstructor = isAsync ? Object.getPrototypeOf( async function() {} ).constructor : Function;\r\n            _Function = params.runtimeParams?.compileFunction \r\n                ? params.runtimeParams.compileFunction( source )\r\n                : new _FunctionConstructor( source );\r\n            Object.defineProperty( _Function, 'originalSource', { configurable: true, value: script.textContent } );\r\n        }\r\n        // Save material function to compile cache\r\n        compiledScript = Object.defineProperty( script.cloneNode(), 'function', { value: _Function } );\r\n        script.scoped && Object.defineProperty( compiledScript, 'scoped', Object.getOwnPropertyDescriptor( script, 'scoped') );\r\n        script.contract && Object.defineProperty( compiledScript, 'contract', Object.getOwnPropertyDescriptor( script, 'contract') );\r\n        cache.set( sourceHash, compiledScript );\r\n    }\r\n    const execHash = toHash( { script, compiledScript, thisContext } );\r\n    script.textContent = `wq.exec('${ execHash }');`;\r\n}\r\n\r\n// ------------------\r\n// Match import statements\r\n// and detect top-level await\r\nexport function parse( source ) {\r\n    const [ tokens, meta ] = tokenize( source, ( $tokens, event, char, meta, i, isLastChar ) => {\r\n        \r\n        if ( event === 'start-enclosure' && char === '{' && !meta.openAsync?.type && meta.openEnclosures.length === meta.openAsync?.scopeId ) {\r\n            meta.openAsync.type = 'block';\r\n        } else if ( event === 'end-enclosure' && char === '}' && meta.openAsync?.type === 'block' && meta.openEnclosures.length === meta.openAsync.scopeId ) {\r\n            meta.openAsync = null;\r\n        } else if ( event === 'start-quote' && !meta.openEnclosures.length && [ 'starting', 'from' ].includes( meta.openImport ) ) {\r\n            meta.openImport = 'url';\r\n        } else if ( event === 'end-quote' && meta.openImport === 'url' ) {\r\n            meta.openImport = 'closing';\r\n        } else if ( event === 'char' ) {\r\n\r\n            if ( meta.openImport === 'closing' && (\r\n                char === ';'/* explicit */ || ![ ' ', `\\n` ].includes( char )/* implicit */ || isLastChar\r\n            ) ) {\r\n                if ( char === ';' || isLastChar ) {\r\n                    $tokens[ 0 ] += char;\r\n                    $tokens.unshift( '' );\r\n                } else { $tokens.unshift( char ); }\r\n                meta.openImport = null;\r\n                return false;\r\n            }\r\n\r\n            let remainder = source.substring( i - 1 );\r\n\r\n            if ( !meta.openImport && /^[\\W]?import[ ]*[^\\(]/.test( remainder ) ) {\r\n                meta.openImport = 'starting';\r\n                $tokens.unshift( '' );\r\n                return 6;\r\n            }\r\n            if ( meta.openImport === 'starting' && /^[\\W]?from /.test( remainder ) ) {\r\n                meta.openImport = 'from';\r\n                return 4;\r\n            }\r\n            if ( !meta.openAsync ) {\r\n                if ( /^[\\W]?async /.test( remainder ) ) {\r\n                    meta.openAsync = { scopeId: meta.openEnclosures.length };\r\n                    return 5;\r\n                }\r\n                if ( /^[\\W]?await /.test( remainder ) ) {\r\n                    meta.topLevelAwait = true;\r\n                    return 5;\r\n                }\r\n            }\r\n            if ( meta.openAsync ) {\r\n                if ( !meta.openAsync.type && /.?\\=\\>[ ]*?\\{/.test( remainder ) ) {\r\n                    meta.openAsync.type = 'inline-arrow';\r\n                } else if ( meta.openAsync.type === 'inline-arrow' && [ `\\n`, ';' ].includes( char ) && meta.openEnclosures.length === meta.openAsync.scopeId ) {\r\n                    meta.openAsync = null;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    } );\r\n    // Hoist all import statements\r\n    let imports = [], body = '', _str;\r\n    for ( const str of tokens.reverse() ) {\r\n        if ( ( _str = str.trim() ).startsWith( 'import ' ) ) {\r\n            imports.push( str );\r\n        } else if ( _str ) { body += str; }\r\n    }\r\n\r\n    return [ imports, body, meta ];\r\n}\r\n\r\n// ------------------\r\n// Rewrite import statements\r\nexport function rewriteImportStmts( imports ) {\r\n    const importSpecs = [], importPromises = [];\r\n    imports.forEach( ( $import, i ) => {\r\n        $import = parseImportStmt( $import );\r\n        // Identify whole imports and individual imports\r\n        const [ wholeImport, individualImports ] = $import.items.reduce( ( [ whole, parts ], item ) => {\r\n            return item.id === '*' ? [ item.alias, parts ] : [ whole, parts.concat( item ) ];\r\n        }, [ null, [] ] );\r\n        if ( wholeImport ) {\r\n            // const main = await import(\"url\");\r\n            importSpecs.push( `const ${ wholeImport } = __$imports$__[${ i }];` );\r\n        }\r\n        if ( individualImports.length ) {\r\n            // const { aa: bb, cc } = await import(\"url\");\r\n            const individualImportsSpec = individualImports.map( item => `${ item.id }${ item.id !== item.alias ? `: ${ item.alias }` : '' }` ).join( ', ' );\r\n            importSpecs.push( `const { ${ individualImportsSpec } } = __$imports$__[${ i }];` );\r\n        }\r\n        importPromises.push( `import(\"${ $import.url }\")` );\r\n    } );\r\n    return [\r\n        `\\n\\tconst __$imports$__ = await Promise.all([\\n\\t\\t${ importPromises.join( `,\\n\\t\\t` ) }\\n\\t]);`,\r\n        importSpecs.join( `\\n\\t` ),\r\n    ];\r\n}\r\n\r\n// ------------------\r\n// Parse import statements\r\nexport function parseImportStmt( str ) {\r\n    const getUrl = str => {\r\n        let quo = /^[`'\"]/.exec( str );\r\n        return quo && str.substring( 1, str.lastIndexOf( quo[ 0 ] ) );\r\n    }\r\n    let $import = { items: [ { id: '' } ] }, _str = str.replace( 'import', '' ).trim();\r\n    if ( !( $import.url = getUrl( _str ) ) ) {\r\n        tokenize( _str, ( $tokens, event, char, meta, i, isLastChar ) => {\r\n            if ( [ 'start-quote', 'ongoing-quote', 'end-quote', 'char' ].includes( event ) ) {\r\n                if ( $import.url ) return;\r\n                if ( !meta.openQuote ) {\r\n                    let remainder = _str.substring( i );\r\n                    if ( char === ',' ) {\r\n                        $import.items.unshift( { id: '' } );\r\n                        return;\r\n                    }\r\n                    if ( remainder.startsWith( ' as ' ) ) {\r\n                        $import.items[ 0 ].alias = '';\r\n                        return 3;\r\n                    }\r\n                    if ( remainder.startsWith( ' from ' ) ) {\r\n                        $import.url = getUrl( remainder.replace( 'from', '' ).trim() );\r\n                        return remainder.length;\r\n                    }\r\n                }\r\n                if ( 'alias' in $import.items[ 0 ] ) {\r\n                    $import.items[ 0 ].alias += char;\r\n                } else {\r\n                    $import.items[ 0 ].id += char;\r\n                    if ( meta.openEnclosures.length ) {\r\n                        $import.items[ 0 ].enclosed = true;\r\n                    }\r\n                }\r\n            }\r\n        } );\r\n    }\r\n    $import.items = $import.items\r\n        .map( item => ( {\r\n            id: item.id && !item.alias && !item.enclosed ? 'default' : item.id.trim(),\r\n            alias: item.alias ? item.alias.trim() : item.id.trim(),\r\n        } ) )\r\n        .filter( item => item.id )\r\n        .reverse();\r\n    return $import;\r\n}\r\n\r\n// ------------------\r\n// Token JavaScript source\r\nexport function tokenize( source, _callback ) {\r\n    const lastI = source.length - 1;\r\n    return [ ...source ].reduce( ( [ $tokens, meta, skip ], char, i ) => {\r\n        \r\n        if ( skip ) {\r\n            $tokens[ 0 ] += char;\r\n            return [ $tokens, meta, --skip ];\r\n        }\r\n        let callbackReturn;\r\n\r\n        if ( meta.openQuote || meta.openComment ) {\r\n            if ( char === meta.openQuote ) {\r\n                meta.openQuote = null;\r\n                callbackReturn = _callback( $tokens, 'end-quote', char, meta, i, i === lastI );\r\n            } else if ( meta.openQuote ) {\r\n                callbackReturn = _callback( $tokens, 'ongoing-quote', char, meta, i, i === lastI );\r\n            } else if ( meta.openComment ) {\r\n                if ( ( meta.openComment === '//' && char === `\\n` ) || ( meta.openComment === '/*' && $tokens[ 0 ].substr( -1 ) === '*' && char === '/' ) ) {\r\n                    meta.openComment = null;\r\n                    callbackReturn = _callback( $tokens, 'end-comment', char, meta, i, i === lastI );\r\n                }\r\n            }\r\n            if ( callbackReturn !== false ) {\r\n                $tokens[ 0 ] += char;\r\n            }\r\n            return [ $tokens, meta, typeof callbackReturn === 'number' ? callbackReturn : skip ];\r\n        }\r\n\r\n        let enclosure;\r\n        if ( enclosure = [ '()', '{}', '[]' ].filter( pair => char === pair[ 0 ] )[ 0 ] ) {\r\n            callbackReturn = _callback( $tokens, 'start-enclosure', char, meta, i, i === lastI );\r\n            meta.openEnclosures.unshift( enclosure );\r\n        } else if ( meta.openEnclosures.length && char === meta.openEnclosures[ 0 ][ 1 ] ) {\r\n            meta.openEnclosures.shift();\r\n            callbackReturn = _callback( $tokens, 'end-enclosure', char, meta, i, i === lastI );\r\n        } else if ( [ '\"', \"'\", \"`\" ].includes( char ) ) {\r\n            callbackReturn = _callback( $tokens, 'start-quote', char, meta, i, i === lastI );\r\n            meta.openQuote = char;\r\n        } else if ( !meta.openComment && [ '/*', '//' ].includes( source.substr( i, 2 ) ) ) {\r\n            callbackReturn = _callback( $tokens, 'start-comment', char, meta, i, i === lastI );\r\n            meta.openComment = source.substr( i, 2 );\r\n        } else {\r\n            callbackReturn = _callback( $tokens, 'char', char, meta, i, i === lastI );\r\n        }\r\n\r\n        if ( callbackReturn !== false ) {\r\n            $tokens[ 0 ] += char;\r\n        }\r\n        return [ $tokens, meta, typeof callbackReturn === 'number' ? callbackReturn : skip ];\r\n\r\n    }, [ [ '' ], { openEnclosures: [], }, 0 ] );\r\n}\r\n\r\n// ------------------\r\n// Unique ID generator\r\nconst hashTable = new Map;\r\nconst uniqId = () => (0|Math.random()*9e6).toString(36);\r\nconst _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\r\n\r\n// ------------------\r\n// Hash of anything generator\r\nexport function toHash( val ) {\r\n    let hash;\r\n    if ( !( hash = hashTable.get( val ) ) ) {\r\n        hash = uniqId();\r\n        hashTable.set( val, hash );\r\n    }\r\n    return hash;\r\n}\r\n\r\n// ------------------\r\n// Value of any hash\r\nexport function fromHash( hash ) {\r\n    let val;\r\n    hashTable.forEach( ( _hash, _val ) => {\r\n        if ( _hash === hash ) val = _val;\r\n    } );\r\n    return val;\r\n}\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport init from './index.js';\r\n\r\n/**\r\n * @init\r\n */\r\ninit.call( window );"],
  "mappings": "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",
  "names": []
}
